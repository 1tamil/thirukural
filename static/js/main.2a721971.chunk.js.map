{"version":3,"sources":["assets/images/thirukural.png","views/components/common/MyListCardItem.tsx","views/components/kural/KuralList.tsx","lib/hooks/useNavigation.tsx","views/components/kural/KuralRouteChip.tsx","views/pages/home/home.tsx","views/components/common/MyActionBar.tsx","views/components/common/MyAppBar.tsx","views/components/common/MyImageCard.tsx","views/components/common/MyDrawer.tsx","lib/hooks/useDrawer.tsx","views/pages/main/main.tsx","routes.ts","views/pages/search/search.tsx","state/reducers.ts","state/dummy/index.ts","state/store.ts","state/test.tsx","state/index.tsx","views/styles/theme.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","listItem","marginBottom","spacing","MyListCardItem","classes","ListItem","divider","root","Paper","elevation","className","KuralList","List","Array","from","keys","map","i","key","useNavigation","history","useHistory","route","push","display","flexDirection","justifyContent","alignItems","flexWrap","paddingTop","chipRoot","minWidth","fontSize","maxWidth","margin","KuralRouteChip","props","navigateTo","Container","items","item","index","Chip","size","label","onClick","navRoute","color","Home","flexGrow","appBar","bottom","top","MyActionBar","AppBar","position","Toolbar","Grid","xs","IconButton","edge","aria-label","icon","menuButton","marginRight","title","textAlign","MyAppBar","drawerToggle","Typography","variant","background","media","height","MyImageCard","Card","CardMedia","image","imagePath","paper","width","list","toggleDrawer","role","text","button","ListItemIcon","ListItemText","primary","Divider","MyDrawer","SwipeableDrawer","anchor","drawerProps","Image","defaultDrawerState","isOpened","useDrawer","state","React","useState","dState","setDState","status","ActionBarItems","routes","path","component","drawerState","open","swipeAreaWidth","onOpen","onClose","renderRoutes","exact","rootReducers","combineReducers","dummy","data","action","type","payload","devToolsEnhancer","composeWithDevTools","name","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","children","store","createMuiTheme","App","ThemeProvider","AppTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2a721971.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thirukural.91151f9d.png\";","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst MyListCardItem: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <ListItem divider={true} classes={{ root: classes.listItem }}>\n      <Paper elevation={1}>\n        <div className='content'>\n          பெண்ணியலார் எல்லாரும் கண்ணின் பொதுஉண்பர் நண்ணேன் பரத்தநின் மார்பு.\n        </div>\n      </Paper>\n    </ListItem>\n  );\n};\n\nexport default MyListCardItem;\n","import React from 'react';\n\nimport List from '@material-ui/core/List';\n\nimport MyListCardItem from './../common/MyListCardItem';\n\nconst KuralList: React.FC = () => {\n  return (\n    <List>\n      {Array.from(Array(10).keys()).map((i) => (\n        <MyListCardItem key={i} />\n      ))}\n    </List>\n  );\n};\n\nexport default KuralList;\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nconst useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n\nexport default useNavigation;\n","import React from 'react';\n\nimport { Container, makeStyles, Chip } from '@material-ui/core';\nimport useNavigation from 'src/lib/hooks/useNavigation';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingTop: theme.spacing(1),\n  },\n  chipRoot: {\n    minWidth: '15vw',\n    fontSize: '0.7em',\n    maxWidth: 150,\n    margin: `0 1vw 4px 0`,\n  },\n}));\n\ntype KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype KuralRouteChipProps = {\n  items: KuralChipItem[];\n};\n\nconst KuralRouteChip: React.FC<KuralRouteChipProps> = (\n  props: KuralRouteChipProps\n) => {\n  const classes = useStyles(props);\n  const [navigateTo] = useNavigation();\n  return (\n    <Container classes={{ root: classes.root }}>\n      {props.items.map((item, index) => (\n        <Chip\n          size='small'\n          label={item.label}\n          onClick={navigateTo(item.navRoute)}\n          color={item.color}\n          classes={{ root: classes.chipRoot }}\n          key={index}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default KuralRouteChip;\n","import React from 'react';\n\nimport KuralList from '../../components/kural/KuralList';\nimport KuralRouteChip from '../../components/kural/KuralRouteChip';\n\nconst Home: React.FC = () => {\n  return (\n    <>\n      <KuralRouteChip\n        items={[\n          { label: 'hello', navRoute: '/abc', color: 'primary' },\n          { label: 'world', navRoute: '/abc2', color: 'secondary' },\n          { label: 'hello', navRoute: '/abc', color: 'primary' },\n        ]}\n      />\n      <KuralList />\n    </>\n  );\n};\n\nexport default Home;\n","import * as React from 'react';\n\nimport { makeStyles, Grid } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useNavigation from 'src/lib/hooks/useNavigation';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n  },\n}));\n\ntype MyActionBarProps = {\n  items: Array<{\n    icon: any;\n    route: string;\n  }>;\n};\n\nconst MyActionBar: React.FC<MyActionBarProps> = (props: MyActionBarProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  return (\n    <div className={classes.root}>\n      <AppBar position='fixed' className={classes.appBar}>\n        <Toolbar>\n          {props.items.map((item, index) => (\n            <Grid xs={3} key={index}>\n              <IconButton\n                edge='start'\n                color='inherit'\n                aria-label='menu'\n                onClick={navigateTo(item.route)}>\n                {item.icon}\n              </IconButton>\n            </Grid>\n          ))}\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyActionBar;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    textAlign: 'center',\n  },\n}));\n\ntype MyAppBarProps = {\n  drawerToggle: (status: boolean) => void;\n  title: string;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position='sticky'>\n        <Toolbar>\n          <IconButton\n            onClick={(): void => {\n              props.drawerToggle(true);\n            }}\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            {props.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default MyAppBar;\n","import React from 'react';\n\nimport { Container, makeStyles, Card, CardMedia } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: 'rgb(232 199 24 / 78%)',\n  },\n  media: {\n    paddingTop: '100%',\n    height: 0,\n  },\n}));\n\ntype MyImageCardProps = {\n  imagePath: string;\n};\n\nconst MyImageCard: React.FC<MyImageCardProps> = (props: MyImageCardProps) => {\n  const classes = useStyles();\n  return (\n    <Container classes={{ root: classes.root }}>\n      <Card>\n        <CardMedia\n          image={props.imagePath}\n          title='thirukural'\n          className={classes.media}></CardMedia>\n      </Card>\n    </Container>\n  );\n};\n\nexport default MyImageCard;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer, {\n  SwipeableDrawerProps,\n} from '@material-ui/core/SwipeableDrawer';\nimport Image from 'src/assets/images/thirukural.png';\n\nimport MyImageCard from './MyImageCard';\n\ntype MyDrawerProps = {\n  drawerProps: SwipeableDrawerProps;\n  toggleDrawer: (status?: boolean) => void;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '60%',\n  },\n}));\nconst MyDrawer: React.FC<MyDrawerProps> = (props: MyDrawerProps) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <SwipeableDrawer\n        anchor='left'\n        {...props.drawerProps}\n        classes={{ paper: classes.paper }}>\n        <MyImageCard imagePath={Image} />\n        {list(props.toggleDrawer)}\n      </SwipeableDrawer>\n    </div>\n  );\n};\n\nconst list = (toggleDrawer: (staus?: boolean) => void) => (\n  <div\n    role='presentation'\n    onClick={(): void => {\n      toggleDrawer();\n    }}>\n    <List>\n      {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n        <ListItem button key={text}>\n          <ListItemIcon>{index % 2 === 0 ? 'ac' : 'dda'}</ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n    <Divider />\n    <List>\n      {['All mail', 'Trash', 'Spam'].map((text, index) => (\n        <ListItem button key={text}>\n          <ListItemIcon>{index % 2 === 0 ? 'ac' : 'dda'}</ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n  </div>\n);\n\nexport default MyDrawer;\n","import React from 'react';\n\ntype DrawerState = {\n  isOpened: boolean;\n};\n\ntype useDrawerType = (\n  state?: DrawerState\n) => [DrawerState, (status?: boolean) => void];\n\nconst defaultDrawerState: DrawerState = {\n  isOpened: false,\n};\nconst useDrawer: useDrawerType = (state = defaultDrawerState) => {\n  const [dState, setDState] = React.useState<DrawerState>(state);\n  const toggleDrawer = (status = !dState.isOpened): void => {\n    setDState({\n      ...dState,\n      isOpened: status,\n    });\n  };\n  return [dState, toggleDrawer];\n};\n\nexport default useDrawer;\n","import React from 'react';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { renderRoutes } from 'react-router-config';\n\nimport MyActionBar from '../../components/common/MyActionBar';\nimport MyAppBar from '../../components/common/MyAppBar';\nimport MyDrawer from '../../components/common/MyDrawer';\nimport useDrawer from './../../../lib/hooks/useDrawer';\n\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n  },\n  {\n    icon: <SearchIcon />,\n    route: '/search',\n  },\n  {\n    icon: <FavoriteIcon />,\n    route: '/favorite',\n  },\n  {\n    icon: <SettingsIcon />,\n    route: '/settings',\n  },\n];\n\nconst Main: React.FC<any> = (props: any) => {\n  const [drawerState, toggleDrawer] = useDrawer();\n  return (\n    <div className='container'>\n      <MyAppBar drawerToggle={toggleDrawer} title='Thirukural' />\n      <MyDrawer\n        toggleDrawer={toggleDrawer}\n        drawerProps={{\n          open: drawerState.isOpened,\n          swipeAreaWidth: 20,\n          onOpen: (): void => {\n            toggleDrawer();\n          },\n          onClose: (): void => {\n            toggleDrawer(false);\n          },\n        }}\n      />\n      {renderRoutes(props.route.routes)}\n      <MyActionBar items={ActionBarItems} />\n    </div>\n  );\n};\n\nexport default Main;\n","import { RouteConfig } from 'react-router-config';\n\nimport Home from './views/pages/home/home';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\n\nexport const routes: RouteConfig[] = [\n  {\n    path: '/',\n    component: Main,\n    routes: [\n      {\n        path: '/',\n        component: Home,\n        exact: true,\n      },\n      {\n        path: '/search',\n        component: Search,\n        exact: true,\n      },\n    ],\n  },\n];\n","import React from 'react';\n\nconst Search: React.FC = () => {\n  return <>Search</>;\n};\n\nexport default Search;\n","import { combineReducers } from 'redux';\n\nimport { reducer } from './dummy';\n\nexport const rootReducers = combineReducers({\n  dummy: reducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","type DummyAction = 'add';\n\nconst reducer = (\n  data = [1, 2, 3],\n  action: { type: DummyAction; payload: number }\n) => {\n  if (action.type === 'add') {\n    return [...data, action.payload];\n  }\n  return data;\n};\n\nconst AddItem = (item: number) => {\n  return {\n    type: 'add',\n    payload: item,\n  };\n};\n\nexport { AddItem, reducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import * as React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst App: React.FC = () => {\n  return (\n    <div className='App'>\n      <ThemeProvider theme={AppTheme}>\n        <StoreProvider>\n          <Router>{renderRoutes(routes)}</Router>\n        </StoreProvider>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}