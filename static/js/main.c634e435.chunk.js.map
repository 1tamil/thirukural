{"version":3,"sources":["state/kuralIndex/index.ts","lib/api/category.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","lib/api/index.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useRoute.tsx","lib/hooks/useFavorites.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","lib/hooks/useCategory.tsx","views/components/common/FavouriteToggle.tsx","views/components/common/ListView.tsx","state/title/index.ts","views/components/kural/RouteViewer.tsx","views/components/kural/ChapterViewer.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/KuralsByChapterViewer.tsx","lib/hooks/useSubCategory.tsx","views/components/kural/LiteratureViewer.tsx","views/components/kural/SectionViewer.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/home.tsx","views/pages/list/list.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","lib/hooks/useKuralHeader.tsx","views/components/kural/KuralSearch.tsx","views/pages/search/search.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx"],"names":["getLiteratureNoFromChapterNo","INDEX_MAP","chapterNo","isCategoryValidErr","Number","Object","keys","litChapMap","find","litId","isItemInRange","getSectionNoByLiteratureNo","literatureNo","section","map","secId","litIndex","getCategoryIds","category","categoryId","result","literature","chapter","getKuralIndex","firestore","a","collection","COLLECTION_NAME_MAP","get","indexSnapshot","getDocData","key","docs","doc","id","data","getAllBaseItems","lang","collectionKey","sectionSnapshot","value","getAllSections","getAllChapter","getAllLiterature","findChapterNoFromKuralNo","kuralNo","Math","ceil","isResultOfType","type","resType","startsWith","getKural","kId","KURAL","kuralSnapshotRef","getKuralDetail","KURAL_DETAIL","snapshot","getKuralsOfChapter","startKuralNo","kuralRangeIds","Array","from","i","kuralsRef","where","firebase","FieldPath","documentId","sort","b","getAllTransliterators","TRANSLITERATOR","transliteratorSnapRef","getUserPreferences","userId","USER_SETTINGS","limit","empty","Error","userDocRef","item","range","isCategoryValid","toBaseTypeMap","list","reduce","oldVal","defaultState","transliterator","index","KuralIndexReducer","state","action","payload","thunkInitKuralIndexMapAndUserPref","dispatch","userPref","kuralIndex","primaryLanguage","sectionMap","literatureMap","chapterMap","transliteratorMap","t1","applyPreference","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER","SearchCategoryLabelMap","all","kural","detail","SETTINGS_STORAGE","pref","defaultSettings","fontSize","SettingsReducer","settings","useNavigation","history","useHistory","route","push","CHIP_COLORS","getRoutes","categories","routes","color","useRoute","filter","useSelector","st","kuralIndexMap","React","useState","routeMap","setRouteMap","useEffect","length","options","k","rootCategoryFinder","getRouteValue","useCallback","output","input","isFavourite","localforage","getItem","items","undefined","setFavourite","status","instanceName","findIndex","v","slice","setItem","getFavorites","useFavorites","setSearchFilters","results","setSearchKeyword","keyword","filters","userSelections","useKuralSearch","search","useDispatch","searchTypes","types","isInteger","parseInt","searchNumber","e","findSuitableSearchTypes","useCategory","navigateTo","useStyles","makeStyles","theme","icon","fill","FavouriteToggle","props","classes","isActive","toggleActive","active","then","IconButton","size","onClick","handler","className","root","listItem","cursor","display","gridTemplateColumns","idWrap","alignItems","palette","primary","main","minWidth","opacity","textAlign","position","left","labelWrap","paddingLeft","spacing","ListView","List","ListItem","divider","onItemSelected","setTitle","title","flexDirection","justifyContent","flexWrap","paddingTop","paddingBottom","margin","chipRoot","height","breakpoints","up","maxWidth","RouteViewer","location","useLocation","useParams","console","log","currentRoute","Container","Chip","label","style","backgroundColor","ChapterViewer","onSelected","marginBottom","kuralListItem","badgeContainer","kuralBadge","top","kuralWrapper","width","kuralDetailAction","right","detailBar","kuralActionContainer","kuralAction","borderRadius","padding","KuralCard","showDetail","toggleDetail","split","first","second","badgePosition","showBadgeRight","vertical","horizontal","clsx","Badge","badgeContent","anchorOrigin","badge","max","borderBottom","fontWeight","transliteration","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","useFirestore","transliterators","setKural","kuralDetail","setKuralDetail","values","trans","t2","rank","t1r","t2r","useKuralDetail","transliteratorId","name","KuralDetailViewer","virtualize","SwipeableViews","params","ListKuralCard","kurals","KuralsByChapterViewer","resultCategory","setResult","useSubCategory","LiteratureViewer","SectionViewer","chapFavorites","FavoritesViewer","itemNo","useBaseItem","getChapter","chapters","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","chapterKuralMap","Map","forEach","it","chap","has","set","noRecordsFound","disablePadding","selected","button","ListItemText","Collapse","in","timeout","chapterInfo","component","ListSubheader","disableSticky","marginTop","favoriteCard","Home","Card","variant","CardHeader","CardContent","ListPage","renderRoutes","HideOnScroll","children","window","trigger","useScrollTrigger","target","Slide","appear","direction","flexGrow","menuButton","marginRight","MyAppBar","AppBar","Toolbar","Typography","actions","appBar","bottom","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","onChange","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","initRoute","isExact","pathname","setRoute","Main","chapterRoute","kuralRoute","useKuralHeader","createStyles","marginLeft","flex","iconButton","KuralSearch","setKeyword","clearSearchResults","useDebouncedCallback","debouncedCallback","searchKeyword","Paper","disabled","aria-label","InputBase","placeholder","inputProps","Divider","orientation","searchWrapper","searchFilter","kuralSearchItem","SearchChips","setFilters","hasStartsWith","f","filterOptions","isShow","Set","r","isSelected","selection","SearchResultItem","Search","renderItem","itemText","formControl","ROUTE_CONSTANTS","path","exact","fontSizeOptions","counter","FormControl","InputLabel","Select","labelId","MenuItem","to","App","rootReducers","combineReducers","concat","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","createMuiTheme","ReactDOM","render","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c634e435.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport {\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.INDEX_MAP)\n    .get();\n  const getDocData = (key: 'section' | 'litChapMap'): any =>\n    indexSnapshot.docs.find((doc) => doc.id === key);\n  return {\n    section: getDocData('section').data(),\n    litChapMap: getDocData('litChapMap').data(),\n  };\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestore\n    .collection(COLLECTION_NAME_MAP[collectionKey])\n    .get();\n  return sectionSnapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n} from './';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => `${startKuralNo + i}`\n  );\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await kuralsRef\n    .where(firebase.firestore.FieldPath.documentId(), 'in', kuralRangeIds)\n    .get();\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  const transliteratorSnapRef = await firestore\n    .collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n    .get();\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { UserPreference } from './types';\n\ntype UserPreferenceDocument = Exclude<UserPreference, 'userId'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<UserPreference> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER_SETTINGS)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    userId: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { UpdateSettingsAction } from './../settings';\nimport { applyPreference } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<\n  void,\n  AppState,\n  unknown,\n  InitIndexMapAction | UpdateSettingsAction\n> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    const userPref = await getUserPreferences(firestore, 'rajeshsundaram');\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(\n      await getAllSections(firestore, userPref.primaryLanguage)\n    );\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, userPref.primaryLanguage)\n    );\n    const chapterMap = toBaseTypeMap(\n      await getAllChapter(firestore, userPref.primaryLanguage)\n    );\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(applyPreference(userPref));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import { SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER_SETTINGS: 'USER_SETTINGS',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\n","import { UserPreference } from 'src/lib/api';\n\ntype LoadSettingsAction = { type: 'LoadSettings'; payload: UserPreference };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = LoadSettingsAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const defaultSettings: UserPreference = {\n  fontSize: 16,\n  primaryLanguage: 'TA',\n};\nexport const SettingsReducer = (\n  settings = defaultSettings,\n  action: SettingsActionTypes\n): UserPreference => {\n  switch (action.type) {\n    case 'LoadSettings':\n      return action.payload;\n    case 'UpdateSettings':\n      return { ...settings, ...action.payload };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst CHIP_COLORS = {\n  top: 'blueviolet',\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n};\n\nconst getRoutes: (categories: Partial<CategoryBaseTypeMap>) => RouteProp[] = (\n  categories\n) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'முப்பால்',\n      type: 'top',\n      route: '/list/section',\n      color: CHIP_COLORS.top,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `/list/${categories.section.id}/literature`,\n      color: CHIP_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `/list/${categories.literature.id}/chapter`,\n      color: CHIP_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      type: 'chapter',\n      route: `/list/${categories.chapter.id}/kural`,\n      color: CHIP_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      id: categories.kural.id,\n      value: `குறள்-${categories.kural.id}`,\n      type: 'kural',\n      route: `/list/kural/${categories.kural.id}`,\n      color: CHIP_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (filter: RouteMap) => [RouteMap, RouteProp[]];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    if (INDEX_MAP && Object.keys(routeMap).length === 0) {\n      if (filter.kural) {\n        filter.chapter = findChapterNoFromKuralNo(filter.kural);\n      }\n      setRouteMap({\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: filter.chapter,\n          literature: filter.literature,\n          section: filter.section,\n        }),\n        ...(filter.kural ? { kural: filter.kural } : {}),\n      });\n    }\n  }, [\n    INDEX_MAP,\n    routeMap,\n    filter.kural,\n    filter.chapter,\n    filter.literature,\n    filter.section,\n  ]);\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        default:\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  return [routeMap, getRoutes(getRouteValue())];\n};\n","import localforage from 'localforage';\nimport { Category, BaseType } from 'src/lib/api';\n\nconst FAV_STORAGE_PREFIX = 'favorite-';\n\ntype AllowedFavoritesType = Exclude<Category, 'section' | 'literature'>;\ntype isFavouriteType = (\n  id: number,\n  type: AllowedFavoritesType\n) => () => Promise<boolean>;\nconst isFavourite: isFavouriteType = (id, type) => {\n  return async (): Promise<boolean> => {\n    const items = await localforage.getItem(`${FAV_STORAGE_PREFIX}${type}`);\n    if (items) {\n      return (\n        ((items as unknown) as Array<number>).find((i) => i === id) !==\n        undefined\n      );\n    }\n    return false;\n  };\n};\n\ntype SetFavoriteType = (\n  id: number,\n  status: boolean,\n  type: AllowedFavoritesType\n) => Promise<boolean>;\nconst setFavourite: SetFavoriteType = async (id, status, type) => {\n  const instanceName = `${FAV_STORAGE_PREFIX}${type}`;\n  let items: Array<number> = await localforage.getItem(instanceName);\n  items = items ?? [];\n  if (status) {\n    items = [...items, id];\n  } else {\n    const index = items.findIndex((v) => v === id);\n    items = [...items.slice(0, index), ...items.slice(index + 1)];\n  }\n  await localforage.setItem(instanceName, items);\n  return true;\n};\n\n// const getFavoritesByType = async (\n//   type: AllowedFavoritesType\n// ): Promise<BaseType[]> => {\n//   const items: Array<number> = await localforage.getItem(\n//     `${FAV_STORAGE_PREFIX}${type}`\n//   );\n//   let result: BaseType[] = [];\n//   if (items) {\n//     const getBaseType = type === 'kural' ? getKural : getChapter;\n//     result = items.map((item) => getBaseType(item, 'TA'));\n//   }\n//   return result;\n// };\n\ntype GetFavoritesReturnType = Record<AllowedFavoritesType, BaseType[]>;\ntype GetFavoritesType = () => GetFavoritesReturnType;\nconst getFavorites: GetFavoritesType = () => {\n  const favorites: GetFavoritesReturnType = {\n    chapter: [], //getFavoritesByType('chapter'),\n    kural: [], //getFavoritesByType('kural'),\n  };\n  return favorites;\n};\ntype useFavoritesType = () => [\n  isFavouriteType,\n  SetFavoriteType,\n  GetFavoritesType\n];\nexport const useFavorites: useFavoritesType = () => {\n  return [isFavourite, setFavourite, getFavorites];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\n\ntype SearchStateActionType =\n  | SetSearchKeyword\n  | SetSearchResults\n  | AddSearchResults\n  | SetSearchFilters\n  | SetAllUserSelection\n  | SetUserSelection;\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\n// reducer\ntype SearchState = {\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return { ...state, results: [...state.results, ...action.payload] };\n  } else if (action.type === 'SetSearchResults') {\n    return { ...state, results: action.payload as SearchResult[] };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  }\n  return state;\n};\n","/* eslint-disable no-fallthrough */\nimport * as React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state/reducers';\nimport {\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [(keyword: string) => void, () => void];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nconst addResults = (\n  searchTypes: SearchTypes[],\n  keyword: string,\n  dispatch: Dispatch<any>\n): void => {\n  // searchTypes.forEach((type) => {\n  //   const items: SearchResult[] = [];\n  //   switch (type) {\n  //     case 'ByKuralNo':\n  //       items.push({ type, keyword, item: getKural(parseInt(keyword)) });\n  //       break;\n  //     case 'ByChapterNo':\n  //       items.push({ type, keyword, item: getChapter(parseInt(keyword)) });\n  //       break;\n  //     case 'ByLiteratureNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getLiterature(parseInt(keyword)) });\n  //       break;\n  //     case 'BySectionNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getSection(parseInt(keyword)) });\n  //       break;\n  //   }\n  //   if (items.length > 0) {\n  //     dispatch(appendSearchResults(items));\n  //   }\n  // });\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n  };\n  const clearSearch = (): void => {\n    dispatch(clearSearchResults());\n    dispatch(setSearchKeyword(''));\n    dispatch(setSearchFilters([]));\n  };\n  React.useEffect(() => {\n    // TODO: redux-thunk\n    const searchTypes = findSuitableSearchTypes(search.keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, search.keyword, dispatch);\n  }, [dispatch, search.keyword]);\n  return [setSearchKey, clearSearch];\n};\n","import { isCategoryValid, BaseType, Category } from 'src/lib/api';\n\nimport { useNavigation } from './useNavigation';\n\ntype SubCategoryListType = Exclude<Category, 'chapter' | 'kural'> | 'top';\n\ntype useCategoryType = (\n  type: SubCategoryListType,\n  key: number\n) => [BaseType[], (item: BaseType) => void];\nexport const useCategory: useCategoryType = (type, key) => {\n  const [navigateTo] = useNavigation();\n  if (type !== 'top') {\n    isCategoryValid(type, key);\n  }\n  // const items =\n  //    type === 'top'\n  //     ? getAllSections()\n  //     : type === 'section'\n  //     ? getLiteraturesBySection(key)\n  //     : getChaptersByLitrature(key);\n  const onItemSelected = (item: BaseType): void => {\n    switch (type) {\n      case 'top':\n        navigateTo(`/list/${item.id}/literature`)();\n        break;\n      case 'section':\n        navigateTo(`/list/${item.id}/chapter`)();\n        break;\n      case 'literature':\n        navigateTo(`/list/${item.id}/kural`)();\n        break;\n    }\n  };\n  return [[], onItemSelected];\n};\n","import React from 'react';\n\nimport { IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    fill: 'white',\n  },\n}));\n\ntype FavouriteToggleProps = {\n  className?: string;\n  active?: () => Promise<boolean>;\n  handler: (isActive: boolean) => Promise<boolean>;\n};\n\nconst FavouriteToggle: React.FC<FavouriteToggleProps> = (\n  props: FavouriteToggleProps\n) => {\n  const classes = useStyles();\n  const [isActive, toggleActive] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    if (props.active) {\n      props.active().then((isActive) => {\n        toggleActive(isActive);\n      });\n    }\n  });\n  const toggle = (): void => {\n    props.handler(!isActive).then((result) => {\n      if (result) {\n        toggleActive(!isActive);\n      }\n    });\n  };\n  return (\n    <IconButton size='small' onClick={toggle} className={props.className}>\n      {isActive && <FavoriteIcon className={classes.icon} />}\n      {!isActive && <FavoriteBorderIcon className={classes.icon} />}\n    </IconButton>\n  );\n};\n\nexport default FavouriteToggle;\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={true}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import React from 'react';\n\nimport { Container, makeStyles, Chip } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useParams, useLocation, RouteProps } from 'react-router-dom';\nimport { Category } from 'src/lib/api';\nimport { RouteProp, useRoute, useNavigation } from 'src/lib/hooks';\nimport { setTitle, setDefaultTitle } from 'src/state/title';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    margin: 0,\n  },\n  chipRoot: {\n    minWidth: '15vw',\n    fontSize: '0.7em',\n    height: '1.5em',\n    margin: `0 1vw 4px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles(props);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  // eslint-disable-next-line prefer-const\n  let { section, chapter, literature, kural } = useParams<\n    Partial<Record<Category, string>>\n  >();\n  console.log(\n    'section, chapter, literature, kural',\n    section,\n    chapter,\n    literature,\n    kural\n  );\n  const [navigateTo] = useNavigation();\n  const [, routes] = useRoute({\n    section: section ? Number(section) : undefined,\n    literature: literature ? Number(literature) : undefined,\n    chapter: chapter ? Number(chapter) : undefined,\n    kural: kural ? Number(kural) : undefined,\n  });\n  React.useEffect(() => {\n    const currentRoute = routes[routes.length - 1];\n    dispatch(\n      currentRoute.type === 'kural'\n        ? setDefaultTitle()\n        : setTitle(currentRoute.value)\n    );\n  }, [dispatch, location, routes]);\n\n  return (\n    <Container>\n      {routes.map((item, index) => (\n        <Chip\n          size='small'\n          label={item.value}\n          color={'primary'}\n          onClick={(): void => {\n            if (item.route) {\n              navigateTo(item.route)();\n            }\n          }}\n          style={{ backgroundColor: item.color }}\n          classes={{ root: classes.chipRoot }}\n          key={index}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default RouteViewer;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useCategory } from '../../../lib/hooks';\nimport ListView from '../common/ListView';\nimport RouteViewer from './../../components/kural/RouteViewer';\n\ntype ChapterViewerProps = {\n  className?: string;\n};\n\nconst ChapterViewer: React.FC<ChapterViewerProps> = (\n  props: ChapterViewerProps\n) => {\n  const { literature } = useParams<{ literature: string }>();\n  const [items, onSelected] = useCategory('literature', Number(literature));\n  return (\n    <>\n      <RouteViewer />\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onSelected(item)}\n      />\n    </>\n  );\n};\n\nexport default ChapterViewer;\n","import React from 'react';\n\nimport { makeStyles, Badge, IconButton, BadgeOrigin } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralDetail from './KuralDetail';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    marginBottom: theme.spacing(1),\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  kuralListItem: {\n    flexDirection: 'row',\n    alignItems: 'start',\n    justifyContent: 'space-between',\n  },\n  badgeContainer: {\n    position: 'absolute',\n  },\n  kuralBadge: {\n    opacity: 0.8,\n    height: '1.5em',\n    fontSize: '0.5em',\n    top: theme.spacing(-1),\n    left: 2,\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n  kuralDetailAction: {\n    position: 'absolute',\n    right: '-4px',\n    opacity: 0.3,\n  },\n  detailBar: {},\n  kuralActionContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  kuralAction: {\n    borderRadius: 'unset',\n    padding: 0,\n    width: '1em',\n    height: '1em',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  className?: string;\n  showBadgeRight?: boolean;\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const [showDetail, toggleDetail] = React.useState(false);\n  const [first, second] = props.kural.value.split('|');\n  const badgePosition: BadgeOrigin = props.showBadgeRight\n    ? { vertical: 'bottom', horizontal: 'right' }\n    : { vertical: 'top', horizontal: 'left' };\n  return (\n    <>\n      <ListItem\n        className={props.className}\n        divider={!showDetail}\n        classes={{ root: clsx(classes.listItem, classes.kuralListItem) }}>\n        <Badge\n          color='primary'\n          badgeContent={props.kural.id}\n          anchorOrigin={badgePosition}\n          classes={{\n            badge: classes.kuralBadge,\n            root: classes.badgeContainer,\n          }}\n          className='kural-badge'\n          max={1330}\n        />\n        <div\n          onClick={navigateTo(`/list/kural/${props.kural.id}`)}\n          className={classes.kuralWrapper}>\n          <div className='first'>{first}</div>\n          <div className='second'>{second}</div>\n        </div>\n        {showDetail && (\n          <IconButton\n            className={classes.kuralDetailAction}\n            size='small'\n            onClick={(): void => toggleDetail(!showDetail)}>\n            <ArrowForwardIosIcon />\n          </IconButton>\n        )}\n      </ListItem>\n\n      {showDetail && (\n        <ListItem divider={true} classes={{ root: clsx(classes.listItem) }}>\n          <KuralDetail kural={props.kural.id} />\n          {/* <div className={classes.detailBar}>\n            <div className={classes.kuralActionContainer}>\n              <IconButton size='small' classes={{ root: classes.kuralAction }}>\n                <PlayCircleFilledIcon fontSize='small' color='primary' />\n              </IconButton>\n              <IconButton size='small' classes={{ root: classes.kuralAction }}>\n                <InfoIcon fontSize='small' color='primary' />\n              </IconButton>\n            </div>\n          </div> */}\n        </ListItem>\n      )}\n    </>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    cursor: 'grab',\n  },\n  kural: {\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    flexDirection: 'column',\n    alignItems: 'self-end',\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      padding: '0.4em',\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <List\n      className={props.className}\n      classes={{ root: classes.root }}\n      {...props}>\n      {kural && <KuralCard kural={kural} className={classes.kural}></KuralCard>}\n      {kuralDetail &&\n        transliterators.map(({ id: transliteratorId, name }) => (\n          <ListItem key={transliteratorId} className={classes.transliteration}>\n            <Chip\n              size='small'\n              label={name}\n              color={'primary'}\n              className={'transliterator-name'}\n            />\n            <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n          </ListItem>\n        ))}\n    </List>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const {\n    settings: { primaryLanguage },\n    kuralIndexMap: { transliterator: transliterators },\n  } = useSelector((st: AppState) => st);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, primaryLanguage));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, primaryLanguage]);\n  const filteredTransliteratorMap = Object.values(transliterators)\n    .filter((trans) => trans.lang === primaryLanguage)\n    .sort((t1, t2) => {\n      const [t1r, t2r] = [t1.rank, t2.rank];\n      return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n    });\n  return [kural, kuralDetail, filteredTransliteratorMap];\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport RouteViewer from './../../components/kural/RouteViewer';\nimport KuralDetail from './KuralDetail';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const [navigateTo] = useNavigation();\n  const params = useParams<{ kural: string }>();\n  const [kural, setKural] = React.useState(parseInt(params.kural));\n  return (\n    <>\n      <RouteViewer />\n      <KuralDetail kural={kural} />\n      {/* <VirtualizeSwipeableViews\n        enableMouseEvents\n        animateHeight\n        index={kural}\n        onChangeIndex={(index, indexLatest): void => {\n          const kuralItem = getItemByPosition(\n            'kural',\n            index - indexLatest < 0 ? 'PREV' : 'NEXT',\n            kural\n          );\n          setKural(kuralItem);\n          navigateTo(`/list/kural/${kuralItem}`)();\n        }}\n        slideRenderer={({ key, index }): React.ReactNode => {\n          const calcIndex =\n            index > 1330 ? index % 1330 : index <= 0 ? index + 1330 : index;\n          // TODO: BUGFIX\n          return <KuralDetail key={key} kuralNo={calcIndex} />;\n        }}\n      /> */}\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { Kural } from 'src/lib/api';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingBottom: 0,\n    '& li:last-child': {\n      borderBottom: 'none',\n    },\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard key={k.id} kural={k} />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition } from 'src/lib/api';\nimport { useSubCategory, useNavigation } from 'src/lib/hooks';\n\nimport RouteViewer from './../../components/kural/RouteViewer';\nimport { ListKuralCard } from './ListKuralCard';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralsByChapterViewerProps = {\n  className?: string;\n};\n\nconst KuralsByChapterViewer: React.FC<KuralsByChapterViewerProps> = (\n  props: KuralsByChapterViewerProps\n) => {\n  const { chapter } = useParams<{ chapter: string }>();\n  // const [navigateTo] = useNavigation();\n  const kurals = useSubCategory('chapter', Number(chapter), 'kural');\n  return (\n    <>\n      <RouteViewer />\n      <div className={props.className}>\n        <ListKuralCard kurals={kurals} />\n        {/* <VirtualizeSwipeableViews\n          enableMouseEvents\n          animateHeight\n          index={parseInt(chapter)}\n          onChangeIndex={(index, indexLatest): void => {\n            const chap = parseInt(chapter);\n            if (index - indexLatest < 0) {\n              navigateTo(\n                `/list/${getItemByPosition('chapter', 'PREV', chap)}/kural`\n              )();\n            } else {\n              navigateTo(\n                `/list/${getItemByPosition('chapter', 'NEXT', chap)}/kural`\n              )();\n            }\n          }}\n          slideRenderer={({ key, index }): React.ReactNode => {\n            // TODO: Bug on 133 => 1 and 1 => 133 Note: index & key goes 134,145, 0, -1\n            // const chapterNo =\n            //   index > 133 ? index % 133 : index <= 0 ? index + 133 : index;\n            // TODO: pass kurals list\n            return <ListKuralCard key={key} kurals={[]} />;\n          }}\n        /> */}\n      </div>\n    </>\n  );\n};\n\nexport default KuralsByChapterViewer;\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n  toBaseTypeMap,\n} from '../api';\n\ntype useSubCategoryType = (\n  category: RootCategory,\n  id: number,\n  resultCategory: Category\n) => BaseType[];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  isCategoryValidErr(category, id);\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primaryLanguage } = useSelector((st: AppState) => st.settings);\n  // const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  React.useEffect(() => {\n    if (!result.length) {\n      // console.log('1');\n      if (category === 'chapter' && resultCategory === 'kural') {\n        // console.log('2');\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, primaryLanguage));\n        })();\n      } else {\n        // const { section, literature, chapter, index: INDEX_MAP } = KURAL_INDEX;\n        // console.log('literature', literature);\n        // if (INDEX_MAP) {\n        //   const [LITERATURES, CHAPTERS] = [\n        //     toBaseTypeMap(literature),\n        //     toBaseTypeMap(chapter),\n        //   ];\n        //   if (category === 'literature' && resultCategory === 'chapter') {\n        //     setResult(\n        //       fillRange(INDEX_MAP.litChapMap[id]).map((c) => CHAPTERS[c])\n        //     );\n        //   } else if (\n        //     category === 'section' &&\n        //     resultCategory === 'literature'\n        //   ) {\n        //     setResult(\n        //       fillRange(INDEX_MAP!!.section[id].litIndex).map(\n        //         (k) => LITERATURES[k]\n        //       )\n        //     );\n        //   } else if (category === 'section' && resultCategory === 'section') {\n        //     setResult(section);\n        //   } else {\n        //     throw new Error('category not supported');\n        //   }\n        // }\n      }\n    }\n  });\n\n  // if (INDEX_MAP) {\n  // }\n  return result;\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useCategory } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\nimport RouteViewer from './../../components/kural/RouteViewer';\n\ntype LiteratureViewerProps = {\n  className?: string;\n};\n\nconst LiteratureViewer: React.FC<LiteratureViewerProps> = (\n  props: LiteratureViewerProps\n) => {\n  const { section } = useParams();\n  const [items, onSelected] = useCategory('section', section);\n  return (\n    <>\n      <RouteViewer />\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onSelected(item)}\n      />\n    </>\n  );\n};\n\nexport default LiteratureViewer;\n","import React from 'react';\n\nimport { useCategory } from 'src/lib/hooks';\n\nimport RouteViewer from './../../components/kural/RouteViewer';\nimport ListView from './../common/ListView';\n\ntype SectionViewerProps = {\n  className?: string;\n};\n\nconst SectionViewer: React.FC<SectionViewerProps> = (\n  props: SectionViewerProps\n) => {\n  const [items, onSelected] = useCategory('top', 0);\n  return (\n    <>\n      <RouteViewer />\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onSelected(item)}\n      />\n    </>\n  );\n};\n\nexport default SectionViewer;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { findChapterNoFromKuralNo } from 'src/lib/api';\nimport { Chapter, Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation, useFavorites } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  list: {\n    '& .list-group': {},\n    '& .sub-list': {\n      // paddingTop: 16,\n      '& li:last-child': {\n        borderBottom: 'unset',\n        marginBottom: 'unset',\n      },\n    },\n    '& .sub-header': {\n      textAlign: 'left',\n      // lineHeight: '30px',\n      color: 'brown',\n    },\n  },\n  chapFavorites: {\n    paddingBottom: 0,\n    '& li:last-child': {\n      borderBottom: 'unset',\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const [chapters, setChapters] = React.useState<Chapter[]>([]);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  const [, , getFavorites] = useFavorites();\n  const onChapterSelected = (item: BaseType): void => {\n    navigateTo(`/list/${item.id}/kural`)();\n  };\n  const sortById = (items: BaseType[]): BaseType[] =>\n    items.sort((it1, it2) => it1.id - it2.id);\n  React.useEffect(() => {\n    // const { chapter, kural } = getFavorites();\n    // chapter.then((res) => setChapters(sortById(res)));\n    // kural.then((res) => setKurals(sortById(res)));\n  }, [getFavorites]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        <ListItem\n          selected={isKuralVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setKuralVisible(!isKuralVisible);\n          }}>\n          <ListItemText primary='Kurals' />\n          {isKuralVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isKuralVisible} timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard key={item.id} kural={item} />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        <ListItem\n          selected={isChapterVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setChapterVisible(!isChapterVisible);\n          }}>\n          <ListItemText primary='Chapters' />\n          {isChapterVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isChapterVisible} timeout='auto'>\n          {chapters.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={chapters}\n              onItemSelected={(item: BaseType): void => onChapterSelected(item)}\n            />\n          )}\n          {chapters.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { renderRoutes } from 'react-router-config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ListPage: React.FC<any> = (props: any) => {\n  const classes = useStyles();\n  return <div className={classes.root}>{renderRoutes(props.route.routes)}</div>;\n};\n\nexport default ListPage;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    textAlign: 'start',\n    flexGrow: 1,\n  },\n}));\n\ntype MyAppBarProps = {\n  title: string;\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant='h6' className={classes.title}>\n              {props.title}\n            </Typography>\n            {props.actions}\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyAppBar;\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = {};\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  {\n    icon: <SearchIcon />,\n    route: '/search',\n    label: 'Search',\n  },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  {\n    icon: <SettingsIcon />,\n    route: '/settings',\n    label: 'Settings',\n  },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\nimport { useKuralHeader } from 'src/lib/hooks';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  const [title, actions] = useKuralHeader();\n  return (\n    <div className='container'>\n      <MyAppBar title={title} actions={actions} />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport { AppState } from '../../state/reducers';\nimport FavouriteToggle from '../../views/components/common/FavouriteToggle';\nimport { useFavorites } from './useFavorites';\n\ntype useKuralHeaderType = () => [string, React.ReactNode];\nexport const useKuralHeader: useKuralHeaderType = () => {\n  const [isFavourite, setFavourite] = useFavorites();\n  const title = useSelector((st: AppState) => st.title);\n  const chapterRoute = useRouteMatch<{ chapter: string }>(\n    '/list/:chapter/kural'\n  );\n  const kuralRoute = useRouteMatch<{ kural: string }>('/list/kural/:kural');\n  let actions = null;\n  if (chapterRoute?.isExact) {\n    const chapterNo = parseInt(chapterRoute.params.chapter);\n    actions = (\n      <FavouriteToggle\n        active={isFavourite(chapterNo, 'chapter')}\n        handler={(isActive: boolean): Promise<boolean> =>\n          setFavourite(chapterNo, isActive, 'chapter')\n        }\n      />\n    );\n  } else if (kuralRoute?.isExact) {\n    const kuralNo = parseInt(kuralRoute.params.kural);\n    actions = (\n      <FavouriteToggle\n        active={isFavourite(kuralNo, 'kural')}\n        handler={(isActive: boolean): Promise<boolean> =>\n          setFavourite(kuralNo, isActive, 'kural')\n        }\n      />\n    );\n  }\n  return [title, actions];\n};\n","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useSelector } from 'react-redux';\nimport { AppState } from 'src/state/reducers';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n};\n\n/* const SearchOptions = [\n  {\n    id: 1,\n    label: 'All', // kural_no, startsWith, endsWith, contains\n  },\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n */\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const [setKeyword, clearSearchResults] = useKuralSearch();\n  const [debouncedCallback] = useDebouncedCallback((value: string) => {\n    setKeyword(value);\n  }, 500);\n  const [searchKeyword, setSearchKeyword] = React.useState<string>(\n    search.keyword\n  );\n  //   const onSearchOptionChange = console.log;\n  return (\n    <Paper component='form' className={classes.root}>\n      {/* <Select\n        labelId='demo-mutiple-name-label'\n        id='demo-mutiple-name'\n        multiple\n        value={[SearchOptions[0].id]}\n        onChange={onSearchOptionChange}\n        input={<Input />}\n        MenuProps={MenuProps}>\n        {SearchOptions.map((item) => (\n          <MenuItem key={item.id} value={item.label}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select> */}\n      <IconButton\n        disabled\n        type='submit'\n        color='primary'\n        className={classes.iconButton}\n        aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        // TODO: placeholder: 12, kural, chapter_name\n        placeholder='Search kurals'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          setSearchKeyword(e.target.value);\n          debouncedCallback(e.target.value);\n        }}\n        value={searchKeyword}\n      />\n      <Divider className={classes.divider} orientation='vertical' />\n      <IconButton\n        disabled={!search.keyword.length}\n        type='submit'\n        color='primary'\n        className={classes.iconButton}\n        onClick={(): void => {\n          setSearchKeyword('');\n          clearSearchResults();\n        }}\n        aria-label='search'>\n        <ClearIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Chip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n  isResultOfType,\n  SearchResult,\n  BaseType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state/reducers';\nimport { setUserSelection, setAllUserSelections } from 'src/state/search';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport KuralSearch from '../../components/kural/KuralSearch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  searchWrapper: {\n    textAlign: 'center',\n  },\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchChipsProps = {};\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst SearchChips: React.FC<SearchChipsProps> = (props: SearchChipsProps) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n\ntype SearchResultItem = {\n  item: BaseType;\n  label: string;\n  onClick: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItem> = ({\n  item,\n  label,\n  onClick,\n}: SearchResultItem) => {\n  return (\n    <div key={item.id} onClick={onClick}>\n      <div>{item.value}</div>\n    </div>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n\n  const renderItem = (item: SearchResult): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <KuralCard\n          key={item.item.id}\n          kural={item.item}\n          className={classes.kuralSearchItem}\n          showBadgeRight={true}\n        />\n        // <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    // if (isResultOfType(item, 'detail') && search.userSelections.detail) {\n    //   return <>detail: {item.item.value}</>;\n    // }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <div className={classes.searchWrapper}>\n        <KuralSearch />\n      </div>\n      <SearchChips />\n      <List>\n        {search.results.map((item, i) => (\n          <ListItem key={i} divider={true}>\n            {renderItem(item)}\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  InputLabel,\n  Select,\n  FormControl,\n  MenuItem,\n} from '@material-ui/core';\nimport localforage from 'localforage';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport {\n  applyPreference,\n  defaultSettings,\n  SETTINGS_STORAGE,\n} from '../../../state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {\n    fontSize: '1em',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const settings = useSelector((st: AppState) => st.settings);\n\n  const fontSizeOptions: Array<number> = [];\n  Array.from(Array(10).keys()).reduce((counter) => {\n    fontSizeOptions.push(counter);\n    counter = counter + 2;\n    return counter;\n  }, defaultSettings.fontSize - 4);\n  const onFontChange = (value: number): void => {\n    dispatch(applyPreference({ fontSize: value }));\n  };\n\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      await localforage.setItem(SETTINGS_STORAGE, settings);\n    })();\n  }, [settings]);\n\n  return (\n    <div className={props.className}>\n      <List>\n        <ListItem className={classes.item}>\n          <ListItemText\n            classes={{ primary: classes.itemText }}\n            primary='font size'\n          />\n          <FormControl className={classes.formControl}>\n            <InputLabel id='demo-simple-select-label'>Age</InputLabel>\n            <Select\n              labelId='demo-simple-select-label'\n              id='demo-simple-select'\n              value={settings.fontSize}\n              onChange={(e): void => onFontChange(e.target.value as number)}>\n              {fontSizeOptions.map((v) => (\n                <MenuItem key={v} value={v}>\n                  {v}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport ChapterViewer from './views/components/kural/ChapterViewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport KuralsByChapterViewer from './views/components/kural/KuralsByChapterViewer';\nimport LiteratureViewer from './views/components/kural/LiteratureViewer';\nimport SectionViewer from './views/components/kural/SectionViewer';\nimport Home from './views/pages/home/home';\nimport ListPage from './views/pages/list/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      /* {\n        path: ROUTE_CONSTANTS.FAVOURITE,\n        component: FavoritesViewer,\n        exact: true,\n      }, */\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListPage,\n        routes: [\n          {\n            path: '/list/section',\n            component: SectionViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:section/literature',\n            component: LiteratureViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:literature/chapter',\n            component: ChapterViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:chapter/kural',\n            component: KuralsByChapterViewer,\n            exact: true,\n          },\n          {\n            path: '/list/kural/:kural',\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: '/list*',\n            // eslint-disable-next-line react/display-name\n            component: (): React.ReactElement => (\n              <Redirect to='/list/1/kural' />\n            ),\n            exact: true,\n          },\n        ],\n      },\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => <Redirect to='/' />,\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const settings = useSelector((st: AppState) => st.settings);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div className={classes.root} style={{ fontSize: settings.fontSize }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { SettingsReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  settings: SettingsReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase.firestore().enablePersistence();\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}