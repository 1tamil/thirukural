{"version":3,"sources":["state/kuralIndex/index.ts","lib/api/category.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","lib/api/index.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useRoute.tsx","lib/hooks/useFavorites.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","lib/hooks/useCategory.tsx","views/components/common/FavouriteToggle.tsx","views/components/common/ListView.tsx","views/components/kural/ChapterViewer.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/components/kural/LiteratureViewer.tsx","views/components/kural/SectionViewer.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/home.tsx","state/title/index.ts","views/components/kural/RouteViewer.tsx","views/pages/list/list.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","lib/hooks/useKuralHeader.tsx","views/components/kural/KuralSearch.tsx","views/pages/search/search.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx"],"names":["getLiteratureNoFromChapterNo","INDEX_MAP","chapterNo","isCategoryValidErr","Number","Object","keys","litChapMap","find","litId","isItemInRange","getSectionNoByLiteratureNo","literatureNo","section","map","secId","litIndex","getCategoryIds","category","categoryId","result","literature","chapter","getKuralIndex","firestore","a","collection","COLLECTION_NAME_MAP","get","indexSnapshot","getDocData","key","docs","doc","id","data","getAllBaseItems","lang","collectionKey","sectionSnapshot","value","getAllSections","getAllChapter","getAllLiterature","findChapterNoFromKuralNo","kuralNo","Math","ceil","isResultOfType","type","resType","startsWith","getKural","kId","KURAL","kuralSnapshotRef","getKuralDetail","KURAL_DETAIL","snapshot","getKuralsOfChapter","startKuralNo","kuralRangeIds","Array","from","i","kuralsRef","where","firebase","FieldPath","documentId","sort","b","getAllTransliterators","TRANSLITERATOR","transliteratorSnapRef","getUserPreferences","userId","USER_SETTINGS","limit","empty","Error","userDocRef","item","range","fillRange","out","push","isCategoryValid","getItemByPosition","direction","getSectionPrev","getLiteraturePrev","getChapterPrev","kural","getKuralPrev","toBaseTypeMap","list","reduce","oldVal","defaultState","transliterator","index","KuralIndexReducer","state","action","payload","thunkInitKuralIndexMapAndUserPref","dispatch","userPref","kuralIndex","primaryLanguage","sectionMap","literatureMap","chapterMap","transliteratorMap","t1","applyPreference","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER","SearchCategoryLabelMap","all","detail","SETTINGS_STORAGE","pref","defaultSettings","fontSize","SettingsReducer","settings","useNavigation","history","useHistory","route","useSubCategory","resultCategory","useFirestore","React","useState","setResult","useSelector","st","KURAL_INDEX","kuralIndexMap","useEffect","length","c","k","CHIP_COLORS","getRoutes","categories","routes","color","useRoute","filter","inputFilter","setInputFilter","routeMap","setRouteMap","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","options","rootCategoryFinder","log","debug","listen","pathname","sectionRoute","matchPath","literatureRoute","chapterRoute","kuralRoute","newFilter","params","undefined","getRouteValue","useCallback","output","input","isFavourite","localforage","getItem","items","setFavourite","status","instanceName","findIndex","v","slice","setItem","getFavorites","useFavorites","setSearchFilters","results","setSearchKeyword","keyword","filters","userSelections","useKuralSearch","search","useDispatch","searchTypes","types","isInteger","parseInt","searchNumber","e","findSuitableSearchTypes","useCategory","navigateTo","useStyles","makeStyles","theme","icon","fill","FavouriteToggle","props","classes","isActive","toggleActive","active","then","IconButton","size","onClick","handler","className","root","listItem","cursor","display","gridTemplateColumns","idWrap","alignItems","palette","primary","main","minWidth","opacity","textAlign","position","left","labelWrap","paddingLeft","spacing","ListView","List","ListItem","divider","onItemSelected","ChapterViewer","useParams","onItemSelection","marginBottom","breakpoints","up","kuralListItem","flexDirection","justifyContent","badgeContainer","kuralBadge","height","top","kuralWrapper","width","kuralDetailAction","right","detailBar","kuralActionContainer","kuralAction","borderRadius","padding","KuralCard","showDetail","toggleDetail","split","first","second","badgePosition","showBadgeRight","vertical","horizontal","clsx","Badge","badgeContent","anchorOrigin","badge","max","borderBottom","fontWeight","transliteration","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","transliterators","setKural","kuralDetail","setKuralDetail","values","trans","t2","rank","t1r","t2r","useKuralDetail","transliteratorId","name","Chip","label","KuralDetailViewer","virtualize","SwipeableViews","paddingBottom","ListKuralCard","kurals","ListKuralsOfChapter","VirtualizeSwipeableViews","KuralsByChapterViewer","enableMouseEvents","overscanSlideBefore","overscanSlideAfter","onChangeIndex","indexLatest","chap","slideRenderer","nextIndex","mod","LiteratureViewer","SectionViewer","sections","chapFavorites","FavoritesViewer","itemNo","useBaseItem","getChapter","chapters","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","chapterKuralMap","Map","forEach","it","has","set","noRecordsFound","disablePadding","selected","button","ListItemText","Collapse","in","timeout","chapterInfo","component","ListSubheader","disableSticky","marginTop","favoriteCard","margin","Home","Card","variant","CardHeader","title","CardContent","setTitle","flexWrap","paddingTop","chipRoot","maxWidth","RouteViewer","Container","style","backgroundColor","ListPage","renderRoutes","HideOnScroll","children","window","trigger","useScrollTrigger","target","Slide","appear","flexGrow","menuButton","marginRight","MyAppBar","AppBar","Toolbar","Typography","actions","appBar","bottom","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","currentRoute","onChange","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","location","useLocation","initRoute","isExact","setRoute","Main","useKuralHeader","createStyles","marginLeft","flex","iconButton","KuralSearch","setKeyword","clearSearchResults","useDebouncedCallback","debouncedCallback","searchKeyword","Paper","disabled","aria-label","InputBase","placeholder","inputProps","Divider","orientation","searchWrapper","searchFilter","kuralSearchItem","SearchChips","setFilters","hasStartsWith","f","filterOptions","isShow","Set","r","isSelected","selection","SearchResultItem","Search","renderItem","itemText","formControl","ROUTE_CONSTANTS","path","exact","fontSizeOptions","counter","FormControl","InputLabel","Select","labelId","MenuItem","to","App","rootReducers","combineReducers","concat","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","render","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7e042ea4.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport {\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.INDEX_MAP)\n    .get();\n  const getDocData = (key: 'section' | 'litChapMap'): any =>\n    indexSnapshot.docs.find((doc) => doc.id === key);\n  return {\n    section: getDocData('section').data(),\n    litChapMap: getDocData('litChapMap').data(),\n  };\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestore\n    .collection(COLLECTION_NAME_MAP[collectionKey])\n    .get();\n  return sectionSnapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n} from './';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => `${startKuralNo + i}`\n  );\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await kuralsRef\n    .where(firebase.firestore.FieldPath.documentId(), 'in', kuralRangeIds)\n    .get();\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  const transliteratorSnapRef = await firestore\n    .collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n    .get();\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { UserPreference } from './types';\n\ntype UserPreferenceDocument = Exclude<UserPreference, 'userId'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<UserPreference> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER_SETTINGS)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    userId: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { UpdateSettingsAction } from './../settings';\nimport { applyPreference } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<\n  void,\n  AppState,\n  unknown,\n  InitIndexMapAction | UpdateSettingsAction\n> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    const userPref = await getUserPreferences(firestore, 'rajeshsundaram');\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(\n      await getAllSections(firestore, userPref.primaryLanguage)\n    );\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, userPref.primaryLanguage)\n    );\n    const chapterMap = toBaseTypeMap(\n      await getAllChapter(firestore, userPref.primaryLanguage)\n    );\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(applyPreference(userPref));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import { SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER_SETTINGS: 'USER_SETTINGS',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\n","import { UserPreference } from 'src/lib/api';\n\ntype LoadSettingsAction = { type: 'LoadSettings'; payload: UserPreference };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = LoadSettingsAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const defaultSettings: UserPreference = {\n  fontSize: 16,\n  primaryLanguage: 'TA',\n};\nexport const SettingsReducer = (\n  settings = defaultSettings,\n  action: SettingsActionTypes\n): UserPreference => {\n  switch (action.type) {\n    case 'LoadSettings':\n      return action.payload;\n    case 'UpdateSettings':\n      return { ...settings, ...action.payload };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category: RootCategory,\n  id: number,\n  resultCategory: Category\n) => BaseType[];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (category === resultCategory) {\n    throw new Error('Bad input');\n  }\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primaryLanguage } = useSelector((st: AppState) => st.settings);\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n  isCategoryValidErr(category, id);\n\n  React.useEffect(() => {\n    if (!result.length) {\n      if (category === 'chapter' && resultCategory === 'kural') {\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, primaryLanguage));\n        })();\n      } else {\n        const { literature, chapter, index: INDEX_MAP } = KURAL_INDEX;\n        if (INDEX_MAP) {\n          if (category === 'literature' && resultCategory === 'chapter') {\n            setResult(\n              fillRange(INDEX_MAP.litChapMap[id]).map((c) => chapter[c])\n            );\n          } else if (\n            category === 'section' &&\n            resultCategory === 'literature'\n          ) {\n            setResult(\n              fillRange(INDEX_MAP!!.section[id].litIndex).map(\n                (k) => literature[k]\n              )\n            );\n          } else {\n            throw new Error('category not supported');\n          }\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    firestore,\n    id,\n    primaryLanguage,\n    KURAL_INDEX,\n  ]);\n  return result;\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst CHIP_COLORS = {\n  top: 'blueviolet',\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n};\n\nconst getRoutes: (categories: Partial<CategoryBaseTypeMap>) => RouteProp[] = (\n  categories\n) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'முப்பால்',\n      type: 'top',\n      route: '/list/section',\n      color: CHIP_COLORS.top,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `/list/${categories.section.id}/literature`,\n      color: CHIP_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `/list/${categories.literature.id}/chapter`,\n      color: CHIP_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      type: 'chapter',\n      route: `/list/${categories.chapter.id}/kural`,\n      color: CHIP_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      id: categories.kural.id,\n      value: `குறள்-${categories.kural.id}`,\n      type: 'kural',\n      route: `/list/kural/${categories.kural.id}`,\n      color: CHIP_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (filter: RouteMap) => [RouteMap, RouteProp[]];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  history.listen(({ pathname }) => {\n    log.debug('pathname', pathname);\n    const sectionRoute = matchPath<{ section: string }>(\n      pathname,\n      '/list/:section/literature'\n    );\n    const literatureRoute = matchPath<{ literature: string }>(\n      pathname,\n      '/list/:literature/chapter'\n    );\n    const chapterRoute = matchPath<{ chapter: string }>(\n      pathname,\n      '/list/:chapter/kural'\n    );\n    const kuralRoute = matchPath<{ kural: string }>(\n      pathname,\n      '/list/kural/:kural'\n    );\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    log.debug('filters', newFilter);\n    setInputFilter(newFilter);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n  // TODO: direct access of http://localhost:3000/#/list/kural/631 doesn't show routes\n  return [routeMap, getRoutes(getRouteValue())];\n};\n","import localforage from 'localforage';\nimport { Category, BaseType } from 'src/lib/api';\n\nconst FAV_STORAGE_PREFIX = 'favorite-';\n\ntype AllowedFavoritesType = Exclude<Category, 'section' | 'literature'>;\ntype isFavouriteType = (\n  id: number,\n  type: AllowedFavoritesType\n) => () => Promise<boolean>;\nconst isFavourite: isFavouriteType = (id, type) => {\n  return async (): Promise<boolean> => {\n    const items = await localforage.getItem(`${FAV_STORAGE_PREFIX}${type}`);\n    if (items) {\n      return (\n        ((items as unknown) as Array<number>).find((i) => i === id) !==\n        undefined\n      );\n    }\n    return false;\n  };\n};\n\ntype SetFavoriteType = (\n  id: number,\n  status: boolean,\n  type: AllowedFavoritesType\n) => Promise<boolean>;\nconst setFavourite: SetFavoriteType = async (id, status, type) => {\n  const instanceName = `${FAV_STORAGE_PREFIX}${type}`;\n  let items: Array<number> = await localforage.getItem(instanceName);\n  items = items ?? [];\n  if (status) {\n    items = [...items, id];\n  } else {\n    const index = items.findIndex((v) => v === id);\n    items = [...items.slice(0, index), ...items.slice(index + 1)];\n  }\n  await localforage.setItem(instanceName, items);\n  return true;\n};\n\n// const getFavoritesByType = async (\n//   type: AllowedFavoritesType\n// ): Promise<BaseType[]> => {\n//   const items: Array<number> = await localforage.getItem(\n//     `${FAV_STORAGE_PREFIX}${type}`\n//   );\n//   let result: BaseType[] = [];\n//   if (items) {\n//     const getBaseType = type === 'kural' ? getKural : getChapter;\n//     result = items.map((item) => getBaseType(item, 'TA'));\n//   }\n//   return result;\n// };\n\ntype GetFavoritesReturnType = Record<AllowedFavoritesType, BaseType[]>;\ntype GetFavoritesType = () => GetFavoritesReturnType;\nconst getFavorites: GetFavoritesType = () => {\n  const favorites: GetFavoritesReturnType = {\n    chapter: [], //getFavoritesByType('chapter'),\n    kural: [], //getFavoritesByType('kural'),\n  };\n  return favorites;\n};\ntype useFavoritesType = () => [\n  isFavouriteType,\n  SetFavoriteType,\n  GetFavoritesType\n];\nexport const useFavorites: useFavoritesType = () => {\n  return [isFavourite, setFavourite, getFavorites];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\n\ntype SearchStateActionType =\n  | SetSearchKeyword\n  | SetSearchResults\n  | AddSearchResults\n  | SetSearchFilters\n  | SetAllUserSelection\n  | SetUserSelection;\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\n// reducer\ntype SearchState = {\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return { ...state, results: [...state.results, ...action.payload] };\n  } else if (action.type === 'SetSearchResults') {\n    return { ...state, results: action.payload as SearchResult[] };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  }\n  return state;\n};\n","/* eslint-disable no-fallthrough */\nimport * as React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state/reducers';\nimport {\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [(keyword: string) => void, () => void];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nconst addResults = (\n  searchTypes: SearchTypes[],\n  keyword: string,\n  dispatch: Dispatch<any>\n): void => {\n  // searchTypes.forEach((type) => {\n  //   const items: SearchResult[] = [];\n  //   switch (type) {\n  //     case 'ByKuralNo':\n  //       items.push({ type, keyword, item: getKural(parseInt(keyword)) });\n  //       break;\n  //     case 'ByChapterNo':\n  //       items.push({ type, keyword, item: getChapter(parseInt(keyword)) });\n  //       break;\n  //     case 'ByLiteratureNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getLiterature(parseInt(keyword)) });\n  //       break;\n  //     case 'BySectionNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getSection(parseInt(keyword)) });\n  //       break;\n  //   }\n  //   if (items.length > 0) {\n  //     dispatch(appendSearchResults(items));\n  //   }\n  // });\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n  };\n  const clearSearch = (): void => {\n    dispatch(clearSearchResults());\n    dispatch(setSearchKeyword(''));\n    dispatch(setSearchFilters([]));\n  };\n  React.useEffect(() => {\n    // TODO: redux-thunk\n    const searchTypes = findSuitableSearchTypes(search.keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, search.keyword, dispatch);\n  }, [dispatch, search.keyword]);\n  return [setSearchKey, clearSearch];\n};\n","import { isCategoryValid, BaseType, Category } from 'src/lib/api';\n\nimport { useNavigation } from './useNavigation';\n\ntype SubCategoryListType = Exclude<Category, 'chapter' | 'kural'> | 'top';\n\ntype useCategoryType = (\n  type: SubCategoryListType,\n  key: number\n) => (item: BaseType) => void;\nexport const useCategory: useCategoryType = (type, key) => {\n  const [navigateTo] = useNavigation();\n  if (type !== 'top') {\n    isCategoryValid(type, key);\n  }\n  const onItemSelected = (item: BaseType): void => {\n    switch (type) {\n      case 'top':\n        navigateTo(`/list/${item.id}/literature`)();\n        break;\n      case 'section':\n        navigateTo(`/list/${item.id}/chapter`)();\n        break;\n      case 'literature':\n        navigateTo(`/list/${item.id}/kural`)();\n        break;\n    }\n  };\n  return onItemSelected;\n};\n","import React from 'react';\n\nimport { IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    fill: 'white',\n  },\n}));\n\ntype FavouriteToggleProps = {\n  className?: string;\n  active?: () => Promise<boolean>;\n  handler: (isActive: boolean) => Promise<boolean>;\n};\n\nconst FavouriteToggle: React.FC<FavouriteToggleProps> = (\n  props: FavouriteToggleProps\n) => {\n  const classes = useStyles();\n  const [isActive, toggleActive] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    if (props.active) {\n      props.active().then((isActive) => {\n        toggleActive(isActive);\n      });\n    }\n  });\n  const toggle = (): void => {\n    props.handler(!isActive).then((result) => {\n      if (result) {\n        toggleActive(!isActive);\n      }\n    });\n  };\n  return (\n    <IconButton size='small' onClick={toggle} className={props.className}>\n      {isActive && <FavoriteIcon className={classes.icon} />}\n      {!isActive && <FavoriteBorderIcon className={classes.icon} />}\n    </IconButton>\n  );\n};\n\nexport default FavouriteToggle;\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={true}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useCategory, useSubCategory } from '../../../lib/hooks';\nimport ListView from '../common/ListView';\n\ntype ChapterViewerProps = {\n  className?: string;\n};\n\nconst ChapterViewer: React.FC<ChapterViewerProps> = (\n  props: ChapterViewerProps\n) => {\n  const { literature } = useParams<{ literature: string }>();\n  const items = useSubCategory('literature', Number(literature), 'chapter');\n  const onItemSelection = useCategory('literature', Number(literature));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default ChapterViewer;\n","import React from 'react';\n\nimport { makeStyles, Badge, IconButton, BadgeOrigin } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralDetail from './KuralDetail';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    marginBottom: theme.spacing(1),\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  kuralListItem: {\n    flexDirection: 'row',\n    alignItems: 'start',\n    justifyContent: 'space-between',\n  },\n  badgeContainer: {\n    position: 'absolute',\n  },\n  kuralBadge: {\n    opacity: 0.8,\n    height: '1.5em',\n    fontSize: '0.5em',\n    top: theme.spacing(-1),\n    left: 2,\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n  kuralDetailAction: {\n    position: 'absolute',\n    right: '-4px',\n    opacity: 0.3,\n  },\n  detailBar: {},\n  kuralActionContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  kuralAction: {\n    borderRadius: 'unset',\n    padding: 0,\n    width: '1em',\n    height: '1em',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  className?: string;\n  showBadgeRight?: boolean;\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const [showDetail, toggleDetail] = React.useState(false);\n  const [first, second] = props.kural.value.split('|');\n  const badgePosition: BadgeOrigin = props.showBadgeRight\n    ? { vertical: 'bottom', horizontal: 'right' }\n    : { vertical: 'top', horizontal: 'left' };\n  return (\n    <>\n      <ListItem\n        className={props.className}\n        divider={!showDetail}\n        classes={{ root: clsx(classes.listItem, classes.kuralListItem) }}>\n        <Badge\n          color='primary'\n          badgeContent={props.kural.id}\n          anchorOrigin={badgePosition}\n          classes={{\n            badge: classes.kuralBadge,\n            root: classes.badgeContainer,\n          }}\n          className='kural-badge'\n          max={1330}\n        />\n        <div\n          onClick={navigateTo(`/list/kural/${props.kural.id}`)}\n          className={classes.kuralWrapper}>\n          <div className='first'>{first}</div>\n          <div className='second'>{second}</div>\n        </div>\n        {showDetail && (\n          <IconButton\n            className={classes.kuralDetailAction}\n            size='small'\n            onClick={(): void => toggleDetail(!showDetail)}>\n            <ArrowForwardIosIcon />\n          </IconButton>\n        )}\n      </ListItem>\n\n      {showDetail && (\n        <ListItem divider={true} classes={{ root: clsx(classes.listItem) }}>\n          <KuralDetail kural={props.kural.id} />\n          {/* <div className={classes.detailBar}>\n            <div className={classes.kuralActionContainer}>\n              <IconButton size='small' classes={{ root: classes.kuralAction }}>\n                <PlayCircleFilledIcon fontSize='small' color='primary' />\n              </IconButton>\n              <IconButton size='small' classes={{ root: classes.kuralAction }}>\n                <InfoIcon fontSize='small' color='primary' />\n              </IconButton>\n            </div>\n          </div> */}\n        </ListItem>\n      )}\n    </>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    cursor: 'grab',\n  },\n  kural: {\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    flexDirection: 'column',\n    alignItems: 'self-end',\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      padding: '0.4em',\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <List\n      className={props.className}\n      classes={{ root: classes.root }}\n      {...props}>\n      {kural && <KuralCard kural={kural} className={classes.kural}></KuralCard>}\n      {kuralDetail &&\n        transliterators.map(({ id: transliteratorId, name }) => (\n          <ListItem key={transliteratorId} className={classes.transliteration}>\n            <Chip\n              size='small'\n              label={name}\n              color={'primary'}\n              className={'transliterator-name'}\n            />\n            <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n          </ListItem>\n        ))}\n    </List>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const {\n    settings: { primaryLanguage },\n    kuralIndexMap: { transliterator: transliterators },\n  } = useSelector((st: AppState) => st);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, primaryLanguage));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, primaryLanguage]);\n  const filteredTransliteratorMap = Object.values(transliterators)\n    .filter((trans) => trans.lang === primaryLanguage)\n    .sort((t1, t2) => {\n      const [t1r, t2r] = [t1.rank, t2.rank];\n      return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n    });\n  return [kural, kuralDetail, filteredTransliteratorMap];\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { mod } from 'react-swipeable-views-core';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition, isCategoryValid } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralDetail from './KuralDetail';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const [navigateTo] = useNavigation();\n  const params = useParams<{ kural: string }>();\n  const kuralNo = parseInt(params.kural);\n  return (\n    <>\n      <KuralDetail kural={kuralNo} />\n      {/* <RouteViewer /> */}\n      {/* <VirtualizeSwipeableViews\n        enableMouseEvents\n        overscanSlideBefore={kuralNo === 1 ? 0 : 1}\n        overscanSlideAfter={kuralNo === 1330 ? 0 : 1}\n        index={kuralNo - 1}\n        onChangeIndex={(index, indexLatest): void => {\n          navigateTo(\n            `/list/kural/${getItemByPosition(\n              'kural',\n              index - indexLatest < 0 ? 'PREV' : 'NEXT',\n              kuralNo\n            )}`\n          )();\n        }}\n        slideRenderer={({ key, index }): React.ReactNode => {\n          const nextIndex = mod(index, 1330) + 1;\n          // TODO: 1000 above requests firing when loading 1329th kural detail\n          return null; \n          //  isCategoryValid('kural', nextIndex) ? (\n          //   <KuralDetail key={key} kural={nextIndex} />\n          // ) : null; \n        }}\n      /> */}\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { Kural } from 'src/lib/api';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingBottom: 0,\n    '& li:last-child': {\n      borderBottom: 'none',\n    },\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard key={k.id} kural={k} />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const kurals = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { mod } from 'react-swipeable-views-core';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition, isCategoryValid } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport RouteViewer from './../../components/kural/RouteViewer';\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralsByChapterViewerProps = {\n  className?: string;\n};\n\nconst KuralsByChapterViewer: React.FC<KuralsByChapterViewerProps> = (\n  props: KuralsByChapterViewerProps\n) => {\n  const { chapter } = useParams<{ chapter: string }>();\n  const chapterNo = Number(chapter);\n  const [navigateTo] = useNavigation();\n  return (\n    <>\n      {/* <RouteViewer /> */}\n      <div className={props.className}>\n        <VirtualizeSwipeableViews\n          enableMouseEvents\n          overscanSlideBefore={chapterNo === 1 ? 0 : 1}\n          overscanSlideAfter={chapterNo === 133 ? 0 : 1}\n          index={chapterNo - 1}\n          onChangeIndex={(index, indexLatest): void => {\n            const chap = parseInt(chapter);\n            navigateTo(\n              `/list/${getItemByPosition(\n                'chapter',\n                index - indexLatest < 0 ? 'PREV' : 'NEXT',\n                chap\n              )}/kural`\n            )();\n          }}\n          slideRenderer={({ key, index }): React.ReactNode => {\n            const nextIndex = mod(index, 133) + 1;\n            return isCategoryValid('chapter', nextIndex) ? (\n              <ListKuralsOfChapter key={key} chapterNo={nextIndex} />\n            ) : null;\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default KuralsByChapterViewer;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useCategory, useSubCategory } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\n\ntype LiteratureViewerProps = {\n  className?: string;\n};\n\nconst LiteratureViewer: React.FC<LiteratureViewerProps> = (\n  props: LiteratureViewerProps\n) => {\n  const { section } = useParams<{ section: string }>();\n  const items = useSubCategory('section', Number(section), 'literature');\n  const onItemSelection = useCategory('section', Number(section));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default LiteratureViewer;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport ListView from './../common/ListView';\n\ntype SectionViewerProps = {\n  className?: string;\n};\n\nconst SectionViewer: React.FC<SectionViewerProps> = (\n  props: SectionViewerProps\n) => {\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [navigateTo] = useNavigation();\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={Object.values(sections)}\n        onItemSelected={(item): void => {\n          navigateTo(`/list/${item.id}/literature`)();\n        }}\n      />\n    </>\n  );\n};\n\nexport default SectionViewer;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { findChapterNoFromKuralNo } from 'src/lib/api';\nimport { Chapter, Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation, useFavorites } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  list: {\n    '& .list-group': {},\n    '& .sub-list': {\n      // paddingTop: 16,\n      '& li:last-child': {\n        borderBottom: 'unset',\n        marginBottom: 'unset',\n      },\n    },\n    '& .sub-header': {\n      textAlign: 'left',\n      // lineHeight: '30px',\n      color: 'brown',\n    },\n  },\n  chapFavorites: {\n    paddingBottom: 0,\n    '& li:last-child': {\n      borderBottom: 'unset',\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const [chapters, setChapters] = React.useState<Chapter[]>([]);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  const [, , getFavorites] = useFavorites();\n  const onChapterSelected = (item: BaseType): void => {\n    navigateTo(`/list/${item.id}/kural`)();\n  };\n  const sortById = (items: BaseType[]): BaseType[] =>\n    items.sort((it1, it2) => it1.id - it2.id);\n  React.useEffect(() => {\n    // const { chapter, kural } = getFavorites();\n    // chapter.then((res) => setChapters(sortById(res)));\n    // kural.then((res) => setKurals(sortById(res)));\n  }, [getFavorites]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        <ListItem\n          selected={isKuralVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setKuralVisible(!isKuralVisible);\n          }}>\n          <ListItemText primary='Kurals' />\n          {isKuralVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isKuralVisible} timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard key={item.id} kural={item} />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        <ListItem\n          selected={isChapterVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setChapterVisible(!isChapterVisible);\n          }}>\n          <ListItemText primary='Chapters' />\n          {isChapterVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isChapterVisible} timeout='auto'>\n          {chapters.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={chapters}\n              onItemSelected={(item: BaseType): void => onChapterSelected(item)}\n            />\n          )}\n          {chapters.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Home;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import React from 'react';\n\nimport { Container, makeStyles, Chip } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useRoute, useNavigation } from 'src/lib/hooks';\nimport { setTitle, setDefaultTitle } from 'src/state/title';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    margin: 0,\n  },\n  chipRoot: {\n    minWidth: '15vw',\n    fontSize: '0.7em',\n    height: '1.5em',\n    margin: `0 1vw 4px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles(props);\n  const [navigateTo] = useNavigation();\n  const dispatch = useDispatch();\n  const [, routes] = useRoute({});\n  React.useEffect(() => {\n    const { type, value } = routes[routes.length - 1];\n    dispatch(type === 'kural' ? setDefaultTitle() : setTitle(value));\n  }, [routes, dispatch]);\n\n  return (\n    <Container>\n      {routes.map((item, index) => (\n        <Chip\n          size='small'\n          label={item.value}\n          color={'primary'}\n          onClick={(): void => {\n            if (item.route) {\n              navigateTo(item.route)();\n            }\n          }}\n          style={{ backgroundColor: item.color }}\n          classes={{ root: classes.chipRoot }}\n          key={index}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default RouteViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { renderRoutes } from 'react-router-config';\nimport RouteViewer from 'src/views/components/kural/RouteViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ListPage: React.FC<any> = (props: any) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <RouteViewer />\n      {renderRoutes(props.route.routes)}\n    </div>\n  );\n};\n\nexport default ListPage;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    textAlign: 'start',\n    flexGrow: 1,\n  },\n}));\n\ntype MyAppBarProps = {\n  title: string;\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant='h6' className={classes.title}>\n              {props.title}\n            </Typography>\n            {props.actions}\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyAppBar;\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = {};\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  {\n    icon: <SearchIcon />,\n    route: '/search',\n    label: 'Search',\n  },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  {\n    icon: <SettingsIcon />,\n    route: '/settings',\n    label: 'Settings',\n  },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\nimport { useKuralHeader } from 'src/lib/hooks';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  const [title, actions] = useKuralHeader();\n  return (\n    <div className='container'>\n      <MyAppBar title={title} actions={actions} />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport { AppState } from '../../state/reducers';\nimport FavouriteToggle from '../../views/components/common/FavouriteToggle';\nimport { useFavorites } from './useFavorites';\n\ntype useKuralHeaderType = () => [string, React.ReactNode];\nexport const useKuralHeader: useKuralHeaderType = () => {\n  const [isFavourite, setFavourite] = useFavorites();\n  const title = useSelector((st: AppState) => st.title);\n  const chapterRoute = useRouteMatch<{ chapter: string }>(\n    '/list/:chapter/kural'\n  );\n  const kuralRoute = useRouteMatch<{ kural: string }>('/list/kural/:kural');\n  let actions = null;\n  if (chapterRoute?.isExact) {\n    const chapterNo = parseInt(chapterRoute.params.chapter);\n    actions = (\n      <FavouriteToggle\n        active={isFavourite(chapterNo, 'chapter')}\n        handler={(isActive: boolean): Promise<boolean> =>\n          setFavourite(chapterNo, isActive, 'chapter')\n        }\n      />\n    );\n  } else if (kuralRoute?.isExact) {\n    const kuralNo = parseInt(kuralRoute.params.kural);\n    actions = (\n      <FavouriteToggle\n        active={isFavourite(kuralNo, 'kural')}\n        handler={(isActive: boolean): Promise<boolean> =>\n          setFavourite(kuralNo, isActive, 'kural')\n        }\n      />\n    );\n  }\n  return [title, actions];\n};\n","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useSelector } from 'react-redux';\nimport { AppState } from 'src/state/reducers';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n};\n\n/* const SearchOptions = [\n  {\n    id: 1,\n    label: 'All', // kural_no, startsWith, endsWith, contains\n  },\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n */\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const [setKeyword, clearSearchResults] = useKuralSearch();\n  const [debouncedCallback] = useDebouncedCallback((value: string) => {\n    setKeyword(value);\n  }, 500);\n  const [searchKeyword, setSearchKeyword] = React.useState<string>(\n    search.keyword\n  );\n  //   const onSearchOptionChange = console.log;\n  return (\n    <Paper component='form' className={classes.root}>\n      {/* <Select\n        labelId='demo-mutiple-name-label'\n        id='demo-mutiple-name'\n        multiple\n        value={[SearchOptions[0].id]}\n        onChange={onSearchOptionChange}\n        input={<Input />}\n        MenuProps={MenuProps}>\n        {SearchOptions.map((item) => (\n          <MenuItem key={item.id} value={item.label}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select> */}\n      <IconButton\n        disabled\n        type='submit'\n        color='primary'\n        className={classes.iconButton}\n        aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        // TODO: placeholder: 12, kural, chapter_name\n        placeholder='Search kurals'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          setSearchKeyword(e.target.value);\n          debouncedCallback(e.target.value);\n        }}\n        value={searchKeyword}\n      />\n      <Divider className={classes.divider} orientation='vertical' />\n      <IconButton\n        disabled={!search.keyword.length}\n        type='submit'\n        color='primary'\n        className={classes.iconButton}\n        onClick={(): void => {\n          setSearchKeyword('');\n          clearSearchResults();\n        }}\n        aria-label='search'>\n        <ClearIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Chip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n  isResultOfType,\n  SearchResult,\n  BaseType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state/reducers';\nimport { setUserSelection, setAllUserSelections } from 'src/state/search';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport KuralSearch from '../../components/kural/KuralSearch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  searchWrapper: {\n    textAlign: 'center',\n  },\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchChipsProps = {};\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst SearchChips: React.FC<SearchChipsProps> = (props: SearchChipsProps) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n\ntype SearchResultItem = {\n  item: BaseType;\n  label: string;\n  onClick: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItem> = ({\n  item,\n  label,\n  onClick,\n}: SearchResultItem) => {\n  return (\n    <div key={item.id} onClick={onClick}>\n      <div>{item.value}</div>\n    </div>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n\n  const renderItem = (item: SearchResult): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <KuralCard\n          key={item.item.id}\n          kural={item.item}\n          className={classes.kuralSearchItem}\n          showBadgeRight={true}\n        />\n        // <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    // if (isResultOfType(item, 'detail') && search.userSelections.detail) {\n    //   return <>detail: {item.item.value}</>;\n    // }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <div className={classes.searchWrapper}>\n        <KuralSearch />\n      </div>\n      <SearchChips />\n      <List>\n        {search.results.map((item, i) => (\n          <ListItem key={i} divider={true}>\n            {renderItem(item)}\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  InputLabel,\n  Select,\n  FormControl,\n  MenuItem,\n} from '@material-ui/core';\nimport localforage from 'localforage';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport {\n  applyPreference,\n  defaultSettings,\n  SETTINGS_STORAGE,\n} from '../../../state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {\n    fontSize: '1em',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const settings = useSelector((st: AppState) => st.settings);\n\n  const fontSizeOptions: Array<number> = [];\n  Array.from(Array(10).keys()).reduce((counter) => {\n    fontSizeOptions.push(counter);\n    counter = counter + 2;\n    return counter;\n  }, defaultSettings.fontSize - 4);\n  const onFontChange = (value: number): void => {\n    dispatch(applyPreference({ fontSize: value }));\n  };\n\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      await localforage.setItem(SETTINGS_STORAGE, settings);\n    })();\n  }, [settings]);\n\n  return (\n    <div className={props.className}>\n      <List>\n        <ListItem className={classes.item}>\n          <ListItemText\n            classes={{ primary: classes.itemText }}\n            primary='font size'\n          />\n          <FormControl className={classes.formControl}>\n            <InputLabel id='demo-simple-select-label'>Age</InputLabel>\n            <Select\n              labelId='demo-simple-select-label'\n              id='demo-simple-select'\n              value={settings.fontSize}\n              onChange={(e): void => onFontChange(e.target.value as number)}>\n              {fontSizeOptions.map((v) => (\n                <MenuItem key={v} value={v}>\n                  {v}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport ChapterViewer from './views/components/kural/ChapterViewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport KuralsByChapterViewer from './views/components/kural/KuralsByChapterViewer';\nimport LiteratureViewer from './views/components/kural/LiteratureViewer';\nimport SectionViewer from './views/components/kural/SectionViewer';\nimport Home from './views/pages/home/home';\nimport ListPage from './views/pages/list/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      /* {\n        path: ROUTE_CONSTANTS.FAVOURITE,\n        component: FavoritesViewer,\n        exact: true,\n      }, */\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListPage,\n        routes: [\n          {\n            path: '/list/section',\n            component: SectionViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:section/literature',\n            component: LiteratureViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:literature/chapter',\n            component: ChapterViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:chapter/kural',\n            component: KuralsByChapterViewer,\n            exact: true,\n          },\n          {\n            path: '/list/kural/:kural',\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: '/list*',\n            // eslint-disable-next-line react/display-name\n            component: (): React.ReactElement => (\n              <Redirect to='/list/1/kural' />\n            ),\n            exact: true,\n          },\n        ],\n      },\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => <Redirect to='/' />,\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const settings = useSelector((st: AppState) => st.settings);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div className={classes.root} style={{ fontSize: settings.fontSize }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { SettingsReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  settings: SettingsReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'TRACE');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}