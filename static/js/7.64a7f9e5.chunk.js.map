{"version":3,"sources":["views/components/kural/RouteViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx"],"names":["useStyles","makeStyles","theme","routeContainer","display","root","flexDirection","justifyContent","alignItems","flexWrap","chipRoot","padding","fontSize","height","margin","spacing","breakpoints","up","maxWidth","paddingLeft","favoriteIcon","width","RouteChip","route","onLongPress","classes","useNavigation","navigateTo","longPressEventHandlers","useLongPress","isFavourite","icon","className","size","label","value","color","onClick","style","backgroundColor","RouteViewer","props","useRoute","routes","toggleRouteFavourite","clsx","map","item","index","renderRight","list","paddingTop","marginBottom","kuralCard","ListKuralCard","INDEX_MAP","useSelector","st","kuralIndexMap","openKuralDetail","kural","ROUTE_CONSTANTS","LIST","findCategoryRouteMapString","id","List","kurals","k","i","KuralCard","showBadge","ListKuralsOfChapter","useSubCategory","chapterNo","SwiperCore","use","Virtual","Keyboard","chapterKuralsList","KuralListSwipeable","history","useHistory","chapter","useParams","CHAPTER_NO","parseInt","React","useState","activeChapterNo","setActiveChapterNo","slideChapterIds","Array","from","ITEMS_COUNT_MAP","keys","useEffect","newRoute","debug","replace","Container","disableGutters","keyboard","grabCursor","initialSlide","spaceBetween","slidesPerView","allowSlideNext","length","virtual","onTransitionEnd","swiper","activeIndex","chId","virtualIndex","renderSlide"],"mappings":"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","file":"static/js/7.64a7f9e5.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n    '&.fav ': {\n      '& .label': {\n        paddingLeft: theme.spacing(0.5),\n      },\n    },\n  },\n  favoriteIcon: {\n    width: '0.7rem',\n    height: '0.7rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{\n        root: `${classes.chipRoot} ${route.isFavourite && 'fav'}`,\n        label: 'label',\n      }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { useSelector } from 'react-redux';\nimport { findCategoryRouteMapString, Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(\n      `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP!!, {\n        kural: kural.id,\n      })}`\n    )();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={i}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const [kurals] = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { findCategoryRouteMapString, ITEMS_COUNT_MAP } from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\nimport './swiper-custom.scss';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n  chapterKuralsList: {},\n}));\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const history = useHistory();\n  const { chapter } = useParams<{ chapter: string }>();\n  const CHAPTER_NO = parseInt(chapter);\n  const [activeChapterNo, setActiveChapterNo] = React.useState(CHAPTER_NO);\n  const slideChapterIds = Array.from(Array(ITEMS_COUNT_MAP.chapter).keys()).map(\n    (i) => i + 1\n  );\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { chapter: activeChapterNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeChapterNo, history]);\n  const renderSlide = (chId: number, index: number) => (\n    <SwiperSlide key={chId} virtualIndex={index}>\n      <ListKuralsOfChapter chapterNo={chId} />\n    </SwiperSlide>\n  );\n  return (\n    <div className={clsx(classes.chapterKuralsList, props.className)}>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={CHAPTER_NO!! - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideChapterIds[slideChapterIds.length - 1] !== activeChapterNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveChapterNo(swiper.activeIndex + 1);\n        }}>\n        {slideChapterIds.map((chId, index) => renderSlide(chId, index))}\n      </Swiper>\n    </div>\n  );\n};\nexport default KuralListSwipeable;\n"],"sourceRoot":""}