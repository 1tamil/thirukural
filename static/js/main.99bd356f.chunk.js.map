{"version":3,"sources":["state/kuralIndex/index.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useBaseItem.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","views/components/common/AnimatedExpandedIcon.tsx","views/components/category-viewer/category-list-item.tsx","views/components/category-viewer/category-viewer.tsx","views/components/category-viewer/category-viewer-container.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/RouteViewer.tsx","lib/hooks/useLongPress.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/pages/settings/RankTransliteratorSetting.tsx","views/components/kural/KuralSearch.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","views/components/common/ListView.tsx","views/components/favourite-viewer/chapter-fav-list.tsx","views/components/favourite-viewer/kural-fav-list.tsx","views/components/favourite-viewer/index.tsx","views/pages/home/index.tsx","views/pages/list/index.tsx","state/title/index.ts","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","views/pages/search/SearchChips.tsx","views/pages/search/search.tsx","views/pages/settings/BackgroundPicker.tsx","views/pages/settings/ColorPicker.tsx","views/components/common/DiscreteSlider.tsx","views/pages/settings/FontSizePicker.tsx","views/pages/settings/LanguagePicker.tsx","views/pages/settings/SettingItem.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx","lib/api/types.ts","lib/api/category.ts","lib/api/firestore.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","lib/api/route.ts","lib/api/user.ts","lib/api/index.ts"],"names":["defaultState","chapter","section","literature","transliterator","index","kurals","KuralIndexReducer","state","action","type","payload","thunkInitKuralIndexMapAndUserPref","firestore","dispatch","a","getUserPreferences","user","primary","preference","language","getKuralIndex","kuralIndex","toBaseTypeMap","getAllSections","sectionMap","getAllLiterature","literatureMap","getAllChapter","chapterMap","getAllTransliterators","transliteratorMap","reduce","oldVal","t1","id","Object","getKurals","kuralsMap","entries","k","v","value","setUser","updateUserFSAsync","updateUserPreference","applyPreference","pref","DEFAULT_COLORS","DEFAULT_BACKGROUND","ANONYOMOUS_USER","favorites","display","color","background","secondary","fontSizeType","FontSizeType","MEDIUM","PreferenceReducer","settings","useNavigation","history","useHistory","route","push","useSubCategory","category","resultCategory","Error","isCategoryValidErr","React","useState","result","setResult","KURAL_INDEX","useSelector","st","kuralIndexMap","getLiteraturesBySection","useCallback","sectionId","LITERATURE_MAP","INDEX_MAP","fillRange","litIndex","map","getChaptersFromLiterature","litId","CHAPTER_MAP","litChapMap","c","useEffect","getKuralIdsOfChapter","kId","length","useBaseItem","items","itemNo","categoryId","getCategoryIds","getRoutes","categories","favourites","isFavourite","filter","it","includes","routes","ROUTE_CONSTANTS","LIST_CATEGORY","CATEGORY_COLORS","default","LIST","kural","useRoute","inputFilter","setInputFilter","useFirestore","useDispatch","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","findChapterNoFromKuralNo","options","keys","find","rootCategoryFinder","log","debug","sectionRoute","matchPath","path","exact","literatureRoute","chapterRoute","kuralRoute","Number","params","undefined","listen","getRouteValue","output","input","shouldAddToList","favIndex","findIndex","datetime","Date","splice","sortSearchResults","SortValueMap","sort","b","status","keyword","results","filters","userSelections","detail","useKuralSearch","KURALS","addResults","searchTypes","forEach","kuralNo","parseInt","isCategoryValid","item","chapterNo","literatureNo","sectionNo","setSearchKeyword","types","isInteger","searchNumber","e","findSuitableSearchTypes","setSearchStatus","useStyles","makeStyles","theme","icon","palette","main","transform","transition","AnimatedExpandedIcon","isExpanded","className","style","classes","ExpandMore","clsx","listItem","cursor","position","borderRadius","spacing","WebkitTapHighlightColor","border","paddingLeft","listIcon","justifyContent","alignItems","TreeListItem","level","hasNodes","isOpen","label","toggleNode","focused","onClick","active","ListItem","ev","ListItemText","treeMenuContainer","outlineStyle","list","padding","CategoryViewer","props","List","key","itemProps","CategoryViewerContainer","chapterQueryParam","URLSearchParams","search","get","routeKey","replace","RegExp","sections","getChaptersByLiterature","TREE_DATA","values","s","sIndex","toString","nodes","lit","ch","chIndex","initialActiveKey","initialFocusKey","initialOpenNodes","split","substring","indexOf","getInitialOpenNodes","onClickItem","newRoute","lastItemSeparator","lastIndexOf","currentRoute","data","hasSearch","flexDirection","userSelect","breakpoints","up","badgeContainer","height","fontSize","lineHeight","minWidth","kuralWrapper","width","KuralCard","root","component","componentType","showBadge","dangerouslySetInnerHTML","__html","transliteratorList","only","minHeight","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","textAlign","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","PRIMARY_LANG","TRANSLITERATORS","setKural","kuralDetail","setKuralDetail","getUserTransliterators","userPreferedTranslits","getKuralDetail","useKuralDetail","transliterators","transliteratorId","name","Chip","size","routeContainer","flexWrap","chipRoot","margin","maxWidth","favoriteIcon","RouteChip","onLongPress","navigateTo","longPressEventHandlers","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","Favorite","backgroundColor","RouteViewer","toggleRouteFavourite","renderRight","SwiperCore","use","Virtual","Keyboard","KuralDetailViewer","useParams","activeKuralNo","setActiveKuralNo","slideKuralIds","Array","from","ITEMS_COUNT_MAP","i","findCategoryRouteMapString","Container","disableGutters","autoHeight","keyboard","grabCursor","initialSlide","spaceBetween","slidesPerView","allowSlideNext","virtual","onTransitionEnd","swiper","activeIndex","virtualIndex","renderSlide","kuralCard","ListKuralCard","openKuralDetail","ListKuralsOfChapter","TransliteratorSectionType","chapterKuralsList","SEARCH_ROUTE","createStyles","borderColor","fade","grey","searchicon","clearIcon","flex","light","KuralSearch","inputRef","useRef","setSearchKey","debounced","useDebouncedCallback","setKeyword","isExact","isSearchRoute","focus","setFocus","current","querySelector","InputBase","ref","placeholder","inputProps","onChange","text","target","onFocus","onSearchTap","Fade","in","trim","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","toolbar","avatar","marginLeft","actionsGroup","searchbar","marginRight","flexGrow","iconButton","MyAppBar","AppBar","elevation","Toolbar","actions","gridTemplateColumns","idWrap","opacity","left","labelWrap","ListView","divider","showDivider","onItemSelected","chapFavorites","paddingRight","ChapterFavList","getChapter","chapterIds","KuralFavList","chapterKuralMap","setchapterKuralMap","onKuralSelected","chapMap","kuralIds","chap","chapId","chapterInfo","disablePadding","ListSubheader","disableSticky","collapsableGroup","listItemTitle","favCount","IDB_FAV_TOGGLE_STATE","FavoritesViewer","filterFav","KURAL_IDS","CHAPTER_IDS","expanded","visiblity","setVisiblity","then","JSON","parse","set","stringify","noRecordsFound","GroupTitleMaker","isVisible","title","collapseContent","selected","button","inset","Collapse","timeout","marginTop","favoriteCard","Home","Card","variant","CardHeader","CardContent","defalutTitle","appBar","bottom","top","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","setRoute","Main","renderRoutes","searchFilter","SearchChips","setFilters","hasStartsWith","f","startsWith","filterOptions","SearchCategoryLabelMap","all","isShow","Set","r","isSelected","selection","kuralSearchItem","searchItem","searchItemAvatar","SearchResultItem","innerContent","Avatar","charAt","toUpperCase","Search","getOnClickRoute","isResultOfType","renderItem","colorItemContainer","gridTemplateRows","gridGap","colorItem","BackgroundOption","itemSelected","setItemSelection","onSelect","ListItemIcon","CheckBox","BackgroundPicker","useFirestoreConnect","COLLECTION_NAME_MAP","DISPLAY","DISPLAY_CONFIG","USER_BG_COLOR","BG_COLORS","CONFIG","colors","getColors","userPreference","updateUserDisplayColor","ICON_MAP","Grade","Whatshot","ColorItem","Check","ColorPicker","USER_COLOR","COLORS","StyledSlider","withStyles","thumb","track","rail","mark","right","content","markActive","Slider","DiscreteSlider","aria-labelledby","valueLabelDisplay","sliderWrapper","sliderRoot","FontSizePicker","FONT_SIZE_MAP","marks","aria-label","step","min","TINY","max","BIG","fontType","languageItem","languageItemText","LanguagePicker","LANGUAGE","languageMap","getOrderedLangIds","sortedIds","toLocaleLowerCase","orderedLangIds","setOrderdLangIds","onDragEnd","source","destination","reordered","droppableId","provided","snapshot","isDraggingOver","droppableProps","innerRef","langId","draggableId","isDragging","draggableProps","dragHandleProps","DragHandle","disableTypography","subList","subHeader","subListItem","subListItemText","TransliteratorLabel","inactive","toUserLikedTranslitsMap","RankTransliteratorSetting","userTransLits","setUserTransLits","updateState","reorderedTransliterors","srcList","ACTIVE","INACTIVE","transilterators","t","subheader","tItem","DragIndicator","itemLabel","itemChild","listItemIcon","SettingItem","showExpandIcon","isItemExpanded","toggleItem","suffix","container","unmountOnExit","itemText","formControl","fontSizePicker","SettingsLabel","Settings","FormatSize","People","Language","Palette","Colorize","ROOT","SEARCH","FAVOURITE","SETTINGS","SettingsViewer","activeChapterNo","setActiveChapterNo","slideChapterIds","chId","render","match","url","ROUTE_REGEX","test","to","App","rootReducers","combineReducers","concat","firebase","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","getLiteratureNoFromChapterNo","isItemInRange","getSectionNoByLiteratureNo","secId","firestoreGetCacheFirst","empty","collection","indexSnapshot","getDocData","docs","doc","getAllBaseItems","lang","collectionKey","sectionSnapshot","Math","ceil","resType","LARGE","SMALL","KURAL","kuralSnapshotRef","KURAL_DETAIL","startKuralNo","TRANSLITERATOR","transliteratorSnapRef","userId","USER","where","FieldPath","documentId","limit","userDocRef","range","out","findCategoryRouteMap","join","convertCategoryRouteMapToString","transliteratorsMap","tMap","userLangs","getUserPreferedLanguages","userTMap","some","userLikedTransliterators","allowedTransliteratorIds","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER"],"mappings":"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","file":"static/js/main.99bd356f.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n  kurals: {},\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getKurals,\n  getUserPreferences,\n  Kural,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    const kuralsMap = Object.entries(\n      await getKurals(firestore, primary)\n    ).reduce(\n      (oldVal, [k, v]) => ({\n        ...oldVal,\n        [k]: ({ id: k, value: v } as unknown) as Kural,\n      }),\n      {}\n    ) as Record<number, Kural>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n        kurals: kuralsMap,\n      },\n    });\n  };\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  FontSizeType,\n  updateUserPreference,\n  User,\n  UserPreference,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const DEFAULT_COLORS: string[] = [\n  'rgb(29, 161, 242)',\n  'rgb(224, 36, 94)',\n  'rgb(23, 191, 99)',\n];\nexport const DEFAULT_BACKGROUND: string[] = [\n  'rgb(29, 161, 242)',\n  'rgb(224, 36, 94)',\n  'rgb(23, 191, 99)',\n];\n\nexport const ANONYOMOUS_USER: User = {\n  id: 'anonymous',\n  favorites: [],\n  preference: {\n    display: {\n      color: DEFAULT_COLORS[0],\n      background: DEFAULT_BACKGROUND[0],\n    },\n    language: {\n      primary: 'ta',\n      secondary: [],\n    },\n    fontSizeType: FontSizeType.MEDIUM,\n  },\n};\nexport const PreferenceReducer = (\n  settings = ANONYOMOUS_USER,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralIdsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category?: RootCategory,\n  id?: number,\n  resultCategory?: Category\n) => [BaseType[], (id: number) => BaseType[], (id: number) => BaseType[]];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (id && category && resultCategory) {\n    if (category === resultCategory) {\n      throw new Error('Bad input');\n    }\n    isCategoryValidErr(category, id);\n  }\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  const getLiteraturesBySection = React.useCallback(\n    (sectionId: number): BaseType[] => {\n      const { literature: LITERATURE_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('section', sectionId);\n      return fillRange(INDEX_MAP!!.section[sectionId].litIndex).map(\n        (k) => LITERATURE_MAP[k]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  const getChaptersFromLiterature = React.useCallback(\n    (litId: number): BaseType[] => {\n      const { chapter: CHAPTER_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('literature', litId);\n      return fillRange(INDEX_MAP!!.litChapMap[litId]).map(\n        (c) => CHAPTER_MAP[c]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  React.useEffect(() => {\n    if (id && category === 'chapter' && resultCategory === 'kural') {\n      setResult(getKuralIdsOfChapter(id).map((kId) => KURAL_INDEX.kurals[kId]));\n    }\n  }, [KURAL_INDEX.kurals, category, id, resultCategory]);\n\n  React.useEffect(() => {\n    if (!result.length && id && resultCategory !== 'kural') {\n      const { index: INDEX_MAP } = KURAL_INDEX;\n      if (INDEX_MAP) {\n        if (category === 'literature' && resultCategory === 'chapter') {\n          setResult(getChaptersFromLiterature(id));\n        } else if (category === 'section' && resultCategory === 'literature') {\n          setResult(getLiteraturesBySection(id));\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    id,\n    KURAL_INDEX,\n    getLiteraturesBySection,\n    getChaptersFromLiterature,\n  ]);\n\n  return [result, getLiteraturesBySection, getChaptersFromLiterature];\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  CATEGORY_COLORS,\n  UserFavourite,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: UserFavourite[]\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const isFavourite = (category: Category, id: number) => {\n    return favourites\n      .filter((it) => it.category === category)\n      .map((it) => it.id)\n      .includes(id);\n  };\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: ROUTE_CONSTANTS.LIST_CATEGORY,\n      color: CATEGORY_COLORS.default,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section.id}`,\n      color: CATEGORY_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section!!.id}/${\n        categories.literature.id\n      }`,\n      color: CATEGORY_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: isFavourite('chapter', categories.chapter.id),\n      type: 'chapter',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter.id}`,\n      color: CATEGORY_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: isFavourite('kural', categories.kural.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter!!.id}/${categories.kural.id}`,\n      color: CATEGORY_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.user);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section`,\n      exact: true,\n    });\n    const literatureRoute = matchPath<{ literature: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section/:literature`,\n      exact: true,\n    });\n    // TODO: category & list route for chapter\n    const chapterRoute = matchPath<{ chapter: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n      exact: true,\n    });\n    const kuralRoute = matchPath<{ kural: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n      exact: true,\n    });\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    // log.debug('route path values => ', JSON.stringify(newFilter));\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    // TODO: enable logs after debounceing\n    // log.debug('detect route => ', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites = user.favorites;\n      const favIndex = favorites.findIndex(\n        (it) => it.category === route.type && it.id === route.id\n      );\n      if (shouldAddToList && favIndex === -1) {\n        favorites = [\n          ...favorites,\n          { id: route.id, datetime: new Date(), category: route.type },\n        ];\n      } else {\n        favorites.splice(favIndex, 1);\n      }\n      dispatch(\n        updateUserFSAsync(firestore, {\n          ...user,\n          favorites,\n        })\n      );\n    }\n  };\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\nconst sortSearchResults = (items: SearchResult[]) => {\n  const SortValueMap: Record<Category, number> = {\n    kural: 1,\n    chapter: 2,\n    literature: 3,\n    section: 4,\n  };\n  return items.sort(\n    (a, b) => SortValueMap[a.category] - SortValueMap[b.category]\n  );\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults([...state.results, ...action.payload]),\n    };\n  } else if (action.type === 'SetSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults(action.payload as SearchResult[]),\n    };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { SearchResult, SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport {\n  appendSearchResults,\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const { literature, section, chapter } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword);\n  };\n\n  const addResults = (searchTypes: SearchTypes[], keyword: string): void => {\n    searchTypes.forEach(async (type) => {\n      const items: SearchResult[] = [];\n      switch (type) {\n        case 'ByKuralNo':\n          const kuralNo = parseInt(keyword);\n          if (isCategoryValid('kural', kuralNo)) {\n            items.push({\n              type,\n              keyword,\n              category: 'kural',\n              item: KURALS[kuralNo],\n            });\n          }\n          break;\n        case 'ByChapterNo':\n          const chapterNo = parseInt(keyword);\n          if (isCategoryValid('chapter', chapterNo)) {\n            items.push({\n              type,\n              keyword,\n              item: chapter[parseInt(keyword)],\n              category: 'chapter',\n            });\n          }\n          break;\n        case 'ByLiteratureNo':\n          const literatureNo = parseInt(keyword);\n          if (isCategoryValid('literature', literatureNo)) {\n            items.push({\n              type,\n              keyword,\n              item: literature[parseInt(keyword)],\n              category: 'literature',\n            });\n          }\n          break;\n        case 'BySectionNo':\n          const sectionNo = parseInt(keyword);\n          if (isCategoryValid('section', sectionNo)) {\n            items.push({\n              type,\n              keyword,\n              item: section[parseInt(keyword)],\n              category: 'section',\n            });\n          }\n          break;\n      }\n      if (items.length) {\n        dispatch(appendSearchResults(items));\n      }\n    });\n  };\n\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.primary.main,\n    transform: 'rotate(0deg)',\n    transition: 'all 0.2s ease',\n    '&.is-expanded': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype ExpandedIconProps = {\n  className?: string;\n  isExpanded?: boolean;\n  style?: React.CSSProperties;\n};\n\nexport const AnimatedExpandedIcon: React.FC<ExpandedIconProps> = ({\n  isExpanded,\n  className,\n  style,\n}: ExpandedIconProps) => {\n  const classes = useStyles();\n  return (\n    <ExpandMore\n      style={style}\n      className={clsx(classes.icon, isExpanded && 'is-expanded', className)}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { TreeMenuItem } from 'react-simple-tree-menu';\n\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport const TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n  onClick,\n  active,\n  ...props\n}: TreeMenuItem) => {\n  const classes = useStyles();\n\n  const toggleCategory = (ev: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    hasNodes && toggleNode && toggleNode();\n    onClick(ev);\n  };\n  return (\n    <ListItem\n      onClick={toggleCategory}\n      className={`${classes.listItem} level-${level} ${focused && 'on-focus'} ${\n        active && 'is-active'\n      }`}>\n      <ListItemText primary={label}></ListItemText>\n      {hasNodes && (\n        <div className={classes.listIcon}>\n          <AnimatedExpandedIcon isExpanded={isOpen} />\n        </div>\n      )}\n    </ListItem>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport TreeMenu, { TreeMenuProps } from 'react-simple-tree-menu';\n\nimport { TreeListItem } from './category-list-item';\n\nconst useStyles = makeStyles((theme) => ({\n  treeMenuContainer: {\n    '&>div': {\n      outlineStyle: 'none',\n    },\n  },\n  list: {\n    padding: `0px ${theme.spacing(1)}px`,\n  },\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transition: 'all 0.2s ease',\n    transform: 'rotate(0deg)',\n    '&.is-open': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n} & TreeMenuProps;\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = ({\n  className,\n  ...props\n}: CategoryViewerProps) => {\n  const classes = useStyles();\n  debug('CategoryViewer renders');\n  return (\n    <div className={classes.treeMenuContainer}>\n      <TreeMenu {...props}>\n        {({ items }) => (\n          <List className={classes.list}>\n            {items.map(({ key, ...itemProps }) => (\n              <TreeListItem key={key} {...itemProps} />\n            ))}\n          </List>\n        )}\n      </TreeMenu>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TreeNodeInArray, Item } from 'react-simple-tree-menu';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport { CategoryViewer } from './category-viewer';\n\ntype CategoryViewerContainerProps = {\n  className?: string;\n};\n\nexport const CategoryViewerContainer: React.FC<CategoryViewerContainerProps> = (\n  props: CategoryViewerContainerProps\n) => {\n  const history = useHistory();\n  const queryParams = new URLSearchParams(history.location.search);\n  const chapterQueryParam = queryParams.get('chapter');\n  const routeKey = history.location.pathname.replace(\n    // eslint-disable-next-line no-useless-escape\n    new RegExp(`${ROUTE_CONSTANTS.LIST_CATEGORY}(\\/)?`),\n    ''\n  );\n  const getInitialOpenNodes = () => {\n    const nodes = routeKey\n      .split('/')\n      .map((it) => routeKey.substring(0, routeKey.indexOf(it) + it.length));\n    if (nodes.length === 2 && nodes[0] === nodes[1]) {\n      nodes[1] = `${nodes[0]}/${nodes[1]}`;\n    }\n    return nodes;\n  };\n\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n  const TREE_DATA: TreeNodeInArray[] = Object.values(sections).map(\n    (s, sIndex) => ({\n      key: s.id.toString(),\n      label: s.value,\n      index: sIndex,\n      nodes: getLiteraturesBySection(s.id).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        nodes: getChaptersByLiterature(lit.id).map((ch, chIndex) => ({\n          key: ch.id.toString(),\n          label: ch.value,\n          index: chIndex,\n        })),\n      })),\n    })\n  );\n  const onItemClick = (item: Item) => {\n    const newRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${item.key}`;\n    if (!item.hasNodes) {\n      const lastItemSeparator = item.key.lastIndexOf('/');\n      const chapter = item.key.substring(lastItemSeparator + 1);\n      const literatureRoute = item.key.substring(0, lastItemSeparator);\n      const currentRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${literatureRoute}?chapter=${chapter}`;\n      history.replace(currentRoute);\n      history.push(newRoute);\n    } else {\n      history.replace(newRoute);\n    }\n  };\n  return (\n    <CategoryViewer\n      initialActiveKey={routeKey}\n      initialFocusKey={\n        chapterQueryParam ? `${routeKey}/${chapterQueryParam}` : routeKey\n      }\n      initialOpenNodes={getInitialOpenNodes()}\n      onClickItem={onItemClick}\n      data={TREE_DATA}\n      hasSearch={false}\n    />\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n\n  if (!props.kural || !props.kural.value) {\n    return null;\n  }\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    userSelect: 'none',\n    padding: theme.spacing(1),\n    [theme.breakpoints.only('xs')]: {\n      minHeight: 400,\n    },\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { getUserTransliterators, isCategoryValidErr, Kural } from '../api';\nimport { getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  const { primary: PRIMARY_LANG } = user.preference.language;\n  const TRANSLITERATORS = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  const [userPreferedTranslits] = getUserTransliterators(user, TRANSLITERATORS);\n\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      if (typeof kuralInput === 'number') {\n        isCategoryValidErr('kural', kuralInput);\n        setKural(KURALS[kuralInput]);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, PRIMARY_LANG, KURALS]);\n  return [kural, kuralDetail, userPreferedTranslits];\n};\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n  favoriteIcon: {\n    width: '1rem',\n    height: '1rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  findCategoryRouteMapString,\n  isCategoryValid,\n  ITEMS_COUNT_MAP,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport KuralDetail from './KuralDetail';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const params = useParams<{ kural: string }>();\n  const KURAL_NO = parseInt(params.kural);\n  const [activeKuralNo, setActiveKuralNo] = React.useState(KURAL_NO);\n  const slideKuralIds = Array.from(Array(ITEMS_COUNT_MAP.kural).keys()).map(\n    (i) => i + 1\n  );\n  const renderSlide = (kId: number, index: number) => (\n    <SwiperSlide key={kId} virtualIndex={index}>\n      <KuralDetail kural={kId} />\n    </SwiperSlide>\n  );\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { kural: activeKuralNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeKuralNo, history]);\n\n  if (!isCategoryValid('kural', KURAL_NO)) {\n    return null;\n  }\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        autoHeight={true}\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={KURAL_NO - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideKuralIds[slideKuralIds.length - 1] !== activeKuralNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveKuralNo(swiper.activeIndex + 1);\n        }}>\n        {slideKuralIds.map((kId, index) => renderSlide(kId, index))}\n      </Swiper>\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { useSelector } from 'react-redux';\nimport { findCategoryRouteMapString, Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(\n      `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP!!, {\n        kural: kural.id,\n      })}`\n    )();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={i}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const [kurals] = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { findCategoryRouteMapString, ITEMS_COUNT_MAP } from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n  chapterKuralsList: {},\n}));\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const history = useHistory();\n  const { chapter } = useParams<{ chapter: string }>();\n  const CHAPTER_NO = parseInt(chapter);\n  const [activeChapterNo, setActiveChapterNo] = React.useState(CHAPTER_NO);\n  const slideChapterIds = Array.from(Array(ITEMS_COUNT_MAP.chapter).keys()).map(\n    (i) => i + 1\n  );\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { chapter: activeChapterNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeChapterNo, history]);\n  const renderSlide = (chId: number, index: number) => (\n    <SwiperSlide key={chId} virtualIndex={index}>\n      <ListKuralsOfChapter chapterNo={chId} />\n    </SwiperSlide>\n  );\n  return (\n    <div className={clsx(classes.chapterKuralsList, props.className)}>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={CHAPTER_NO!! - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideChapterIds[slideChapterIds.length - 1] !== activeChapterNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveChapterNo(swiper.activeIndex + 1);\n        }}>\n        {slideChapterIds.map((chId, index) => renderSlide(chId, index))}\n      </Swiper>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n} from '@material-ui/core';\nimport { DragIndicator } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  getUserTransliterators,\n  Transliterator,\n  User,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { applyPreference } from 'src/state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  subList: {\n    '&.dragging-over': {\n      backgroundColor: 'lightblue',\n    },\n  },\n  subHeader: {\n    textAlign: 'left',\n    lineHeight: '1.5em',\n  },\n  subListItem: {\n    '&.is-dragging': {\n      backgroundColor: 'red',\n    },\n  },\n  subListItemText: {\n    fontSize: '0.8em',\n  },\n}));\n\ntype RankTransliteratorSettingProps = {\n  user: User;\n  className?: string;\n};\n\nenum TransliteratorSectionType {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n}\ntype TransliteratorSectionMapType = Record<\n  TransliteratorSectionType,\n  Transliterator[]\n>;\n\nconst TransliteratorLabel: Record<TransliteratorSectionType, string> = {\n  active: 'Active',\n  inactive: 'InActive',\n};\n\nconst toUserLikedTranslitsMap = (\n  user: User,\n  transliterators: Record<number, Transliterator>\n): TransliteratorSectionMapType => {\n  const [activeList, inActiveList] = getUserTransliterators(\n    user,\n    transliterators\n  );\n  return { active: activeList, inactive: inActiveList };\n};\n\nexport const RankTransliteratorSetting: React.FC<RankTransliteratorSettingProps> = (\n  props: RankTransliteratorSettingProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const transliterators = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const [userTransLits, setUserTransLits] = React.useState(\n    toUserLikedTranslitsMap(props.user, transliterators)\n  );\n  React.useEffect(() => {\n    setUserTransLits(toUserLikedTranslitsMap(props.user, transliterators));\n  }, [props.user, transliterators]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    if (!destination) {\n      return;\n    }\n    let updateState = false;\n    const reorderedTransliterors = JSON.parse(\n      JSON.stringify(userTransLits)\n    ) as TransliteratorSectionMapType;\n    const srcList =\n      reorderedTransliterors[source.droppableId as TransliteratorSectionType];\n    if (\n      srcList.length <= 1 &&\n      source.droppableId === TransliteratorSectionType.ACTIVE &&\n      destination.droppableId === TransliteratorSectionType.INACTIVE\n    ) {\n      // Note: Don't allow active transliterators to go empty.\n      return;\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n      const destList =\n        reorderedTransliterors[\n          destination.droppableId as TransliteratorSectionType\n        ];\n      destList.splice(destination.index, 0, srcList[source.index]);\n      srcList.splice(source.index, 1);\n      updateState = true;\n    } else if (source.index !== destination.index) {\n      srcList.splice(destination.index, 0, ...srcList.splice(source.index, 1));\n      updateState = true;\n    }\n    if (updateState) {\n      const userPreference = {\n        ...props.user.preference,\n        transilterators: reorderedTransliterors.active.map((t) => t.id),\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {Object.entries(userTransLits).map(([key, list]) => (\n        <Droppable droppableId={key} key={key}>\n          {(provided, snapshot) => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={clsx(\n                classes.subList,\n                snapshot.isDraggingOver && 'dragging-over'\n              )}\n              subheader={\n                <ListSubheader component='div' className={classes.subHeader}>\n                  {TransliteratorLabel[key as TransliteratorSectionType]}\n                </ListSubheader>\n              }>\n              {list.map((tItem, index) => (\n                <Draggable\n                  key={tItem.id}\n                  draggableId={tItem.id.toString()}\n                  index={index}>\n                  {(provided, snapshot) => (\n                    <ListItem\n                      className={clsx(\n                        classes.subListItem,\n                        snapshot.isDragging && 'is-dragging'\n                      )}\n                      style={provided.draggableProps.style}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}>\n                      <ListItemIcon>\n                        <DragIndicator />\n                      </ListItemIcon>\n                      <ListItemText\n                        disableTypography\n                        primary={tItem.name}\n                        className={classes.subListItemText}\n                      />\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      ))}\n    </DragDropContext>\n  );\n};\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n      cursor: 'pointer',\n    },\n    clearIcon: {\n      cursor: 'pointer',\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\n// TODO: AppBar & kuralSearch rerenders often e.g) even if there any changes in settigns page.\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const history = useHistory();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const isSearchRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: SEARCH_ROUTE })?.isExact ||\n    false;\n  const [focus, setFocus] = React.useState(isSearchRoute());\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  history.listen(({ pathname }) => {\n    if (pathname !== SEARCH_ROUTE) {\n      setKeyword('');\n      setFocus(false);\n    } else {\n      setFocus(true);\n    }\n  });\n  const onSearchBarFocus = (): void => {\n    if (history.location.pathname !== SEARCH_ROUTE) {\n      debug('route -> search');\n      history.push(SEARCH_ROUTE);\n    }\n  };\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon\n        onClick={() => {\n          inputRef.current?.querySelector('input')?.focus();\n        }}\n        className={clsx(classes.searchicon, 'search-icon')}\n      />\n      <InputBase\n        ref={inputRef}\n        className={`searchbar ${classes.input}`}\n        placeholder='Search 43, agara'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          onSearchBarFocus();\n          props.onSearchTap && props.onSearchTap();\n        }}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          className={classes.clearIcon}\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { debug } from 'loglevel';\n\nimport KuralSearch from '../kural/KuralSearch';\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'center',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  /*const isHomeRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: '/' })?.isExact || false;\n   const renderLeftIcon = (): React.ReactElement => {\n    return !isHomeRoute() ? (\n      <IconButton className={classes.iconButton} onClick={history.goBack}>\n        <KeyboardBackspace color='primary' />\n      </IconButton>\n    ) : (\n      <Avatar className={classes.avatar}>\n        <Person />\n      </Avatar>\n    );\n  }; */\n\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {/* {renderLeftIcon()} */}\n            <KuralSearch className={classes.searchbar} />\n            <div className={classes.actionsGroup}>\n              {props.actions}\n              {/* <IconButton\n                className={classes.iconButton}\n                onClick={(): void => history.push('/settings')}>\n                <Settings color='primary' />\n              </IconButton> */}\n            </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\nexport default MyAppBar;\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  showDivider?: boolean;\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={props.showDivider}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { BaseType, findCategoryRouteMapString } from '../../../lib/api';\nimport { useBaseItem, useNavigation } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport ListView from '../common/ListView';\n\nconst useStyles = makeStyles((theme) => ({\n  chapFavorites: {\n    padding: 0,\n    '& li': {\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport interface ChapterFavListProps {\n  chapterIds: number[];\n}\n\nexport const ChapterFavList: React.FC<ChapterFavListProps> = (\n  props: ChapterFavListProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [getChapter] = useBaseItem('chapter');\n  const [navigateTo] = useNavigation();\n\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n\n  return (\n    <>\n      {props.chapterIds.length && (\n        <ListView\n          className={classes.chapFavorites}\n          items={\n            props.chapterIds\n              .sort()\n              .map((ch) => getChapter(ch))\n              .filter((ch) => ch !== null) as BaseType[]\n          }\n          onItemSelected={onChapterSelected}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { List, ListSubheader, makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport {\n  BaseType,\n  findCategoryRouteMapString,\n  findChapterNoFromKuralNo,\n} from '../../../lib/api';\nimport { useBaseItem, useNavigation } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport KuralCard from './../kural/KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  kural: {\n    padding: `0 0 0 ${theme.spacing(1)}px`,\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport interface KuralFavListProps {\n  kuralIds: number[];\n}\n\nexport const KuralFavList: React.FC<KuralFavListProps> = (\n  props: KuralFavListProps\n) => {\n  const classes = useStyles();\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [getChapter] = useBaseItem('chapter');\n  const [navigateTo] = useNavigation();\n  const [chapterKuralMap, setchapterKuralMap] = React.useState<\n    Record<number, BaseType[]>\n  >({});\n\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n\n  const onKuralSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          kural: item.id,\n        })}`\n      )();\n    }\n  };\n\n  React.useEffect(() => {\n    const chapMap = props.kuralIds.reduce((chapMap, kId) => {\n      const chap = findChapterNoFromKuralNo(kId);\n      if (KURALS[kId] !== undefined) {\n        return {\n          ...chapMap,\n          [chap]: [...(chapMap[chap] || []), KURALS[kId]],\n        };\n      }\n      return chapMap;\n    }, {} as Record<number, BaseType[]>);\n    setchapterKuralMap(chapMap);\n  }, [props.kuralIds, KURALS]);\n\n  return (\n    <>\n      {Object.keys(chapterKuralMap).map((chapId) => {\n        const chapterInfo = getChapter(parseInt(chapId));\n        return (\n          <List\n            component='div'\n            className='sub-list'\n            key={chapId}\n            disablePadding>\n            {chapterInfo && (\n              <ListSubheader\n                className='sub-header'\n                disableSticky\n                onClick={(): void => onChapterSelected(chapterInfo)}>\n                {chapterInfo.value}\n              </ListSubheader>\n            )}\n\n            {chapterKuralMap[parseInt(chapId)].map((item: BaseType) => (\n              <KuralCard\n                className={classes.kural}\n                key={item.id}\n                kural={item}\n                onClick={onKuralSelected}\n              />\n            ))}\n          </List>\n        );\n      })}\n    </>\n  );\n};\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { set, get } from 'idb-keyval';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../../state';\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\nimport { ChapterFavList } from './chapter-fav-list';\nimport { KuralFavList } from './kural-fav-list';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  collapsableGroup: {},\n  list: {\n    '& .sub-header': {\n      textAlign: 'left',\n      color: 'brown',\n      lineHeight: '2rem',\n      padding: `0px 0 0 ${theme.spacing(0.5)}px`,\n    },\n  },\n  listItemTitle: {\n    '& .toggle-icon-container': {\n      marginLeft: theme.spacing(1.5),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n  favCount: {\n    fontSize: '0.8rem',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expanded?: boolean;\n};\n\nconst IDB_FAV_TOGGLE_STATE = 'IDB_FAV_TOGGLE';\ntype VisibilityState = {\n  kural: boolean;\n  chapter: boolean;\n};\n\nexport const FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const classes = useStyles();\n  const favorites = useSelector((st: AppState) => st.user.favorites);\n  const filterFav = (category: 'kural' | 'chapter') =>\n    (favorites || [])\n      .filter((it) => it.category === category)\n      .map((it) => it.id);\n  const KURAL_IDS = filterFav('kural');\n  const CHAPTER_IDS = filterFav('chapter');\n\n  const [visiblity, setVisiblity] = React.useState<VisibilityState>(\n    props.expanded\n      ? { kural: true, chapter: true }\n      : { kural: false, chapter: false }\n  );\n\n  React.useEffect(() => {\n    // runs only once\n    get(IDB_FAV_TOGGLE_STATE).then((st) => {\n      setVisiblity(JSON.parse(st as string) as VisibilityState);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      await set(IDB_FAV_TOGGLE_STATE, JSON.stringify(visiblity));\n    })();\n  }, [visiblity]);\n\n  const noRecordsFound = <h1>None Found</h1>;\n\n  const GroupTitleMaker = (\n    isVisible: boolean,\n    onClick: () => void,\n    title: React.ReactNode,\n    favCount: React.ReactNode,\n    collapseContent?: React.ReactNode\n  ) => (\n    <>\n      <ListItem\n        selected={isVisible}\n        className={classes.listItemTitle}\n        button\n        onClick={onClick}>\n        <ListItemText inset={true} primary={title} />\n        {!isVisible && <span className={classes.favCount}>{favCount}</span>}\n        <div className={`toggle-icon-container`}>\n          <AnimatedExpandedIcon isExpanded={isVisible} />\n        </div>\n      </ListItem>\n      <Collapse\n        in={isVisible}\n        style={{ paddingBottom: isVisible ? 8 : 0 }}\n        className={classes.collapsableGroup}\n        timeout='auto'>\n        {collapseContent || noRecordsFound}\n      </Collapse>\n    </>\n  );\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        {GroupTitleMaker(\n          visiblity.kural,\n          () => {\n            setVisiblity({ ...visiblity, kural: !visiblity.kural });\n          },\n          'Kurals',\n          KURAL_IDS.length ? KURAL_IDS.length : null,\n          KURAL_IDS.length && <KuralFavList kuralIds={KURAL_IDS} />\n        )}\n        {GroupTitleMaker(\n          visiblity.chapter,\n          () => {\n            setVisiblity({ ...visiblity, chapter: !visiblity.chapter });\n          },\n          'Chapters',\n          CHAPTER_IDS.length ? CHAPTER_IDS.length : null,\n          CHAPTER_IDS.length && <ChapterFavList chapterIds={CHAPTER_IDS} />\n        )}\n      </List>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\nimport MyAppBar from 'src/views/components/common/MyAppBar';\n\nimport { FavoritesViewer } from '../../components/favourite-viewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(0.5),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; */\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <MyAppBar />\n      <div className={classes.root}>\n        <Card variant='outlined' className={classes.favoriteCard}>\n          {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n          <CardHeader title='Favorites' className='card-header' />\n          <CardContent className='card-content'>\n            <FavoritesViewer expanded={false} />\n          </CardContent>\n        </Card>\n        {/* <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype ListWithRouteViewerProps = RouteConfigComponentProps;\n\nexport const ListCategoryViewer: React.FC<ListWithRouteViewerProps> = ({\n  route,\n}: ListWithRouteViewerProps) => {\n  const classes = useStyles();\n  return <div className={classes.root}>{renderRoutes(route?.routes)}</div>;\n};\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { Settings } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  {\n    icon: <Settings />,\n    route: '/settings',\n    label: 'Settings',\n  },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setAllUserSelections, setUserSelection } from '../../../state/search';\nimport {\n  CATEGORY_COLORS,\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n} from './../../../lib/api';\nimport { AppState } from './../../../state';\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n}));\n\nexport const SearchChips: React.FC<SearchChipsProps> = (\n  props: SearchChipsProps\n) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            style={{\n              backgroundColor:\n                CATEGORY_COLORS[\n                  f.type === 'all' || f.type === 'detail' ? 'default' : f.type\n                ],\n            }}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport {\n  isResultOfType,\n  SearchResult,\n  CATEGORY_COLORS,\n  Category,\n  findCategoryRouteMapString,\n} from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state/reducers';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport { SearchChips } from './SearchChips';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n  searchItem: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    cursor: 'pointer',\n  },\n  searchItemAvatar: {\n    width: '2rem',\n    height: '2rem',\n    textAlign: 'center',\n    fontSize: '1rem',\n    marginRight: '0.5rem',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchResultItemProps = {\n  component?: React.ReactNode;\n  result: SearchResult;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  result,\n  label,\n  onClick,\n  component,\n}: SearchResultItemProps) => {\n  const classes = useStyles();\n  const innerContent = component ? component : <div>{result.item.value}</div>;\n  return (\n    <ListItem\n      key={`${label}${result.item.id}`}\n      onClick={onClick}\n      className={classes.searchItem}>\n      <Avatar\n        className={classes.searchItemAvatar}\n        style={{ backgroundColor: CATEGORY_COLORS[result.category] }}>\n        {label.charAt(0).toUpperCase()}\n      </Avatar>\n      {innerContent}\n    </ListItem>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const getOnClickRoute = React.useCallback(\n    (category: Category, id: number) => {\n      let route = ROUTE_CONSTANTS.LIST_CATEGORY;\n      if (INDEX_MAP) {\n        route += `/${findCategoryRouteMapString(INDEX_MAP, {\n          [category]: id,\n        })}`;\n      }\n      return route;\n    },\n    [INDEX_MAP]\n  );\n  const [navigateTo] = useNavigation();\n  const renderItem = (\n    item: SearchResult,\n    index: number\n  ): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <SearchResultItem\n          key={index}\n          result={item}\n          label='k'\n          onClick={navigateTo(getOnClickRoute('kural', item.item.id))}\n          component={\n            <KuralCard\n              componentType='span'\n              key={item.item.id}\n              kural={item.item}\n              className={classes.kuralSearchItem}\n            />\n          }\n        />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='ch'\n          onClick={navigateTo(getOnClickRoute('chapter', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='lit'\n          onClick={navigateTo(getOnClickRoute('literature', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='sec'\n          onClick={navigateTo(getOnClickRoute('section', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <SearchChips />\n      <List>{search.results.map((item, i) => renderItem(item, i))}</List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport { Check, CheckBox } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore, useFirestoreConnect } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\nimport { applyPreference, DEFAULT_BACKGROUND } from 'src/state/settings';\n\nimport {\n  User,\n  COLLECTION_NAME_MAP,\n  updateUserPreference,\n} from '../../../lib/api';\nimport { CommonComponentProps } from '../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  colorItemContainer: {\n    display: 'grid',\n    gridTemplateRows: 'repeat(3, auto)',\n    gridGap: '1em',\n  },\n  colorItem: {\n    width: '90%',\n    height: '3rem',\n    borderRadius: 10,\n    '& .text': {},\n  },\n}));\n\ninterface ColorItemProps {\n  color: string;\n  label: string;\n  isSelected?: boolean;\n  onSelect?: () => void;\n}\n\nconst BackgroundOption: React.FC<ColorItemProps> = ({\n  isSelected = false,\n  ...props\n}: ColorItemProps) => {\n  const classes = useStyles();\n  const [itemSelected, setItemSelection] = React.useState(isSelected);\n  React.useEffect(() => {\n    setItemSelection(isSelected);\n  }, [isSelected]);\n  const onItemSelection = () => {\n    setItemSelection(!itemSelected);\n    props.onSelect && props.onSelect();\n  };\n  return (\n    <div\n      className={classes.colorItem}\n      style={{ backgroundColor: props.color }}\n      onClick={onItemSelection}>\n      <ListItem>\n        <ListItemIcon>\n          <CheckBox />\n        </ListItemIcon>\n        <ListItemText className='text' primary={props.label} />\n      </ListItem>\n    </div>\n  );\n};\n\nexport interface BackgroundPickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const BackgroundPicker: React.FC<BackgroundPickerProps> = (\n  props: BackgroundPickerProps\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useFirestoreConnect([COLLECTION_NAME_MAP.DISPLAY]);\n  const firestore = useFirestore();\n  const DISPLAY_CONFIG = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.DISPLAY]\n  );\n  const USER_BG_COLOR = props.user.preference.display.background;\n  const getColors = (): string[] => {\n    const BG_COLORS = [\n      ...(DISPLAY_CONFIG && DISPLAY_CONFIG.CONFIG\n        ? DISPLAY_CONFIG.CONFIG.colors\n        : DEFAULT_BACKGROUND),\n    ];\n    if (USER_BG_COLOR && BG_COLORS.indexOf(USER_BG_COLOR) === -1) {\n      BG_COLORS.splice(0, 1, USER_BG_COLOR);\n    }\n    return BG_COLORS;\n  };\n  const updateUserDisplayColor = (color: string) => {\n    const userPreference = {\n      ...props.user.preference,\n      display: {\n        ...props.user.preference.display,\n        color,\n      },\n    };\n    dispatch(applyPreference(userPreference));\n    updateUserPreference(firestore, {\n      ...props.user,\n      preference: userPreference,\n    });\n  };\n  return (\n    <Card variant={'outlined'} className={clsx(props.className, classes.root)}>\n      <CardContent className={classes.colorItemContainer}>\n        {getColors().map((c: string, i: number) => {\n          // TODO:\n          return (\n            <BackgroundOption\n              key={i}\n              color={c}\n              label={'hello'}\n              isSelected={USER_BG_COLOR === c}\n              onSelect={() => updateUserDisplayColor(c)}\n            />\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BackgroundPicker;\n","import React from 'react';\n\nimport { Card, CardContent, makeStyles } from '@material-ui/core';\nimport {\n  Check,\n  Favorite,\n  Grade,\n  SvgIconComponent,\n  Whatshot,\n} from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore, useFirestoreConnect } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\nimport { applyPreference, DEFAULT_COLORS } from 'src/state/settings';\n\nimport {\n  User,\n  COLLECTION_NAME_MAP,\n  updateUserPreference,\n} from '../../../lib/api';\nimport { CommonComponentProps } from './../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  colorItemContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, auto)',\n    gridGap: '1em',\n  },\n  colorItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    '& .circle': {\n      height: '2.5rem',\n      width: '2.5rem',\n      borderRadius: '50%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      '& svg': {\n        color: 'white',\n      },\n    },\n    '& .icon': {\n      marginTop: '0.5em',\n    },\n  },\n}));\n\nconst ICON_MAP: SvgIconComponent[] = [Favorite, Grade, Whatshot];\n\ninterface ColorItemProps {\n  color: string;\n  icon: SvgIconComponent;\n  isSelected?: boolean;\n  onSelect?: () => void;\n}\n\nconst ColorItem: React.FC<ColorItemProps> = ({\n  isSelected = false,\n  ...props\n}: ColorItemProps) => {\n  const classes = useStyles();\n  const [itemSelected, setItemSelection] = React.useState(isSelected);\n  React.useEffect(() => {\n    setItemSelection(isSelected);\n  }, [isSelected]);\n  const onItemSelection = () => {\n    setItemSelection(!itemSelected);\n    props.onSelect && props.onSelect();\n  };\n  return (\n    <div className={classes.colorItem}>\n      <div\n        className='circle'\n        style={{ backgroundColor: props.color }}\n        onClick={onItemSelection}>\n        {itemSelected && <Check />}\n      </div>\n      <div className='icon'>\n        {<props.icon style={{ color: props.color }} />}\n      </div>\n    </div>\n  );\n};\n\nexport interface ColorPickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const ColorPicker: React.FC<ColorPickerProps> = (\n  props: ColorPickerProps\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useFirestoreConnect([COLLECTION_NAME_MAP.DISPLAY]);\n  const firestore = useFirestore();\n  const DISPLAY_CONFIG = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.DISPLAY]\n  );\n  const USER_COLOR = props.user.preference.display.color;\n  const getColors = (): string[] => {\n    const COLORS = [\n      ...(DISPLAY_CONFIG && DISPLAY_CONFIG.CONFIG\n        ? DISPLAY_CONFIG.CONFIG.colors\n        : DEFAULT_COLORS),\n    ];\n    if (USER_COLOR && COLORS.indexOf(USER_COLOR) === -1) {\n      COLORS.splice(0, 1, USER_COLOR);\n    }\n    return COLORS;\n  };\n  const updateUserDisplayColor = (color: string) => {\n    const userPreference = {\n      ...props.user.preference,\n      display: {\n        ...props.user.preference.display,\n        color,\n      },\n    };\n    dispatch(applyPreference(userPreference));\n    updateUserPreference(firestore, {\n      ...props.user,\n      preference: userPreference,\n    });\n  };\n  return (\n    <Card variant={'outlined'} className={clsx(props.className, classes.root)}>\n      <CardContent className={classes.colorItemContainer}>\n        {getColors().map((c: string, i: number) => {\n          return (\n            <ColorItem\n              key={i}\n              color={c}\n              icon={ICON_MAP[i]}\n              isSelected={USER_COLOR === c}\n              onSelect={() => updateUserDisplayColor(c)}\n            />\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n};\n","import * as React from 'react';\n\nimport { Slider, SliderTypeMap, withStyles } from '@material-ui/core';\nimport { DefaultComponentProps } from '@material-ui/core/OverridableComponent';\n\nexport type DiscreteSliderProps = Partial<DefaultComponentProps<SliderTypeMap>>;\n\nconst StyledSlider = withStyles({\n  root: {\n    height: 8,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    marginTop: '-7px',\n    backgroundColor: 'currentColor',\n    '&:focus, &:hover, &$active': {\n      boxShadow:\n        'rgba(136, 153, 166, 0.2) 0px 0px 7px, rgba(136, 153, 166, 0.15) 0px 1px 3px 1px',\n    },\n  },\n  active: {},\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n  mark: {\n    width: 16,\n    height: 16,\n    borderRadius: '50%',\n    marginLeft: '-6px',\n    opacity: 0.8,\n    marginTop: '-5px',\n    '& ::after': {\n      top: '-15px',\n      left: '-15px',\n      right: '-15px',\n      bottom: '-15px',\n      content: '\"',\n      position: 'absolute',\n      borderRadius: '50%',\n      border: '1px solid',\n    },\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\nexport const DiscreteSlider: React.FC<DiscreteSliderProps> = (props) => {\n  return (\n    <StyledSlider\n      aria-labelledby='discrete-slider'\n      valueLabelDisplay='auto'\n      {...props}\n    />\n  );\n};\n\nexport default DiscreteSlider;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  FONT_SIZE_MAP,\n  User,\n  FontSizeType,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { applyPreference, ANONYOMOUS_USER } from 'src/state/settings';\n\nimport { CommonComponentProps } from '../../components';\nimport { DiscreteSlider } from './../../components/common/DiscreteSlider';\n\nconst useStyles = makeStyles((theme) => ({\n  sliderWrapper: {\n    display: 'flex',\n    marginLeft: theme.spacing(3),\n    alignItems: 'center',\n  },\n  sliderRoot: {\n    width: '80%',\n  },\n}));\n\nexport interface FontSizePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const FontSizePicker: React.FC<FontSizePickerProps> = (\n  props: FontSizePickerProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const fontSize =\n    FONT_SIZE_MAP[\n      props.user.preference.fontSizeType ||\n        ANONYOMOUS_USER.preference.fontSizeType\n    ];\n  const marks = Object.entries(FONT_SIZE_MAP).map(([, v]) => ({\n    value: v,\n  }));\n  const onFontChange = (\n    _: React.ChangeEvent<unknown>,\n    value: number | number[]\n  ) => {\n    if (typeof value === 'number') {\n      const fontType = Object.keys(FONT_SIZE_MAP).find(\n        (type) => FONT_SIZE_MAP[type as FontSizeType] === value\n      );\n      const userPreference = {\n        ...props.user.preference,\n        fontSizeType: fontType!! as FontSizeType,\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <div\n      className={clsx(\n        props.className && props.className + '-wrapper',\n        classes.sliderWrapper\n      )}>\n      <DiscreteSlider\n        classes={{ root: classes.sliderRoot }}\n        {...props}\n        aria-label='font-size-picker'\n        value={fontSize}\n        valueLabelDisplay={'off'}\n        step={null}\n        marks={marks}\n        min={FONT_SIZE_MAP.TINY}\n        max={FONT_SIZE_MAP.BIG}\n        onChange={onFontChange}\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport { DragHandle } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport { COLLECTION_NAME_MAP, User } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { applyPreference } from 'src/state/settings';\n\nimport { CommonComponentProps } from '../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  languageItem: {},\n  languageItemText: {},\n}));\n\nexport interface LanguagePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const LanguagePicker: React.FC<LanguagePickerProps> = (\n  props: LanguagePickerProps\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useFirestoreConnect([COLLECTION_NAME_MAP.LANGUAGE]);\n  const { primary: PRIMARY_LANG } = props.user.preference.language;\n  const languageMap = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.LANGUAGE]\n  );\n  const getOrderedLangIds = React.useCallback(\n    () => (): Array<string> => {\n      if (!languageMap) {\n        return [];\n      }\n      const sortedIds = Object.keys(languageMap).sort();\n      sortedIds.splice(sortedIds.indexOf(PRIMARY_LANG.toLocaleLowerCase()), 1);\n      sortedIds.splice(0, 0, PRIMARY_LANG.toLocaleLowerCase());\n      return sortedIds;\n    },\n    [PRIMARY_LANG, languageMap]\n  );\n  const [orderedLangIds, setOrderdLangIds] = React.useState<Array<string>>([]);\n\n  React.useEffect(() => {\n    setOrderdLangIds(getOrderedLangIds());\n  }, [getOrderedLangIds, languageMap]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    if (!destination) {\n      return;\n    }\n    if (source.index !== destination.index) {\n      const reordered = [...orderedLangIds];\n      reordered.splice(\n        destination.index,\n        0,\n        ...reordered.splice(source.index, 1)\n      );\n      setOrderdLangIds(reordered);\n      if (PRIMARY_LANG !== reordered[0]) {\n        const userPreference = {\n          ...props.user.preference,\n          language: {\n            ...props.user.preference.language,\n            primary: reordered[0],\n          },\n        };\n        dispatch(applyPreference(userPreference));\n        // TODO: IGNORE FS update until i18n support\n        /* updateUserPreference(firestore, {\n          ...props.user,\n          preference: userPreference,\n        }); */\n      }\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId={'language'} key={'language'}>\n        {(provided, snapshot) => (\n          <List\n            className={clsx(\n              props.className && props.className + '-wrapper',\n              classes.root,\n              snapshot.isDraggingOver && 'dragging-over'\n            )}\n            {...provided.droppableProps}\n            ref={provided.innerRef}>\n            {orderedLangIds.map((langId, index) => (\n              <Draggable key={langId} draggableId={langId} index={index}>\n                {(provided, snapshot) => (\n                  <ListItem\n                    className={clsx(\n                      classes.languageItem,\n                      snapshot.isDragging && 'is-dragging'\n                    )}\n                    style={provided.draggableProps.style}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}>\n                    <ListItemIcon>\n                      <DragHandle />\n                    </ListItemIcon>\n                    <ListItemText\n                      disableTypography\n                      primary={languageMap[langId].value}\n                      className={classes.languageItemText}\n                    />\n                  </ListItem>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </List>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import React, { FC, PropsWithChildren } from 'react';\n\nimport {\n  Collapse,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { AnimatedExpandedIcon } from './../../components/common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  itemLabel: {\n    fontSize: '1em',\n  },\n  itemChild: {\n    padding: theme.spacing(1),\n  },\n  listItemIcon: {},\n}));\n\ntype SettingItemProps = PropsWithChildren<{\n  label: string;\n  className?: string;\n  isOpen?: boolean;\n  showExpandIcon?: boolean;\n  icon?: React.ReactNode;\n  suffix?: React.ReactNode;\n}>;\n\nexport const SettingItem: FC<SettingItemProps> = ({\n  label,\n  className,\n  isOpen = false,\n  showExpandIcon = true,\n  children,\n  ...props\n}: SettingItemProps) => {\n  const classes = useStyles();\n  const [isItemExpanded, toggleItem] = React.useState(isOpen);\n  return (\n    <>\n      <ListItem\n        button\n        className={clsx(className, classes.root)}\n        onClick={(): void => toggleItem(!isItemExpanded)}>\n        {props.icon}\n        <ListItemText\n          classes={{ primary: classes.itemLabel }}\n          primary={label}\n        />\n        {props.suffix}\n        {showExpandIcon && (\n          <ListItemIcon className={classes.listItemIcon}>\n            <AnimatedExpandedIcon isExpanded={isItemExpanded} />\n          </ListItemIcon>\n        )}\n      </ListItem>\n      <Collapse\n        classes={{ container: classes.itemChild }}\n        in={isItemExpanded}\n        timeout='auto'\n        unmountOnExit>\n        {children}\n      </Collapse>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, List, ListItemIcon } from '@material-ui/core';\nimport {\n  Colorize,\n  FormatSize,\n  Language,\n  Palette,\n  People,\n} from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport { BackgroundPicker } from './BackgroundPicker';\nimport { ColorPicker } from './ColorPicker';\nimport { FontSizePicker } from './FontSizePicker';\nimport { LanguagePicker } from './LanguagePicker';\nimport { RankTransliteratorSetting } from './RankTransliteratorSetting';\nimport { SettingItem } from './SettingItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  fontSizePicker: {\n    // padding: theme.spacing(1),\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n  TRANSLITERATOR_PICK: 'Order Transliterator',\n  LANGUAGE_PICK: 'Language',\n  COLOR_PICK: 'Color',\n  BACKGROUND_PICK: 'Background',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const user = useSelector((st: AppState) => st.user);\n  debug('renders Settings');\n  return (\n    <div className={props.className}>\n      <List>\n        <SettingItem\n          label={SettingsLabel.FONT_SIZE}\n          icon={\n            <ListItemIcon>\n              <FormatSize />\n            </ListItemIcon>\n          }>\n          <FontSizePicker user={user} className={classes.fontSizePicker} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.TRANSLITERATOR_PICK}\n          icon={\n            <ListItemIcon>\n              <People />\n            </ListItemIcon>\n          }>\n          <RankTransliteratorSetting user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.LANGUAGE_PICK}\n          icon={\n            <ListItemIcon>\n              <Language />\n            </ListItemIcon>\n          }>\n          <LanguagePicker user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.COLOR_PICK}\n          icon={\n            <ListItemIcon>\n              <Palette />\n            </ListItemIcon>\n          }>\n          <ColorPicker user={user} />\n        </SettingItem>\n        <SettingItem\n          isOpen={true}\n          label={SettingsLabel.BACKGROUND_PICK}\n          icon={\n            <ListItemIcon>\n              <Colorize />\n            </ListItemIcon>\n          }>\n          <BackgroundPicker user={user} />\n        </SettingItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig, RouteConfigComponentProps } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport { isCategoryValid } from './lib/api';\nimport { CategoryViewerContainer } from './views/components/category-viewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport Home from './views/pages/home';\nimport { ListCategoryViewer } from './views/pages/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  LIST_CATEGORY: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListCategoryViewer,\n        routes: [\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST_CATEGORY}*`,\n            // eslint-disable-next-line react/display-name\n            render: ({ match }: RouteConfigComponentProps): React.ReactNode => {\n              const route = match.url.replace(ROUTE_CONSTANTS.LIST, '');\n              const ROUTE_REGEX = /^(\\/\\d+)?(\\/\\d+)?$/;\n              if (ROUTE_REGEX.test(route)) {\n                const [section, literature] = [\n                  route.replace(ROUTE_REGEX, '$1').replace('/', ''),\n                  route.replace(ROUTE_REGEX, '$2').replace('/', ''),\n                ];\n                if (\n                  (section === '' && literature === '') ||\n                  (section.length > 0 &&\n                    isCategoryValid('section', parseInt(section))) ||\n                  (literature.length > 0 &&\n                    isCategoryValid('literature', parseInt(literature)))\n                ) {\n                  return <CategoryViewerContainer />;\n                }\n              }\n              return <Redirect to={`${ROUTE_CONSTANTS.LIST}/1/1/1`} />;\n            },\n          },\n        ],\n      },\n\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => (\n          <Redirect to={ROUTE_CONSTANTS.ROOT} />\n        ),\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { FONT_SIZE_MAP } from './lib/api';\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div\n      className={classes.root}\n      style={{\n        fontSize: FONT_SIZE_MAP[user.preference.fontSizeType],\n        color: user.preference.display.color,\n      }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  user: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","export type IndexMapType = {\n  section: {\n    [key: number]: {\n      litIndex: [number, number];\n      chapIndex: [number, number];\n    };\n  };\n  litChapMap: { [key: number]: [number, number] };\n};\n\nexport type Transliterator = {\n  id: number;\n  name: string;\n  lang: string;\n  rank?: number;\n};\n\ntype BaseType = {\n  value: string;\n  id: number;\n};\n\ntype Kural = BaseType;\ntype Section = BaseType;\ntype Literature = BaseType;\ntype Chapter = BaseType;\n\ntype Category = 'section' | 'chapter' | 'literature' | 'kural';\ntype RootCategory = Exclude<Category, 'kural'>;\ntype CategoryBaseTypeMap = Record<Category, BaseType>;\n\ntype KuralMixin = {\n  kural: Kural;\n  section: Section;\n  literature: Literature;\n  chapter: Chapter;\n};\n\ntype SearchResult = {\n  type: SearchTypes;\n  item: BaseType;\n  category: Category;\n  keyword: string;\n};\n\ntype SectionSearchType = 'BySectionNo' | 'BySectionContains';\ntype LiteratureSearchType = 'ByLiteratureNo' | 'ByLiteratureContains';\ntype ChapterSearchType = 'ByChapterNo' | 'ByChapterContains';\ntype KuralSearchType =\n  | 'ByKuralNo'\n  | 'ByKuralContains'\n  | 'ByKuralStartsWith'\n  | 'ByKuralEndsWith';\ntype KuralDetailSearchType = 'ByKuralDetailContains';\ntype SearchTypes =\n  | KuralSearchType\n  | SectionSearchType\n  | LiteratureSearchType\n  | ChapterSearchType\n  | KuralDetailSearchType;\n\nexport type KuralDetail = Record<string, string>;\nexport type {\n  BaseType,\n  Kural,\n  Section,\n  Literature,\n  Chapter,\n  KuralMixin,\n  Category,\n  RootCategory,\n  CategoryBaseTypeMap,\n  SearchResult,\n  SearchTypes,\n};\n\nexport type SearchCategoryTypes = Category | 'detail' | 'all';\n\nexport enum FontSizeType {\n  TINY = 'TINY',\n  SMALL = 'SMALL',\n  MEDIUM = 'MEDIUM',\n  LARGE = 'LARGE',\n  BIG = 'BIG',\n}\n\nexport type AppDisplay = {\n  color: string;\n  background: string;\n};\nexport type UserPreference = {\n  display: AppDisplay;\n  language: {\n    primary: string;\n    secondary: string[];\n  };\n  fontSizeType: FontSizeType;\n  transilterators?: number[];\n};\n\nexport type UserFavourite = {\n  category: Exclude<Category, 'section' | 'literature'>;\n  datetime: Date;\n  id: number;\n};\n\nexport type User = {\n  id: string;\n  favorites: UserFavourite[];\n  preference: UserPreference;\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\nimport { Category } from './types';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n\nexport const CATEGORY_COLORS: Record<Category | 'default', string> = {\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n  default: 'blueviolet',\n};\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  FontSizeType,\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n\nexport const FONT_SIZE_MAP: Record<FontSizeType, number> = {\n  BIG: 24,\n  LARGE: 21,\n  MEDIUM: 18,\n  SMALL: 15,\n  TINY: 12,\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { isCategoryValidErr, COLLECTION_NAME_MAP, KuralDetail } from './';\n\nexport const getKurals = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Record<number, string>> => {\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(lang)\n    .get();\n  return (kuralSnapshotRef.data() || {}) as Record<number, string>;\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralIdsOfChapter = (chapter: number): number[] => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return kuralRangeIds;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  // TODO: get only transliterators of user prefered language\n  const transliteratorSnapRef = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n  );\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  // TODO: update only if user not an anonymous user\n  await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .doc(`${user.id}`)\n    .set(user);\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { getCategoryIds } from './category';\nimport { findChapterNoFromKuralNo } from './common';\nimport { Category, IndexMapType, RootCategory } from './types';\n\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\nexport type CategoryIdMapPartial = Partial<Record<Category, number>>;\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\nexport const findCategoryRouteMap = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): CategoryIdMapPartial => {\n  const { kural, chapter, literature, section } = filter;\n  const KURALS_CHAPTER = kural ? findChapterNoFromKuralNo(kural) : chapter;\n  return {\n    ...rootCategoryFinder(INDEX_MAP, {\n      chapter: KURALS_CHAPTER,\n      literature,\n      section,\n    }),\n    ...(kural ? { kural } : {}),\n  };\n};\n\nexport const convertCategoryRouteMapToString = (\n  filter: CategoryIdMapPartial\n): string => {\n  return (['section', 'literature', 'chapter', 'kural'] as Category[])\n    .filter((k) => filter[k as Category] !== undefined)\n    .map((k) => filter[k as Category])\n    .join('/');\n};\n\nexport const findCategoryRouteMapString = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): string => {\n  return convertCategoryRouteMapToString(\n    findCategoryRouteMap(INDEX_MAP, filter)\n  );\n};\n","import { Transliterator, User } from './types';\n\nexport const getUserPreferedLanguages = (user: User): string[] => {\n  const { primary, secondary } = user.preference.language;\n  return [primary, ...secondary];\n};\n\nexport const findTransliteratorsOfLanguage = (\n  language: string[],\n  tMap: Record<number, Transliterator>\n): Record<number, Transliterator> => {\n  if (!language.length) {\n    return tMap;\n  }\n  return Object.entries(tMap)\n    .filter(([id, transliterator]) =>\n      language.some((lang) => lang === transliterator.lang)\n    )\n    .reduce((state, [key, value]) => ({ ...state, [key]: value }), {});\n};\n\nexport type UserTransliteratorMap = [Transliterator[], Transliterator[]];\n\ntype getUserTransliteratorsType = (\n  u: User,\n  tMap: Record<number, Transliterator>\n) => UserTransliteratorMap;\nexport const getUserTransliterators: getUserTransliteratorsType = (\n  user,\n  transliteratorsMap\n) => {\n  const result: UserTransliteratorMap = [[], []];\n  const userLangs = getUserPreferedLanguages(user);\n  const userTMap = findTransliteratorsOfLanguage(userLangs, transliteratorsMap);\n  const userLikedTransliterators = user.preference?.transilterators || [];\n  if (userLikedTransliterators.length) {\n    const allowedTransliteratorIds = Object.keys(userTMap).map((t) =>\n      parseInt(t)\n    );\n    result[0] = userLikedTransliterators\n      .filter((t) => allowedTransliteratorIds.includes(t))\n      .map((t) => userTMap[t]);\n    result[1] = allowedTransliteratorIds\n      .filter((t) => !userLikedTransliterators.includes(t))\n      .map((t) => userTMap[t]);\n  } else {\n    result[0] = Object.values(userTMap);\n  }\n  return result;\n};\n","import { Category, SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  DISPLAY: 'DISPLAY_CONFIG',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport const ITEMS_COUNT_MAP: Record<Category, number> = {\n  kural: 1330,\n  chapter: 133,\n  literature: 13,\n  section: 3,\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\nexport * from './route';\nexport * from './user';\n"],"sourceRoot":""}