{"version":3,"sources":["lib/api/category.ts","lib/api/common.ts","state/kuralIndex/index.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","lib/api/route.ts","lib/api/user.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","views/components/kural/CategoryViewer.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/RouteViewer.tsx","lib/hooks/useLongPress.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/pages/settings/RankTransliteratorSetting.tsx","views/components/common/ListView.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/index.tsx","views/pages/list/index.tsx","views/components/kural/KuralSearch.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","state/title/index.ts","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","views/pages/search/SearchChips.tsx","views/pages/search/search.tsx","views/pages/settings/SettingItem.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx","lib/api/index.ts","lib/api/firestore.ts"],"names":["getLiteratureNoFromChapterNo","INDEX_MAP","chapterNo","isCategoryValidErr","Number","Object","keys","litChapMap","find","litId","isItemInRange","getSectionNoByLiteratureNo","literatureNo","section","map","secId","litIndex","getCategoryIds","category","categoryId","result","literature","chapter","CATEGORY_COLORS","kural","default","getKuralIndex","firestore","a","firestoreGetCacheFirst","collection","COLLECTION_NAME_MAP","indexSnapshot","getDocData","key","docs","doc","id","data","getAllBaseItems","lang","collectionKey","sectionSnapshot","value","getAllSections","getAllChapter","getAllLiterature","findChapterNoFromKuralNo","kuralNo","Math","ceil","isResultOfType","type","resType","startsWith","getKural","kId","KURAL","get","kuralSnapshotRef","getKuralDetail","KURAL_DETAIL","snapshot","getKuralByIds","ids","kuralsRef","where","firebase","FieldPath","documentId","toString","sort","b","getKuralsOfChapter","startKuralNo","kuralRangeIds","Array","from","i","getAllTransliterators","TRANSLITERATOR","transliteratorSnapRef","getUserPreferences","userId","USER","limit","empty","Error","userDocRef","updateUserPreference","user","set","item","range","fillRange","out","push","isCategoryValid","toBaseTypeMap","list","reduce","oldVal","findCategoryRouteMap","filter","KURALS_CHAPTER","options","k","rootCategoryFinder","findCategoryRouteMapString","undefined","join","convertCategoryRouteMapToString","getUserTransliterators","transliteratorsMap","language","tMap","userLangs","preference","primary","secondary","getUserPreferedLanguages","userTMap","length","entries","transliterator","some","state","userLikedTransliterators","transilterators","allowedTransliteratorIds","t","parseInt","includes","values","defaultState","index","KuralIndexReducer","action","payload","thunkInitKuralIndexMapAndUserPref","dispatch","kuralIndex","sectionMap","literatureMap","chapterMap","transliteratorMap","t1","setUser","updateUserFSAsync","applyPreference","pref","DEFAULT","favorites","fontSize","PreferenceReducer","settings","useNavigation","history","useHistory","route","useSubCategory","resultCategory","useFirestore","React","useState","setResult","PRIMARY_LANG","useSelector","st","KURAL_INDEX","kuralIndexMap","getLiteraturesBySection","useCallback","sectionId","LITERATURE_MAP","getChaptersFromLiterature","CHAPTER_MAP","c","useEffect","getRoutes","categories","favourites","routes","ROUTE_CONSTANTS","LIST_CATEGORY","color","isFavourite","ch","LIST","useRoute","inputFilter","setInputFilter","useDispatch","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","log","debug","sectionRoute","matchPath","path","exact","literatureRoute","chapterRoute","kuralRoute","params","listen","getRouteValue","output","input","itemIndex","indexOf","splice","updatedUserPref","sortSearchResults","items","SortValueMap","status","keyword","results","filters","userSelections","detail","useKuralSearch","USER_LANG","addResults","searchTypes","forEach","sectionNo","setSearchKeyword","types","isInteger","searchNumber","e","findSuitableSearchTypes","setSearchStatus","useStyles","makeStyles","theme","treeMenuContainer","outlineStyle","padding","spacing","listItem","cursor","position","borderRadius","WebkitTapHighlightColor","paddingLeft","palette","main","listIcon","display","justifyContent","alignItems","TreeListItem","level","hasNodes","isOpen","label","toggleNode","focused","onClick","active","classes","ListItem","ev","className","ListItemText","ExpandMore","ChevronRight","CategoryViewer","props","chapterQueryParam","URLSearchParams","search","routeKey","replace","RegExp","sections","getChaptersByLiterature","TREE_DATA","s","sIndex","nodes","lit","chIndex","initialActiveKey","initialFocusKey","initialOpenNodes","split","it","substring","getInitialOpenNodes","onClickItem","newRoute","lastItemSeparator","lastIndexOf","currentRoute","hasSearch","List","itemProps","flexDirection","userSelect","breakpoints","up","badgeContainer","background","height","lineHeight","minWidth","kuralWrapper","width","KuralCard","root","clsx","component","componentType","showBadge","dangerouslySetInnerHTML","__html","transliteratorList","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","textAlign","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","TRANSLITERATORS","setKural","kuralDetail","setKuralDetail","userPreferedTranslits","useKuralDetail","transliterators","transliteratorId","name","Chip","size","routeContainer","flexWrap","chipRoot","margin","maxWidth","favoriteIcon","RouteChip","onLongPress","navigateTo","longPressEventHandlers","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","icon","Favorite","style","backgroundColor","RouteViewer","toggleRouteFavourite","renderRight","SwiperCore","use","Virtual","Keyboard","KuralDetailViewer","useParams","activeKuralNo","setActiveKuralNo","slideKuralIds","ITEMS_COUNT_MAP","Container","disableGutters","keyboard","grabCursor","initialSlide","spaceBetween","slidesPerView","allowSlideNext","virtual","onTransitionEnd","swiper","activeIndex","virtualIndex","renderSlide","kuralCard","ListKuralCard","openKuralDetail","kurals","ListKuralsOfChapter","TransliteratorSectionType","gridTemplateColumns","idWrap","opacity","left","labelWrap","ListView","divider","showDivider","onItemSelected","collapsableGroup","listItemTitle","marginLeft","listTitleBadge","chapFavorites","paddingRight","FavoritesViewer","itemNo","useBaseItem","getChapter","KURAL_IDS","CHAPTER_IDS","setKurals","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","onKuralSelected","then","chapterKuralMap","Map","chap","has","noRecordsFound","GroupTitleMaker","isVisible","title","badgeContent","selected","button","inset","Badge","badge","showZero","max","invisible","disablePadding","Collapse","in","timeout","chapterInfo","ListSubheader","disableSticky","marginTop","favoriteCard","Home","Card","variant","CardHeader","CardContent","SEARCH_ROUTE","createStyles","border","borderColor","fade","grey","searchicon","clearIcon","flex","light","KuralSearch","inputRef","useRef","setSearchKey","debounced","useDebouncedCallback","setKeyword","isExact","isSearchRoute","focus","setFocus","current","querySelector","InputBase","ref","placeholder","inputProps","onChange","text","target","onFocus","onSearchTap","Fade","trim","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","toolbar","avatar","actionsGroup","searchbar","marginRight","flexGrow","iconButton","MyAppBar","AppBar","elevation","Toolbar","isHomeRoute","Avatar","Person","IconButton","goBack","KeyboardBackspace","actions","defalutTitle","appBar","bottom","top","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","setRoute","Main","renderRoutes","searchFilter","SearchChips","setFilters","hasStartsWith","f","filterOptions","SearchCategoryLabelMap","all","isShow","Set","r","isSelected","selection","kuralSearchItem","searchItem","searchItemAvatar","SearchResultItem","innerContent","charAt","toUpperCase","Search","getOnClickRoute","renderItem","subList","subHeader","subListItem","subListItemText","TransliteratorLabel","inactive","toUserLikedTranslitsMap","RankTransliteratorSetting","userTransLits","setUserTransLits","onDragEnd","source","destination","updateState","reorderedTransliterors","JSON","parse","stringify","srcList","droppableId","userPreference","provided","droppableProps","innerRef","isDraggingOver","subheader","tItem","draggableId","isDragging","draggableProps","dragHandleProps","ListItemIcon","DragIndicator","disableTypography","itemLabel","itemChild","SettingItem","showExpandIcon","isItemExpanded","toggleItem","container","unmountOnExit","itemText","formControl","SettingsLabel","Settings","fontSizeOptions","baseSize","count","offset","getFontSizeOptions","FormControl","Select","assign","v","MenuItem","ROOT","SEARCH","FAVOURITE","SETTINGS","SettingsViewer","activeChapterNo","setActiveChapterNo","slideChapterIds","chId","render","match","url","ROUTE_REGEX","test","to","App","rootReducers","combineReducers","concat","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER"],"mappings":"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","file":"static/js/main.99c6ed2f.chunk.js","sourcesContent":["/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\nimport { Category } from './types';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n\nexport const CATEGORY_COLORS: Record<Category | 'default', string> = {\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n  default: 'blueviolet',\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n","export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n  BaseType,\n} from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralByIds = async (\n  firestore: ExtendedFirestoreInstance,\n  ids: number[],\n  lang: string\n): Promise<BaseType[]> => {\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await firestoreGetCacheFirst(\n    kuralsRef.where(\n      firebase.firestore.FieldPath.documentId(),\n      'in',\n      ids.map((id) => id.toString())\n    )\n  );\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return getKuralByIds(firestore, kuralRangeIds, lang);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  // TODO: get only transliterators of user prefered language\n  const transliteratorSnapRef = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n  );\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  // TODO: update only if user not an anonymous user\n  await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .doc(`${user.id}`)\n    .set(user);\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { getCategoryIds } from './category';\nimport { findChapterNoFromKuralNo } from './common';\nimport { Category, IndexMapType, RootCategory } from './types';\n\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\nexport type CategoryIdMapPartial = Partial<Record<Category, number>>;\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\nexport const findCategoryRouteMap = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): CategoryIdMapPartial => {\n  const { kural, chapter, literature, section } = filter;\n  const KURALS_CHAPTER = kural ? findChapterNoFromKuralNo(kural) : chapter;\n  return {\n    ...rootCategoryFinder(INDEX_MAP, {\n      chapter: KURALS_CHAPTER,\n      literature,\n      section,\n    }),\n    ...(kural ? { kural } : {}),\n  };\n};\n\nexport const convertCategoryRouteMapToString = (\n  filter: CategoryIdMapPartial\n): string => {\n  return (['section', 'literature', 'chapter', 'kural'] as Category[])\n    .filter((k) => filter[k as Category] !== undefined)\n    .map((k) => filter[k as Category])\n    .join('/');\n};\n\nexport const findCategoryRouteMapString = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): string => {\n  return convertCategoryRouteMapToString(\n    findCategoryRouteMap(INDEX_MAP, filter)\n  );\n};\n","import { Transliterator, User } from './types';\n\nexport const getUserPreferedLanguages = (user: User): string[] => {\n  const { primary, secondary } = user.preference.language;\n  return [primary, ...secondary];\n};\n\nexport const findTransliteratorsOfLanguage = (\n  language: string[],\n  tMap: Record<number, Transliterator>\n): Record<number, Transliterator> => {\n  if (!language.length) {\n    return tMap;\n  }\n  return Object.entries(tMap)\n    .filter(([id, transliterator]) =>\n      language.some((lang) => lang === transliterator.lang)\n    )\n    .reduce((state, [key, value]) => ({ ...state, [key]: value }), {});\n};\n\nexport type UserTransliteratorMap = [Transliterator[], Transliterator[]];\n\ntype getUserTransliteratorsType = (\n  u: User,\n  tMap: Record<number, Transliterator>\n) => UserTransliteratorMap;\nexport const getUserTransliterators: getUserTransliteratorsType = (\n  user,\n  transliteratorsMap\n) => {\n  const result: UserTransliteratorMap = [[], []];\n  const userLangs = getUserPreferedLanguages(user);\n  const userTMap = findTransliteratorsOfLanguage(userLangs, transliteratorsMap);\n  const userLikedTransliterators = user.preference?.transilterators || [];\n  if (userLikedTransliterators.length) {\n    const allowedTransliteratorIds = Object.keys(userTMap).map((t) =>\n      parseInt(t)\n    );\n    result[0] = userLikedTransliterators\n      .filter((t) => allowedTransliteratorIds.includes(t))\n      .map((t) => userTMap[t]);\n    result[1] = allowedTransliteratorIds\n      .filter((t) => !userLikedTransliterators.includes(t))\n      .map((t) => userTMap[t]);\n  } else {\n    result[0] = Object.values(userTMap);\n  }\n  return result;\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport { updateUserPreference, User, UserPreference } from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const DEFAULT: User = {\n  id: 'anonymous',\n  favorites: {\n    kural: [],\n    chapter: [],\n  },\n  preference: {\n    language: {\n      primary: 'TA',\n      secondary: [],\n    },\n    fontSize: 16,\n  },\n};\nexport const PreferenceReducer = (\n  settings = DEFAULT,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category?: RootCategory,\n  id?: number,\n  resultCategory?: Category\n) => [BaseType[], (id: number) => BaseType[], (id: number) => BaseType[]];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (id && category && resultCategory) {\n    if (category === resultCategory) {\n      throw new Error('Bad input');\n    }\n    isCategoryValidErr(category, id);\n  }\n\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primary: PRIMARY_LANG } = useSelector(\n    (st: AppState) => st.user.preference.language\n  );\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  const getLiteraturesBySection = React.useCallback(\n    (sectionId: number): BaseType[] => {\n      const { literature: LITERATURE_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('section', sectionId);\n      return fillRange(INDEX_MAP!!.section[sectionId].litIndex).map(\n        (k) => LITERATURE_MAP[k]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  const getChaptersFromLiterature = React.useCallback(\n    (litId: number): BaseType[] => {\n      const { chapter: CHAPTER_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('literature', litId);\n      return fillRange(INDEX_MAP!!.litChapMap[litId]).map(\n        (c) => CHAPTER_MAP[c]\n      );\n    },\n    [KURAL_INDEX]\n  );\n  React.useEffect(() => {\n    if (!result.length && id) {\n      if (category === 'chapter' && resultCategory === 'kural') {\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, PRIMARY_LANG));\n        })();\n      } else {\n        const { index: INDEX_MAP } = KURAL_INDEX;\n        if (INDEX_MAP) {\n          if (category === 'literature' && resultCategory === 'chapter') {\n            setResult(getChaptersFromLiterature(id));\n          } else if (\n            category === 'section' &&\n            resultCategory === 'literature'\n          ) {\n            setResult(getLiteraturesBySection(id));\n          } else {\n            throw new Error('category not supported');\n          }\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    firestore,\n    id,\n    PRIMARY_LANG,\n    KURAL_INDEX,\n    getLiteraturesBySection,\n    getChaptersFromLiterature,\n  ]);\n\n  return [result, getLiteraturesBySection, getChaptersFromLiterature];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  User,\n  CATEGORY_COLORS,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: Record<'kural' | 'chapter', number[]>\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: ROUTE_CONSTANTS.LIST_CATEGORY,\n      color: CATEGORY_COLORS.default,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section.id}`,\n      color: CATEGORY_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section!!.id}/${\n        categories.literature.id\n      }`,\n      color: CATEGORY_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: favourites.chapter.some(\n        (ch) => ch === categories.chapter?.id\n      ),\n      type: 'chapter',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter.id}`,\n      color: CATEGORY_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: favourites.kural.some((k) => k === categories.kural?.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter!!.id}/${categories.kural.id}`,\n      color: CATEGORY_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.user);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section`,\n      exact: true,\n    });\n    const literatureRoute = matchPath<{ literature: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section/:literature`,\n      exact: true,\n    });\n    // TODO: category & list route for chapter\n    const chapterRoute = matchPath<{ chapter: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n      exact: true,\n    });\n    const kuralRoute = matchPath<{ kural: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n      exact: true,\n    });\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    // log.debug('route path values => ', JSON.stringify(newFilter));\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    // TODO: enable logs after debounceing\n    // log.debug('detect route => ', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites: number[];\n      if (shouldAddToList) {\n        favorites = [...user.favorites[route.type], route.id];\n      } else {\n        const itemIndex = user.favorites[route.type].indexOf(route.id);\n        favorites = user.favorites[route.type];\n        favorites.splice(itemIndex, 1);\n      }\n      const updatedUserPref: User = {\n        ...user,\n        favorites: {\n          ...user.favorites,\n          [route.type]: favorites,\n        },\n      };\n      dispatch(updateUserFSAsync(firestore, updatedUserPref));\n    }\n  };\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\nconst sortSearchResults = (items: SearchResult[]) => {\n  const SortValueMap: Record<Category, number> = {\n    kural: 1,\n    chapter: 2,\n    literature: 3,\n    section: 4,\n  };\n  return items.sort(\n    (a, b) => SortValueMap[a.category] - SortValueMap[b.category]\n  );\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults([...state.results, ...action.payload]),\n    };\n  } else if (action.type === 'SetSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults(action.payload as SearchResult[]),\n    };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { getKural, SearchResult, SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport {\n  appendSearchResults,\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const USER_LANG = useSelector((st: AppState) => st.user.preference.language);\n  const { literature, section, chapter } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword);\n  };\n\n  const addResults = (searchTypes: SearchTypes[], keyword: string): void => {\n    searchTypes.forEach(async (type) => {\n      const items: SearchResult[] = [];\n      switch (type) {\n        case 'ByKuralNo':\n          const kuralNo = parseInt(keyword);\n          if (isCategoryValid('kural', kuralNo)) {\n            const item = await getKural(\n              firestore,\n              parseInt(keyword),\n              USER_LANG.primary\n            );\n            items.push({\n              type,\n              keyword,\n              category: 'kural',\n              item,\n            });\n          }\n          break;\n        case 'ByChapterNo':\n          const chapterNo = parseInt(keyword);\n          if (isCategoryValid('chapter', chapterNo)) {\n            items.push({\n              type,\n              keyword,\n              item: chapter[parseInt(keyword)],\n              category: 'chapter',\n            });\n          }\n          break;\n        case 'ByLiteratureNo':\n          const literatureNo = parseInt(keyword);\n          if (isCategoryValid('literature', literatureNo)) {\n            items.push({\n              type,\n              keyword,\n              item: literature[parseInt(keyword)],\n              category: 'literature',\n            });\n          }\n          break;\n        case 'BySectionNo':\n          const sectionNo = parseInt(keyword);\n          if (isCategoryValid('section', sectionNo)) {\n            items.push({\n              type,\n              keyword,\n              item: section[parseInt(keyword)],\n              category: 'section',\n            });\n          }\n          break;\n      }\n      if (items.length) {\n        dispatch(appendSearchResults(items));\n      }\n    });\n  };\n\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { ChevronRight, ExpandMore } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport TreeMenu, {\n  TreeNodeInArray,\n  TreeMenuItem,\n  Item,\n} from 'react-simple-tree-menu';\nimport { useSubCategory } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\n\nimport { AppState } from './../../../state';\n\nconst useStyles = makeStyles((theme) => ({\n  treeMenuContainer: {\n    '&>div': {\n      outlineStyle: 'none',\n    },\n  },\n  list: {\n    padding: `0px ${theme.spacing(1)}px`,\n  },\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n};\n\n// type TreeListItemProps = TreeMenuItem & { onClickItem: (item: Item) => void };\nconst TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n  onClick,\n  active,\n}: TreeMenuItem) => {\n  const classes = useStyles();\n  const toggleCategory = (ev: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    hasNodes && toggleNode && toggleNode();\n    onClick(ev);\n  };\n  return (\n    <ListItem\n      onClick={toggleCategory}\n      className={`${classes.listItem} level-${level} ${\n        focused ? 'on-focus' : ''\n      } ${active ? 'is-active' : ''}`}>\n      <ListItemText primary={label}></ListItemText>\n      {hasNodes && (\n        <div className={classes.listIcon}>\n          {isOpen ? <ExpandMore /> : <ChevronRight />}\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = (\n  props: CategoryViewerProps\n) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const queryParams = new URLSearchParams(history.location.search);\n  const chapterQueryParam = queryParams.get('chapter');\n  const routeKey = history.location.pathname.replace(\n    new RegExp(`${ROUTE_CONSTANTS.LIST_CATEGORY}(\\/)?`),\n    ''\n  );\n  const getInitialOpenNodes = () => {\n    const nodes = routeKey\n      .split('/')\n      .map((it) => routeKey.substring(0, routeKey.indexOf(it) + it.length));\n    if (nodes.length === 2 && nodes[0] === nodes[1]) {\n      nodes[1] = `${nodes[0]}/${nodes[1]}`;\n    }\n    return nodes;\n  };\n\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n  const TREE_DATA: TreeNodeInArray[] = Object.values(sections).map(\n    (s, sIndex) => ({\n      key: s.id.toString(),\n      label: s.value,\n      index: sIndex,\n      nodes: getLiteraturesBySection(s.id).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        nodes: getChaptersByLiterature(lit.id).map((ch, chIndex) => ({\n          key: ch.id.toString(),\n          label: ch.value,\n          index: chIndex,\n        })),\n      })),\n    })\n  );\n  const onItemClick = (item: Item) => {\n    const newRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${item.key}`;\n    if (!item.hasNodes) {\n      const lastItemSeparator = item.key.lastIndexOf('/');\n      const chapter = item.key.substring(lastItemSeparator + 1);\n      const literatureRoute = item.key.substring(0, lastItemSeparator);\n      const currentRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${literatureRoute}?chapter=${chapter}`;\n      history.replace(currentRoute);\n      history.push(newRoute);\n    } else {\n      history.replace(newRoute);\n    }\n  };\n  debug('CategoryViewer renders');\n  return (\n    <div className={classes.treeMenuContainer}>\n      <TreeMenu\n        initialActiveKey={routeKey}\n        initialFocusKey={\n          chapterQueryParam ? `${routeKey}/${chapterQueryParam}` : routeKey\n        }\n        initialOpenNodes={getInitialOpenNodes()}\n        onClickItem={onItemClick}\n        data={TREE_DATA}\n        hasSearch={false}>\n        {({ items }) => (\n          <List className={classes.list}>\n            {items.map(({ key, ...itemProps }) => (\n              <TreeListItem key={key} {...itemProps} />\n            ))}\n          </List>\n        )}\n      </TreeMenu>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    userSelect: 'none',\n    padding: theme.spacing(1),\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { getUserTransliterators, Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  const { primary: PRIMARY_LANG } = user.preference.language;\n  const TRANSLITERATORS = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  const [userPreferedTranslits] = getUserTransliterators(user, TRANSLITERATORS);\n\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, PRIMARY_LANG));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, PRIMARY_LANG]);\n  // const filteredTransliteratorMap = Object.values(TRANSLITERATORS)\n  //   .filter((trans) => trans.lang === PRIMARY_LANG)\n  //   .sort((t1, t2) => {\n  //     const [t1r, t2r] = [t1.rank, t2.rank];\n  //     return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n  //   });\n  return [kural, kuralDetail, userPreferedTranslits];\n};\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n  favoriteIcon: {\n    width: '1rem',\n    height: '1rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  findCategoryRouteMapString,\n  isCategoryValid,\n  ITEMS_COUNT_MAP,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport KuralDetail from './KuralDetail';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const params = useParams<{ kural: string }>();\n  const KURAL_NO = parseInt(params.kural);\n  const [activeKuralNo, setActiveKuralNo] = React.useState(KURAL_NO);\n  const slideKuralIds = Array.from(Array(ITEMS_COUNT_MAP.kural).keys()).map(\n    (i) => i + 1\n  );\n  const renderSlide = (kId: number, index: number) => (\n    <SwiperSlide key={kId} virtualIndex={index}>\n      <KuralDetail kural={kId} />\n    </SwiperSlide>\n  );\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { kural: activeKuralNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeKuralNo, history]);\n\n  if (!isCategoryValid('kural', KURAL_NO)) {\n    return null;\n  }\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={KURAL_NO - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideKuralIds[slideKuralIds.length - 1] !== activeKuralNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveKuralNo(swiper.activeIndex + 1);\n        }}>\n        {slideKuralIds.map((kId, index) => renderSlide(kId, index))}\n      </Swiper>\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { useSelector } from 'react-redux';\nimport { findCategoryRouteMapString, Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(\n      `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP!!, {\n        kural: kural.id,\n      })}`\n    )();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={i}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const [kurals] = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { findCategoryRouteMapString, ITEMS_COUNT_MAP } from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport 'swiper/swiper.scss';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const history = useHistory();\n  const { chapter } = useParams<{ chapter: string }>();\n  const CHAPTER_NO = parseInt(chapter);\n  const [activeChapterNo, setActiveChapterNo] = React.useState(CHAPTER_NO);\n  const slideChapterIds = Array.from(Array(ITEMS_COUNT_MAP.chapter).keys()).map(\n    (i) => i + 1\n  );\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { chapter: activeChapterNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeChapterNo, history]);\n  const renderSlide = (chId: number, index: number) => (\n    <SwiperSlide key={chId} virtualIndex={index}>\n      <ListKuralsOfChapter chapterNo={chId} />\n    </SwiperSlide>\n  );\n  return (\n    <div className={props.className}>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={CHAPTER_NO!! - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideChapterIds[slideChapterIds.length - 1] !== activeChapterNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveChapterNo(swiper.activeIndex + 1);\n        }}>\n        {slideChapterIds.map((chId, index) => renderSlide(chId, index))}\n      </Swiper>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n} from '@material-ui/core';\nimport { DragIndicator } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  getUserTransliterators,\n  Transliterator,\n  User,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { applyPreference } from 'src/state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  subList: {\n    '&.dragging-over': {\n      backgroundColor: 'lightblue',\n    },\n  },\n  subHeader: {\n    textAlign: 'left',\n    lineHeight: '1.5em',\n  },\n  subListItem: {\n    '&.is-dragging': {\n      backgroundColor: 'red',\n    },\n  },\n  subListItemText: {\n    fontSize: '0.8em',\n  },\n}));\n\ntype RankTransliteratorSettingProps = {\n  user: User;\n  className?: string;\n};\n\nenum TransliteratorSectionType {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n}\ntype TransliteratorSectionMapType = Record<\n  TransliteratorSectionType,\n  Transliterator[]\n>;\n\nconst TransliteratorLabel: Record<TransliteratorSectionType, string> = {\n  active: 'Active',\n  inactive: 'InActive',\n};\n\nconst toUserLikedTranslitsMap = (\n  user: User,\n  transliterators: Record<number, Transliterator>\n): TransliteratorSectionMapType => {\n  const [activeList, inActiveList] = getUserTransliterators(\n    user,\n    transliterators\n  );\n  return { active: activeList, inactive: inActiveList };\n};\n\nexport const RankTransliteratorSetting: React.FC<RankTransliteratorSettingProps> = (\n  props: RankTransliteratorSettingProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const transliterators = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const [userTransLits, setUserTransLits] = React.useState(\n    toUserLikedTranslitsMap(props.user, transliterators)\n  );\n  React.useEffect(() => {\n    setUserTransLits(toUserLikedTranslitsMap(props.user, transliterators));\n  }, [props.user, transliterators]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    let updateState = false;\n    if (!destination) {\n      return;\n    }\n    const reorderedTransliterors = JSON.parse(\n      JSON.stringify(userTransLits)\n    ) as TransliteratorSectionMapType;\n    const srcList =\n      reorderedTransliterors[source.droppableId as TransliteratorSectionType];\n    if (source.droppableId !== destination.droppableId) {\n      const destList =\n        reorderedTransliterors[\n          destination.droppableId as TransliteratorSectionType\n        ];\n      destList.splice(destination.index, 0, srcList[source.index]);\n      srcList.splice(source.index, 1);\n      updateState = true;\n    } else if (source.index !== destination.index) {\n      srcList.splice(destination.index, 0, ...srcList.splice(source.index, 1));\n      updateState = true;\n    }\n    if (updateState) {\n      const userPreference = {\n        ...props.user.preference,\n        transilterators: reorderedTransliterors.active.map((t) => t.id),\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {Object.entries(userTransLits).map(([key, list]) => (\n        <Droppable droppableId={key} key={key}>\n          {(provided, snapshot) => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={clsx(\n                classes.subList,\n                snapshot.isDraggingOver && 'dragging-over'\n              )}\n              subheader={\n                <ListSubheader component='div' className={classes.subHeader}>\n                  {TransliteratorLabel[key as TransliteratorSectionType]}\n                </ListSubheader>\n              }>\n              {list.map((tItem, index) => (\n                <Draggable\n                  key={tItem.id}\n                  draggableId={tItem.id.toString()}\n                  index={index}>\n                  {(provided, snapshot) => (\n                    <ListItem\n                      className={clsx(\n                        classes.subListItem,\n                        snapshot.isDragging && 'is-dragging'\n                      )}\n                      style={provided.draggableProps.style}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}>\n                      <ListItemIcon>\n                        <DragIndicator />\n                      </ListItemIcon>\n                      <ListItemText\n                        disableTypography\n                        primary={tItem.name}\n                        className={classes.subListItemText}\n                      />\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      ))}\n    </DragDropContext>\n  );\n};\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  showDivider?: boolean;\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={props.showDivider}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n  Badge,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  findCategoryRouteMapString,\n  findChapterNoFromKuralNo,\n  getKuralByIds,\n} from 'src/lib/api';\nimport { Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  collapsableGroup: {\n    // marginBottom: theme.spacing(1),\n  },\n  list: {\n    '& .sub-header': {\n      textAlign: 'left',\n      color: 'brown',\n      lineHeight: '2rem',\n      padding: `0px 0 0 ${theme.spacing(0.5)}px`,\n    },\n  },\n  listItemTitle: {\n    '& .badge-placeholder': {\n      height: '0.5rem',\n    },\n    '& .expand-toggle': {\n      marginLeft: theme.spacing(1.5),\n    },\n  },\n  listTitleBadge: {\n    opacity: 0.6,\n    fontSize: '0.6rem',\n    height: '130%',\n    width: '120%',\n  },\n  kural: {\n    padding: `0 0 0 ${theme.spacing(1)}px`,\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  chapFavorites: {\n    padding: 0,\n    '& li': {\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5),\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const firestore = useFirestore();\n  const {\n    favorites: { kural: KURAL_IDS, chapter: CHAPTER_IDS },\n    preference,\n  } = useSelector((st: AppState) => st.user);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n  const onKuralSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          kural: item.id,\n        })}`\n      )();\n    }\n  };\n  React.useEffect(() => {\n    if (KURAL_IDS.length > 0) {\n      getKuralByIds(firestore, KURAL_IDS, preference.language.primary).then(\n        (kurals) => {\n          setKurals(kurals);\n        }\n      );\n    }\n  }, [firestore, KURAL_IDS, preference.language.primary]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n\n  const GroupTitleMaker = (\n    isVisible: boolean,\n    onClick: () => void,\n    title: React.ReactNode,\n    badgeContent: React.ReactNode\n  ) => (\n    <ListItem\n      selected={isVisible}\n      className={classes.listItemTitle}\n      button\n      onClick={onClick}>\n      <ListItemText inset={true} primary={title} />\n      <Badge\n        badgeContent={badgeContent}\n        classes={{ badge: classes.listTitleBadge }}\n        color='secondary'\n        showZero={false}\n        max={10}\n        invisible={isVisible}>\n        <div className='badge-placeholder'></div>\n      </Badge>\n      <div className='expand-toggle'>\n        {isVisible ? <ExpandLess /> : <ExpandMore />}\n      </div>\n    </ListItem>\n  );\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        {GroupTitleMaker(\n          isKuralVisible,\n          () => {\n            setKuralVisible(!isKuralVisible);\n          },\n          'Kurals',\n          KURAL_IDS.length\n        )}\n        <Collapse\n          in={isKuralVisible}\n          style={{ paddingBottom: isKuralVisible ? 8 : 0 }}\n          className={classes.collapsableGroup}\n          timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard\n                      className={classes.kural}\n                      key={item.id}\n                      kural={item}\n                      onClick={onKuralSelected}\n                    />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        {GroupTitleMaker(\n          isChapterVisible,\n          () => {\n            setChapterVisible(!isChapterVisible);\n          },\n          'Chapters',\n          CHAPTER_IDS.length\n        )}\n        <Collapse\n          in={isChapterVisible}\n          style={{ paddingBottom: isChapterVisible ? 8 : 0 }}\n          className={classes.collapsableGroup}\n          timeout='auto'>\n          {CHAPTER_IDS.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={\n                CHAPTER_IDS.sort()\n                  .map((ch) => getChapter(ch))\n                  .filter((ch) => ch !== null) as BaseType[]\n              }\n              onItemSelected={onChapterSelected}\n            />\n          )}\n          {CHAPTER_IDS.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(0.5),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; */\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n      {/* <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype ListWithRouteViewerProps = RouteConfigComponentProps;\n\nexport const ListCategoryViewer: React.FC<ListWithRouteViewerProps> = ({\n  route,\n}: ListWithRouteViewerProps) => {\n  const classes = useStyles();\n  return <div className={classes.root}>{renderRoutes(route?.routes)}</div>;\n};\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n      cursor: 'pointer',\n    },\n    clearIcon: {\n      cursor: 'pointer',\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\n// TODO: AppBar & kuralSearch rerenders often e.g) even if there any changes in settigns page.\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const history = useHistory();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const isSearchRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: SEARCH_ROUTE })?.isExact ||\n    false;\n  const [focus, setFocus] = React.useState(isSearchRoute());\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  history.listen(({ pathname }) => {\n    if (pathname !== SEARCH_ROUTE) {\n      setKeyword('');\n      setFocus(false);\n    } else {\n      setFocus(true);\n    }\n  });\n  const onSearchBarFocus = (): void => {\n    if (history.location.pathname !== SEARCH_ROUTE) {\n      debug('route -> search');\n      history.push(SEARCH_ROUTE);\n    }\n  };\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon\n        onClick={() => {\n          inputRef.current?.querySelector('input')?.focus();\n        }}\n        className={clsx(classes.searchicon, 'search-icon')}\n      />\n      <InputBase\n        ref={inputRef}\n        className={`searchbar ${classes.input}`}\n        placeholder='Search 43, agara'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          onSearchBarFocus();\n          props.onSearchTap && props.onSearchTap();\n        }}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          className={classes.clearIcon}\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardBackspace, Person, Settings } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\n\nimport KuralSearch from '../kural/KuralSearch';\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'space-around',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  const history = useHistory();\n  const isHomeRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: '/' })?.isExact || false;\n  const renderLeftIcon = (): React.ReactElement => {\n    return !isHomeRoute() ? (\n      <IconButton className={classes.iconButton} onClick={history.goBack}>\n        <KeyboardBackspace color='primary' />\n      </IconButton>\n    ) : (\n      <Avatar className={classes.avatar}>\n        <Person />\n      </Avatar>\n    );\n  };\n\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {renderLeftIcon()}\n            <KuralSearch className={classes.searchbar} />\n            <div className={classes.actionsGroup}>\n              {props.actions}\n              <IconButton\n                className={classes.iconButton}\n                onClick={(): void => history.push('/settings')}>\n                <Settings color='primary' />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default MyAppBar;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  // {\n  //   icon: <SettingsIcon />,\n  //   route: '/settings',\n  //   label: 'Settings',\n  // },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      <MyAppBar />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setAllUserSelections, setUserSelection } from '../../../state/search';\nimport {\n  CATEGORY_COLORS,\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n} from './../../../lib/api';\nimport { AppState } from './../../../state';\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n}));\n\nexport const SearchChips: React.FC<SearchChipsProps> = (\n  props: SearchChipsProps\n) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            style={{\n              backgroundColor:\n                CATEGORY_COLORS[\n                  f.type === 'all' || f.type === 'detail' ? 'default' : f.type\n                ],\n            }}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport {\n  isResultOfType,\n  SearchResult,\n  CATEGORY_COLORS,\n  Category,\n  findCategoryRouteMapString,\n} from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state/reducers';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport { SearchChips } from './SearchChips';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n  searchItem: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    cursor: 'pointer',\n  },\n  searchItemAvatar: {\n    width: '2rem',\n    height: '2rem',\n    textAlign: 'center',\n    fontSize: '1rem',\n    marginRight: '0.5rem',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchResultItemProps = {\n  component?: React.ReactNode;\n  result: SearchResult;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  result,\n  label,\n  onClick,\n  component,\n}: SearchResultItemProps) => {\n  const classes = useStyles();\n  const innerContent = component ? component : <div>{result.item.value}</div>;\n  return (\n    <ListItem\n      key={`${label}${result.item.id}`}\n      onClick={onClick}\n      className={classes.searchItem}>\n      <Avatar\n        className={classes.searchItemAvatar}\n        style={{ backgroundColor: CATEGORY_COLORS[result.category] }}>\n        {label.charAt(0).toUpperCase()}\n      </Avatar>\n      {innerContent}\n    </ListItem>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const getOnClickRoute = React.useCallback(\n    (category: Category, id: number) => {\n      let route = ROUTE_CONSTANTS.LIST_CATEGORY;\n      if (INDEX_MAP) {\n        route += `/${findCategoryRouteMapString(INDEX_MAP, {\n          [category]: id,\n        })}`;\n      }\n      return route;\n    },\n    [INDEX_MAP]\n  );\n  const [navigateTo] = useNavigation();\n  const renderItem = (\n    item: SearchResult,\n    index: number\n  ): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <SearchResultItem\n          key={index}\n          result={item}\n          label='k'\n          onClick={navigateTo(getOnClickRoute('kural', item.item.id))}\n          component={\n            <KuralCard\n              componentType='span'\n              key={item.item.id}\n              kural={item.item}\n              className={classes.kuralSearchItem}\n            />\n          }\n        />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='ch'\n          onClick={navigateTo(getOnClickRoute('chapter', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='lit'\n          onClick={navigateTo(getOnClickRoute('literature', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='sec'\n          onClick={navigateTo(getOnClickRoute('section', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <SearchChips />\n      <List>{search.results.map((item, i) => renderItem(item, i))}</List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { FC, PropsWithChildren } from 'react';\n\nimport {\n  Collapse,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport { ExpandMore, ExpandLess } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  itemLabel: {\n    fontSize: '1em',\n  },\n  itemChild: {\n    padding: theme.spacing(1),\n  },\n}));\n\ntype RankTransliteratorListProps = PropsWithChildren<{\n  label: string;\n  className?: string;\n  isOpen?: boolean;\n  showExpandIcon?: boolean;\n}>;\n\nexport const SettingItem: FC<RankTransliteratorListProps> = ({\n  label,\n  className,\n  isOpen = false,\n  showExpandIcon = true,\n  children,\n}: RankTransliteratorListProps) => {\n  const classes = useStyles();\n  const [isItemExpanded, toggleItem] = React.useState(isOpen);\n  return (\n    <>\n      <ListItem\n        button\n        className={clsx(className, classes.root)}\n        onClick={(): void => toggleItem(!isItemExpanded)}>\n        <ListItemText\n          classes={{ primary: classes.itemLabel }}\n          primary={label}\n        />\n        {showExpandIcon && (\n          <ListItemIcon>\n            {isItemExpanded ? <ExpandLess /> : <ExpandMore />}\n          </ListItemIcon>\n        )}\n      </ListItem>\n      <Collapse\n        classes={{ container: classes.itemChild }}\n        in={isItemExpanded}\n        timeout='auto'\n        unmountOnExit>\n        {children}\n      </Collapse>\n    </>\n  );\n};\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Select,\n  FormControl,\n  MenuItem,\n} from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport { applyPreference, DEFAULT } from '../../../state/settings';\nimport { RankTransliteratorSetting } from './RankTransliteratorSetting';\nimport { SettingItem } from './SettingItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n  TRANSLITERATOR_PICK: 'Order Transliterator',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst getFontSizeOptions = (\n  baseSize: number,\n  count: number,\n  offset = 2\n): number[] => {\n  const result = [];\n  let size = baseSize;\n  while (count > 0) {\n    result.push(size);\n    size = size + offset;\n    count--;\n  }\n  return result;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = useSelector((st: AppState) => st.user);\n\n  const fontSizeOptions: Array<number> = getFontSizeOptions(\n    DEFAULT.preference.fontSize - 4,\n    10\n  );\n\n  const onFontChange = (fontSize: number): void => {\n    dispatch(applyPreference(Object.assign(user.preference, { fontSize })));\n  };\n\n  debug('renders Settings');\n  return (\n    <div className={props.className}>\n      <List>\n        <ListItem className={classes.item}>\n          <ListItemText\n            classes={{ primary: classes.itemText }}\n            primary={SettingsLabel.FONT_SIZE}\n          />\n          <FormControl className={classes.formControl}>\n            <Select\n              value={user.preference.fontSize}\n              onChange={(e): void => onFontChange(e.target.value as number)}>\n              {fontSizeOptions.map((v) => (\n                <MenuItem key={v} value={v}>\n                  {v}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <SettingItem label={SettingsLabel.TRANSLITERATOR_PICK} isOpen={false}>\n          <RankTransliteratorSetting user={user} />\n        </SettingItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig, RouteConfigComponentProps } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport { isCategoryValid } from './lib/api';\nimport { CategoryViewer } from './views/components/kural/CategoryViewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport Home from './views/pages/home';\nimport { ListCategoryViewer } from './views/pages/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  LIST_CATEGORY: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListCategoryViewer,\n        routes: [\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST_CATEGORY}*`,\n            // eslint-disable-next-line react/display-name\n            render: ({ match }: RouteConfigComponentProps): React.ReactNode => {\n              const route = match.url.replace(ROUTE_CONSTANTS.LIST, '');\n              const ROUTE_REGEX = /^(\\/\\d+)?(\\/\\d+)?$/;\n              if (ROUTE_REGEX.test(route)) {\n                const [section, literature] = [\n                  route.replace(ROUTE_REGEX, '$1').replace('/', ''),\n                  route.replace(ROUTE_REGEX, '$2').replace('/', ''),\n                ];\n                if (\n                  (section === '' && literature === '') ||\n                  (section.length > 0 &&\n                    isCategoryValid('section', parseInt(section))) ||\n                  (literature.length > 0 &&\n                    isCategoryValid('literature', parseInt(literature)))\n                ) {\n                  return <CategoryViewer />;\n                }\n              }\n              return <Redirect to={`${ROUTE_CONSTANTS.LIST}/1/1/1`} />;\n            },\n          },\n        ],\n      },\n\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => (\n          <Redirect to={ROUTE_CONSTANTS.ROOT} />\n        ),\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div\n      className={classes.root}\n      style={{ fontSize: user.preference.fontSize }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  user: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","import { Category, SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport const ITEMS_COUNT_MAP: Record<Category, number> = {\n  kural: 1330,\n  chapter: 133,\n  literature: 13,\n  section: 3,\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\nexport * from './route';\nexport * from './user';\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n"],"sourceRoot":""}