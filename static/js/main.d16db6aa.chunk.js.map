{"version":3,"sources":["lib/api/category.ts","lib/api/common.ts","state/kuralIndex/index.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","lib/api/route.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","views/components/kural/CategoryViewer.tsx","lib/hooks/useFavouriteDetector.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/components/common/ListView.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/index.tsx","views/components/kural/RouteViewer.tsx","lib/hooks/useLongPress.tsx","views/pages/list/index.tsx","views/components/kural/KuralSearch.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","state/title/index.ts","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","views/pages/search/SearchChips.tsx","views/pages/search/search.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx","lib/api/index.ts","lib/api/firestore.ts","state/settings/index.ts"],"names":["getLiteratureNoFromChapterNo","INDEX_MAP","chapterNo","isCategoryValidErr","Number","Object","keys","litChapMap","find","litId","isItemInRange","getSectionNoByLiteratureNo","literatureNo","section","map","secId","litIndex","getCategoryIds","category","categoryId","result","literature","chapter","CATEGORY_COLORS","kural","default","getKuralIndex","firestore","a","firestoreGetCacheFirst","collection","COLLECTION_NAME_MAP","indexSnapshot","getDocData","key","docs","doc","id","data","getAllBaseItems","lang","collectionKey","sectionSnapshot","value","getAllSections","getAllChapter","getAllLiterature","findChapterNoFromKuralNo","kuralNo","Math","ceil","isResultOfType","type","resType","startsWith","getKural","kId","KURAL","get","kuralSnapshotRef","getKuralDetail","KURAL_DETAIL","snapshot","getKuralByIds","ids","kuralsRef","where","firebase","FieldPath","documentId","toString","sort","b","getKuralsOfChapter","startKuralNo","kuralRangeIds","Array","from","i","getAllTransliterators","TRANSLITERATOR","transliteratorSnapRef","getUserPreferences","userId","USER","limit","empty","Error","userDocRef","updateUserPreference","user","set","item","range","fillRange","out","push","isCategoryValid","toBaseTypeMap","list","reduce","oldVal","findCategoryRouteMap","filter","KURALS_CHAPTER","options","k","rootCategoryFinder","findCategoryRouteMapString","undefined","join","convertCategoryRouteMapToString","defaultState","transliterator","index","KuralIndexReducer","state","action","payload","thunkInitKuralIndexMapAndUserPref","dispatch","primary","preference","language","kuralIndex","sectionMap","literatureMap","chapterMap","transliteratorMap","t1","setUser","useNavigation","history","useHistory","route","useSubCategory","resultCategory","useFirestore","React","useState","setResult","PRIMARY_LANG","useSelector","st","preferences","KURAL_INDEX","kuralIndexMap","getLiteraturesBySection","useCallback","sectionId","LITERATURE_MAP","getChaptersFromLiterature","CHAPTER_MAP","c","useEffect","length","getRoutes","categories","favourites","routes","ROUTE_CONSTANTS","LIST_CATEGORY","color","isFavourite","some","ch","LIST","useRoute","inputFilter","setInputFilter","useDispatch","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","log","debug","sectionRoute","matchPath","path","exact","literatureRoute","chapterRoute","kuralRoute","params","listen","getRouteValue","output","input","favorites","itemIndex","indexOf","splice","updatedUserPref","updateUserFSAsync","sortSearchResults","items","SortValueMap","status","keyword","results","filters","userSelections","detail","useKuralSearch","USER_LANG","addResults","searchTypes","forEach","parseInt","sectionNo","setSearchKeyword","types","isInteger","searchNumber","e","findSuitableSearchTypes","setSearchStatus","useStyles","makeStyles","theme","favStyle","treeMenuContainer","outlineStyle","listItem","cursor","position","WebkitTapHighlightColor","paddingLeft","spacing","background","listIcon","display","justifyContent","alignItems","TreeListItem","level","hasNodes","isOpen","label","toggleNode","focused","onClick","active","classes","ListItem","ev","className","ExpandMore","ChevronRight","ListItemText","flexDirection","userSelect","breakpoints","up","badgeContainer","palette","main","height","fontSize","lineHeight","borderRadius","padding","minWidth","kuralWrapper","width","KuralCard","props","root","clsx","component","componentType","showBadge","dangerouslySetInnerHTML","__html","replace","transliteratorList","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","textAlign","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","transliterators","setKural","kuralDetail","setKuralDetail","values","trans","t2","rank","t1r","t2r","useKuralDetail","List","transliteratorId","name","Chip","size","SwiperCore","use","Virtual","Keyboard","KuralDetailViewer","useParams","activeKuralNo","setActiveKuralNo","slideKuralIds","ITEMS_COUNT_MAP","newRoute","keyboard","grabCursor","initialSlide","spaceBetween","slidesPerView","allowSlideNext","virtual","onTransitionEnd","swiper","activeIndex","virtualIndex","renderSlide","kuralCard","ListKuralCard","navigateTo","openKuralDetail","kurals","ListKuralsOfChapter","gridTemplateColumns","idWrap","opacity","left","labelWrap","ListView","divider","showDivider","onItemSelected","collapsableGroup","listItemTitle","marginLeft","listTitleBadge","chapFavorites","paddingRight","FavoritesViewer","itemNo","useBaseItem","getChapter","KURAL_IDS","CHAPTER_IDS","setKurals","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","onKuralSelected","then","chapterKuralMap","Map","it","chap","has","noRecordsFound","GroupTitleMaker","isVisible","title","badgeContent","selected","button","inset","Badge","badge","showZero","max","invisible","disablePadding","Collapse","in","style","timeout","chapterInfo","ListSubheader","disableSticky","marginTop","favoriteCard","margin","Home","Card","variant","CardHeader","CardContent","routeContainer","flexWrap","chipRoot","maxWidth","favoriteIcon","RouteChip","onLongPress","longPressEventHandlers","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","icon","backgroundColor","RouteViewer","toggleRouteFavourite","renderRight","SEARCH_ROUTE","createStyles","border","borderColor","fade","grey","searchicon","clearIcon","flex","light","KuralSearch","inputRef","useRef","setSearchKey","debounced","useDebouncedCallback","setKeyword","isExact","isSearchRoute","focus","setFocus","current","querySelector","InputBase","ref","placeholder","inputProps","onChange","text","target","onFocus","onSearchTap","Fade","trim","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","toolbar","avatar","actionsGroup","searchbar","marginRight","flexGrow","iconButton","MyAppBar","AppBar","elevation","Toolbar","isHomeRoute","Avatar","Person","IconButton","goBack","KeyboardBackspace","actions","defalutTitle","appBar","bottom","top","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","currentRoute","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","setRoute","Main","renderRoutes","searchFilter","SearchChips","setFilters","search","hasStartsWith","f","filterOptions","SearchCategoryLabelMap","all","isShow","Set","r","isSelected","selection","kuralSearchItem","searchItem","searchItemAvatar","SearchResultItem","innerContent","charAt","toUpperCase","Search","renderItem","itemText","formControl","SettingsLabel","Settings","fontSizeOptions","baseSize","count","offset","getFontSizeOptions","DEFAULT","FormControl","Select","applyPreference","assign","v","MenuItem","ROOT","SEARCH","FAVOURITE","SETTINGS","SettingsViewer","Container","disableGutters","activeChapterNo","setActiveChapterNo","slideChapterIds","chId","sections","getChaptersByLiterature","TREE_DATA","s","sIndex","nodes","lit","chIndex","initialActiveKey","initialFocusKey","initialOpenNodes","onClickItem","isChapterRoute","test","substring","lastIndexOf","hasSearch","itemProps","to","App","settings","rootReducers","combineReducers","concat","PreferenceReducer","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","render","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER","source","pref","secondary"],"mappings":"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","file":"static/js/main.d16db6aa.chunk.js","sourcesContent":["/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\nimport { Category } from './types';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n\nexport const CATEGORY_COLORS: Record<Category | 'default', string> = {\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n  default: 'blueviolet',\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n","export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n  BaseType,\n} from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralByIds = async (\n  firestore: ExtendedFirestoreInstance,\n  ids: number[],\n  lang: string\n): Promise<BaseType[]> => {\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await firestoreGetCacheFirst(\n    kuralsRef.where(\n      firebase.firestore.FieldPath.documentId(),\n      'in',\n      ids.map((id) => id.toString())\n    )\n  );\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return getKuralByIds(firestore, kuralRangeIds, lang);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  // TODO: get only transliterators of user prefered language\n  const transliteratorSnapRef = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n  );\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { firestoreGetCacheFirst } from './firestore';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestoreGetCacheFirst(\n    firestore\n      .collection(COLLECTION_NAME_MAP.USER)\n      .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n      .limit(1)\n  );\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .doc(`${user.id}`)\n    .set(user);\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { getCategoryIds } from './category';\nimport { findChapterNoFromKuralNo } from './common';\nimport { Category, IndexMapType, RootCategory } from './types';\n\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\nexport type CategoryIdMapPartial = Partial<Record<Category, number>>;\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\nexport const findCategoryRouteMap = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): CategoryIdMapPartial => {\n  const { kural, chapter, literature, section } = filter;\n  const KURALS_CHAPTER = kural ? findChapterNoFromKuralNo(kural) : chapter;\n  return {\n    ...rootCategoryFinder(INDEX_MAP, {\n      chapter: KURALS_CHAPTER,\n      literature,\n      section,\n    }),\n    ...(kural ? { kural } : {}),\n  };\n};\n\nexport const convertCategoryRouteMapToString = (\n  filter: CategoryIdMapPartial\n): string => {\n  return (['section', 'literature', 'chapter', 'kural'] as Category[])\n    .filter((k) => filter[k as Category] !== undefined)\n    .map((k) => filter[k as Category])\n    .join('/');\n};\n\nexport const findCategoryRouteMapString = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): string => {\n  return convertCategoryRouteMapToString(\n    findCategoryRouteMap(INDEX_MAP, filter)\n  );\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category?: RootCategory,\n  id?: number,\n  resultCategory?: Category\n) => [BaseType[], (id: number) => BaseType[], (id: number) => BaseType[]];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (id && category && resultCategory) {\n    if (category === resultCategory) {\n      throw new Error('Bad input');\n    }\n    isCategoryValidErr(category, id);\n  }\n\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primary: PRIMARY_LANG } = useSelector(\n    (st: AppState) => st.preferences.preference.language\n  );\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  const getLiteraturesBySection = React.useCallback(\n    (sectionId: number): BaseType[] => {\n      const { literature: LITERATURE_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('section', sectionId);\n      return fillRange(INDEX_MAP!!.section[sectionId].litIndex).map(\n        (k) => LITERATURE_MAP[k]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  const getChaptersFromLiterature = React.useCallback(\n    (litId: number): BaseType[] => {\n      const { chapter: CHAPTER_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('literature', litId);\n      return fillRange(INDEX_MAP!!.litChapMap[litId]).map(\n        (c) => CHAPTER_MAP[c]\n      );\n    },\n    [KURAL_INDEX]\n  );\n  React.useEffect(() => {\n    if (!result.length && id) {\n      if (category === 'chapter' && resultCategory === 'kural') {\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, PRIMARY_LANG));\n        })();\n      } else {\n        const { index: INDEX_MAP } = KURAL_INDEX;\n        if (INDEX_MAP) {\n          if (category === 'literature' && resultCategory === 'chapter') {\n            setResult(getChaptersFromLiterature(id));\n          } else if (\n            category === 'section' &&\n            resultCategory === 'literature'\n          ) {\n            setResult(getLiteraturesBySection(id));\n          } else {\n            throw new Error('category not supported');\n          }\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    firestore,\n    id,\n    PRIMARY_LANG,\n    KURAL_INDEX,\n    getLiteraturesBySection,\n    getChaptersFromLiterature,\n  ]);\n\n  return [result, getLiteraturesBySection, getChaptersFromLiterature];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  User,\n  CATEGORY_COLORS,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: Record<'kural' | 'chapter', number[]>\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: ROUTE_CONSTANTS.LIST_CATEGORY,\n      color: CATEGORY_COLORS.default,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section.id}`,\n      color: CATEGORY_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section!!.id}/${\n        categories.literature.id\n      }`,\n      color: CATEGORY_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: favourites.chapter.some(\n        (ch) => ch === categories.chapter?.id\n      ),\n      type: 'chapter',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter.id}`,\n      color: CATEGORY_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: favourites.kural.some((k) => k === categories.kural?.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter!!.id}/${categories.kural.id}`,\n      color: CATEGORY_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.preferences);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section`,\n      exact: true,\n    });\n    const literatureRoute = matchPath<{ literature: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section/:literature`,\n      exact: true,\n    });\n    // TODO: category & list route for chapter\n    const chapterRoute = matchPath<{ chapter: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n      exact: true,\n    });\n    const kuralRoute = matchPath<{ kural: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n      exact: true,\n    });\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    // log.debug('route path values => ', JSON.stringify(newFilter));\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    // TODO: enable logs after debounceing\n    // log.debug('detect route => ', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites: number[];\n      if (shouldAddToList) {\n        favorites = [...user.favorites[route.type], route.id];\n      } else {\n        const itemIndex = user.favorites[route.type].indexOf(route.id);\n        favorites = user.favorites[route.type];\n        favorites.splice(itemIndex, 1);\n      }\n      const updatedUserPref: User = {\n        ...user,\n        favorites: {\n          ...user.favorites,\n          [route.type]: favorites,\n        },\n      };\n      dispatch(updateUserFSAsync(firestore, updatedUserPref));\n    }\n  };\n  // TODO: direct access of http://localhost:3000/#/list/kural/631 doesn't show routes\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\nconst sortSearchResults = (items: SearchResult[]) => {\n  const SortValueMap: Record<Category, number> = {\n    kural: 1,\n    chapter: 2,\n    literature: 3,\n    section: 4,\n  };\n  return items.sort(\n    (a, b) => SortValueMap[a.category] - SortValueMap[b.category]\n  );\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults([...state.results, ...action.payload]),\n    };\n  } else if (action.type === 'SetSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults(action.payload as SearchResult[]),\n    };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { getKural, SearchResult, SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport {\n  appendSearchResults,\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const USER_LANG = useSelector(\n    (st: AppState) => st.preferences.preference.language\n  );\n  const { literature, section, chapter } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword);\n  };\n\n  const addResults = (searchTypes: SearchTypes[], keyword: string): void => {\n    searchTypes.forEach(async (type) => {\n      const items: SearchResult[] = [];\n      switch (type) {\n        case 'ByKuralNo':\n          const kuralNo = parseInt(keyword);\n          if (isCategoryValid('kural', kuralNo)) {\n            const item = await getKural(\n              firestore,\n              parseInt(keyword),\n              USER_LANG.primary\n            );\n            items.push({\n              type,\n              keyword,\n              category: 'kural',\n              item,\n            });\n          }\n          break;\n        case 'ByChapterNo':\n          const chapterNo = parseInt(keyword);\n          if (isCategoryValid('chapter', chapterNo)) {\n            items.push({\n              type,\n              keyword,\n              item: chapter[parseInt(keyword)],\n              category: 'chapter',\n            });\n          }\n          break;\n        case 'ByLiteratureNo':\n          const literatureNo = parseInt(keyword);\n          if (isCategoryValid('literature', literatureNo)) {\n            items.push({\n              type,\n              keyword,\n              item: literature[parseInt(keyword)],\n              category: 'literature',\n            });\n          }\n          break;\n        case 'BySectionNo':\n          const sectionNo = parseInt(keyword);\n          if (isCategoryValid('section', sectionNo)) {\n            items.push({\n              type,\n              keyword,\n              item: section[parseInt(keyword)],\n              category: 'section',\n            });\n          }\n          break;\n      }\n      if (items.length) {\n        dispatch(appendSearchResults(items));\n      }\n    });\n  };\n\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { ChevronRight, ExpandMore } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport TreeMenu, {\n  TreeNodeInArray,\n  TreeMenuItem,\n  Item,\n} from 'react-simple-tree-menu';\nimport { useSubCategory } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\n\nimport { AppState } from './../../../state';\n\nconst useStyles = makeStyles((theme) => ({\n  treeMenuContainer: {\n    '&>div': {\n      outlineStyle: 'none',\n    },\n  },\n  list: {},\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(7),\n    },\n    // TODO: styling\n    '&.on-focus': {\n      background: 'lightblue',\n    },\n    '&.is-active': {\n      background: 'green',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n};\n\n// type TreeListItemProps = TreeMenuItem & { onClickItem: (item: Item) => void };\nconst TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n  onClick,\n  active,\n}: TreeMenuItem) => {\n  const classes = useStyles();\n  const toggleCategory = (ev: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    hasNodes && toggleNode && toggleNode();\n    onClick(ev);\n  };\n  return (\n    <ListItem\n      onClick={toggleCategory}\n      className={`${classes.listItem} level-${level} ${\n        focused ? 'on-focus' : ''\n      } ${active ? 'is-active' : ''}`}>\n      {hasNodes && (\n        <div className={classes.listIcon}>\n          {isOpen ? <ExpandMore /> : <ChevronRight />}\n        </div>\n      )}\n      <ListItemText primary={label}></ListItemText>\n    </ListItem>\n  );\n};\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = (\n  props: CategoryViewerProps\n) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n  const TREE_DATA: TreeNodeInArray[] = Object.values(sections).map(\n    (s, sIndex) => ({\n      key: s.id.toString(),\n      label: s.value,\n      index: sIndex,\n      nodes: getLiteraturesBySection(s.id).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        nodes: getChaptersByLiterature(lit.id).map((ch, chIndex) => ({\n          key: ch.id.toString(),\n          label: ch.value,\n          index: chIndex,\n        })),\n      })),\n    })\n  );\n  const onItemClick = (item: Item) => {\n    const isChapterRoute = /\\d+\\/\\d+\\/\\d+/.test(item.key);\n    const newRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${item.key}`;\n    if (isChapterRoute) {\n      const currentRoute = item.key.substring(0, item.key.lastIndexOf('/'));\n      history.push(currentRoute);\n      history.push(newRoute);\n    } else {\n      history.replace(newRoute);\n    }\n  };\n  debug('CategoryViewer renders');\n  return (\n    <div className={classes.treeMenuContainer}>\n      <TreeMenu\n        initialActiveKey={'1/3'}\n        initialFocusKey={'1/2'}\n        initialOpenNodes={['1', '1/2']}\n        onClickItem={onItemClick}\n        data={TREE_DATA}\n        hasSearch={false}>\n        {({ items }) => (\n          <List className={classes.list}>\n            {items.map(({ key, ...itemProps }) => (\n              <TreeListItem key={key} {...itemProps} />\n            ))}\n          </List>\n        )}\n      </TreeMenu>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { Category } from 'src/lib/api';\n\nimport { AppState } from '../../state/reducers';\nimport FavouriteToggle from '../../views/components/common/FavouriteToggle';\n\nconst useStyles = makeStyles((theme) => ({\n  favStyle: {\n    color: 'rgba(215, 22, 64, 0.8)',\n  },\n}));\n\nconst isFavourite = (\n  type: 'kural' | 'chapter',\n  itemNo: number,\n  items: number[]\n): boolean => {\n  // TODO:\n  return true;\n};\ntype ToggleFavourite = (favourite: boolean) => void;\ntype useKuralHeaderType = (\n  type: Exclude<Category, 'section' | 'literature'>,\n  path: string\n) => React.ReactNode;\nexport const useFavouriteDetector: useKuralHeaderType = (type, path) => {\n  const classes = useStyles();\n  const { [type]: FAVOURITE_ITEMS } = useSelector(\n    (st: AppState) => st.preferences.favorites\n  );\n  const { pathname } = useLocation();\n  const isRoute = matchPath<Record<string, string>>(pathname, path);\n  let element: React.ReactNode = null;\n  const setFavourite: ToggleFavourite = (flag: boolean) => {\n    // TODO:\n  };\n  if (isRoute?.isExact) {\n    element = (\n      <FavouriteToggle\n        className={classes.favStyle}\n        active={isFavourite(\n          type,\n          parseInt(isRoute.params[type]),\n          FAVOURITE_ITEMS\n        )}\n        handler={(isActive: boolean): Promise<boolean> => {\n          setFavourite(isActive);\n          return Promise.resolve(true);\n        }}\n      />\n    );\n  }\n  return element;\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    userSelect: 'none',\n    padding: theme.spacing(1),\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const {\n    preferences: {\n      preference: {\n        language: { primary },\n      },\n    },\n    kuralIndexMap: { transliterator: transliterators },\n  } = useSelector((st: AppState) => st);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, primary));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, primary]);\n  const filteredTransliteratorMap = Object.values(transliterators)\n    .filter((trans) => trans.lang === primary)\n    .sort((t1, t2) => {\n      const [t1r, t2r] = [t1.rank, t2.rank];\n      return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n    });\n  return [kural, kuralDetail, filteredTransliteratorMap];\n};\n","import React from 'react';\n\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  findCategoryRouteMapString,\n  isCategoryValid,\n  ITEMS_COUNT_MAP,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport KuralDetail from './KuralDetail';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const history = useHistory();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const params = useParams<{ kural: string }>();\n  const KURAL_NO = parseInt(params.kural);\n  const [activeKuralNo, setActiveKuralNo] = React.useState(KURAL_NO);\n  const slideKuralIds = Array.from(Array(ITEMS_COUNT_MAP.kural).keys()).map(\n    (i) => i + 1\n  );\n  const renderSlide = (kId: number, index: number) => (\n    <SwiperSlide key={kId} virtualIndex={index}>\n      <KuralDetail kural={kId} />\n    </SwiperSlide>\n  );\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { kural: activeKuralNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeKuralNo, history]);\n\n  if (!isCategoryValid('kural', KURAL_NO)) {\n    return null;\n  }\n  return (\n    <Swiper\n      keyboard={true}\n      grabCursor={true}\n      initialSlide={KURAL_NO - 1}\n      spaceBetween={10}\n      slidesPerView={1}\n      allowSlideNext={slideKuralIds[slideKuralIds.length - 1] !== activeKuralNo}\n      virtual\n      onTransitionEnd={(swiper) => {\n        setActiveKuralNo(swiper.activeIndex + 1);\n      }}>\n      {slideKuralIds.map((kId, index) => renderSlide(kId, index))}\n    </Swiper>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { useSelector } from 'react-redux';\nimport { findCategoryRouteMapString, Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(\n      `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP!!, {\n        kural: kural.id,\n      })}`\n    )();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={i}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const [kurals] = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { debug } from 'loglevel';\n// import { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { findCategoryRouteMapString, ITEMS_COUNT_MAP } from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\n\nimport 'swiper/swiper.scss';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const history = useHistory();\n  const { chapter } = useParams<{ chapter: string }>();\n  const CHAPTER_NO = parseInt(chapter);\n  const [activeChapterNo, setActiveChapterNo] = React.useState(CHAPTER_NO);\n  const slideChapterIds = Array.from(Array(ITEMS_COUNT_MAP.chapter).keys()).map(\n    (i) => i + 1\n  );\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { chapter: activeChapterNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeChapterNo, history]);\n  const renderSlide = (chId: number, index: number) => (\n    <SwiperSlide key={chId} virtualIndex={index}>\n      <ListKuralsOfChapter chapterNo={chId} />\n    </SwiperSlide>\n  );\n  return (\n    <div className={props.className}>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={CHAPTER_NO!! - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideChapterIds[slideChapterIds.length - 1] !== activeChapterNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveChapterNo(swiper.activeIndex + 1);\n        }}>\n        {slideChapterIds.map((chId, index) => renderSlide(chId, index))}\n      </Swiper>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  showDivider?: boolean;\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={props.showDivider}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n  Badge,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { findChapterNoFromKuralNo, getKuralByIds } from 'src/lib/api';\nimport { Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  collapsableGroup: {\n    // marginBottom: theme.spacing(1),\n  },\n  list: {\n    '& .sub-header': {\n      textAlign: 'left',\n      color: 'brown',\n      lineHeight: '2rem',\n      padding: `0px 0 0 ${theme.spacing(0.5)}px`,\n    },\n  },\n  listItemTitle: {\n    '& .badge-placeholder': {\n      height: '0.5rem',\n    },\n    '& .expand-toggle': {\n      marginLeft: theme.spacing(1.5),\n    },\n  },\n  listTitleBadge: {\n    opacity: 0.6,\n    fontSize: '0.6rem',\n    height: '130%',\n    width: '120%',\n  },\n  kural: {\n    padding: `0 0 0 ${theme.spacing(1)}px`,\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  chapFavorites: {\n    padding: 0,\n    '& li': {\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5),\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const firestore = useFirestore();\n  const {\n    favorites: { kural: KURAL_IDS, chapter: CHAPTER_IDS },\n    preference,\n  } = useSelector((st: AppState) => st.preferences);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  // TODO:\n  const onChapterSelected = (item: BaseType): void => {\n    navigateTo(`/list/${item.id}/kural`)();\n  };\n  const onKuralSelected = (item: BaseType): void => {\n    navigateTo(`/list/kural/${item.id}`)();\n  };\n  React.useEffect(() => {\n    if (KURAL_IDS.length > 0) {\n      getKuralByIds(firestore, KURAL_IDS, preference.language.primary).then(\n        (kurals) => {\n          setKurals(kurals);\n        }\n      );\n    }\n  }, [firestore, KURAL_IDS, preference.language.primary]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n\n  const GroupTitleMaker = (\n    isVisible: boolean,\n    onClick: () => void,\n    title: React.ReactNode,\n    badgeContent: React.ReactNode\n  ) => (\n    <ListItem\n      selected={isVisible}\n      className={classes.listItemTitle}\n      button\n      onClick={onClick}>\n      <ListItemText inset={true} primary={title} />\n      <Badge\n        badgeContent={badgeContent}\n        classes={{ badge: classes.listTitleBadge }}\n        color='secondary'\n        showZero={false}\n        max={10}\n        invisible={isVisible}>\n        <div className='badge-placeholder'></div>\n      </Badge>\n      <div className='expand-toggle'>\n        {isVisible ? <ExpandLess /> : <ExpandMore />}\n      </div>\n    </ListItem>\n  );\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        {GroupTitleMaker(\n          isKuralVisible,\n          () => {\n            setKuralVisible(!isKuralVisible);\n          },\n          'Kurals',\n          KURAL_IDS.length\n        )}\n        <Collapse\n          in={isKuralVisible}\n          style={{ paddingBottom: isKuralVisible ? 8 : 0 }}\n          className={classes.collapsableGroup}\n          timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard\n                      className={classes.kural}\n                      key={item.id}\n                      kural={item}\n                      onClick={onKuralSelected}\n                    />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        {GroupTitleMaker(\n          isChapterVisible,\n          () => {\n            setChapterVisible(!isChapterVisible);\n          },\n          'Chapters',\n          CHAPTER_IDS.length\n        )}\n        <Collapse\n          in={isChapterVisible}\n          style={{ paddingBottom: isChapterVisible ? 8 : 0 }}\n          className={classes.collapsableGroup}\n          timeout='auto'>\n          {CHAPTER_IDS.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={\n                CHAPTER_IDS.sort()\n                  .map((ch) => getChapter(ch))\n                  .filter((ch) => ch !== null) as BaseType[]\n              }\n              onItemSelected={onChapterSelected}\n            />\n          )}\n          {CHAPTER_IDS.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(0.5),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; */\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n      {/* <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n  favoriteIcon: {\n    width: '1rem',\n    height: '1rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { renderRoutes } from 'react-router-config';\nimport RouteViewer from 'src/views/components/kural/RouteViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const ListWithRouteViewer: React.FC<any> = (props: any) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <div className={classes.root}>{renderRoutes(props.route.routes)}</div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n      cursor: 'pointer',\n    },\n    clearIcon: {\n      cursor: 'pointer',\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const history = useHistory();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const isSearchRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: SEARCH_ROUTE })?.isExact ||\n    false;\n  const [focus, setFocus] = React.useState(isSearchRoute());\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  history.listen(({ pathname }) => {\n    if (pathname !== SEARCH_ROUTE) {\n      setKeyword('');\n      setFocus(false);\n    } else {\n      setFocus(true);\n    }\n  });\n  const onSearchBarFocus = (): void => {\n    if (history.location.pathname !== SEARCH_ROUTE) {\n      debug('route -> search');\n      history.push(SEARCH_ROUTE);\n    }\n  };\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon\n        onClick={() => {\n          inputRef.current?.querySelector('input')?.focus();\n        }}\n        className={clsx(classes.searchicon, 'search-icon')}\n      />\n      <InputBase\n        ref={inputRef}\n        className={`searchbar ${classes.input}`}\n        placeholder='Search 43, agara'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          onSearchBarFocus();\n          props.onSearchTap && props.onSearchTap();\n        }}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          className={classes.clearIcon}\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardBackspace, Person, Settings } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\n\nimport KuralSearch from '../kural/KuralSearch';\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'space-around',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  const history = useHistory();\n  const isHomeRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: '/' })?.isExact || false;\n  const renderLeftIcon = (): React.ReactElement => {\n    return !isHomeRoute() ? (\n      <IconButton className={classes.iconButton} onClick={history.goBack}>\n        <KeyboardBackspace color='primary' />\n      </IconButton>\n    ) : (\n      <Avatar className={classes.avatar}>\n        <Person />\n      </Avatar>\n    );\n  };\n\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {renderLeftIcon()}\n            <KuralSearch className={classes.searchbar} />\n            <div className={classes.actionsGroup}>\n              {props.actions}\n              <IconButton\n                className={classes.iconButton}\n                onClick={(): void => history.push('/settings')}>\n                <Settings color='primary' />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default MyAppBar;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  // {\n  //   icon: <SearchIcon />,\n  //   route: '/search',\n  //   label: 'Search',\n  // },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  // {\n  //   icon: <SettingsIcon />,\n  //   route: '/settings',\n  //   label: 'Settings',\n  // },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      <MyAppBar />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setAllUserSelections, setUserSelection } from '../../../state/search';\nimport {\n  CATEGORY_COLORS,\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n} from './../../../lib/api';\nimport { AppState } from './../../../state';\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n}));\n\nexport const SearchChips: React.FC<SearchChipsProps> = (\n  props: SearchChipsProps\n) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            style={{\n              backgroundColor:\n                CATEGORY_COLORS[\n                  f.type === 'all' || f.type === 'detail' ? 'default' : f.type\n                ],\n            }}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { isResultOfType, SearchResult, CATEGORY_COLORS } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state/reducers';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport { SearchChips } from './SearchChips';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n  searchItem: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    cursor: 'pointer',\n  },\n  searchItemAvatar: {\n    width: '2rem',\n    height: '2rem',\n    textAlign: 'center',\n    fontSize: '1rem',\n    marginRight: '0.5rem',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchResultItemProps = {\n  component?: React.ReactNode;\n  result: SearchResult;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  result,\n  label,\n  onClick,\n  component,\n}: SearchResultItemProps) => {\n  const classes = useStyles();\n  const innerContent = component ? component : <div>{result.item.value}</div>;\n  return (\n    <ListItem\n      key={`${label}${result.item.id}`}\n      onClick={onClick}\n      className={classes.searchItem}>\n      <Avatar\n        className={classes.searchItemAvatar}\n        style={{ backgroundColor: CATEGORY_COLORS[result.category] }}>\n        {label.charAt(0).toUpperCase()}\n      </Avatar>\n      {innerContent}\n    </ListItem>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const [navigateTo] = useNavigation();\n  const renderItem = (\n    item: SearchResult,\n    index: number\n  ): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <SearchResultItem\n          key={index}\n          result={item}\n          label='k'\n          // TODO:\n          onClick={navigateTo(`/list/kural/${item.item.id}`)}\n          component={\n            <KuralCard\n              componentType='span'\n              key={item.item.id}\n              kural={item.item}\n              className={classes.kuralSearchItem}\n            />\n          }\n        />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='ch'\n          onClick={navigateTo(`/list/${item.item.id}/kural`)}\n          result={item}\n        />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='lit'\n          onClick={navigateTo(`/list/${item.item.id}/chapter`)}\n          result={item}\n        />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='sec'\n          onClick={navigateTo(`/list/${item.item.id}/literature`)}\n          result={item}\n        />\n      );\n    }\n    // if (isResultOfType(item, 'detail') && search.userSelections.detail) {\n    //   return <>detail: {item.item.value}</>;\n    // }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <SearchChips />\n      <List>{search.results.map((item, i) => renderItem(item, i))}</List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Select,\n  FormControl,\n  MenuItem,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport { applyPreference, DEFAULT } from '../../../state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {\n    fontSize: '1em',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst getFontSizeOptions = (\n  baseSize: number,\n  count: number,\n  offset = 2\n): number[] => {\n  const result = [];\n  let size = baseSize;\n  while (count > 0) {\n    result.push(size);\n    size = size + offset;\n    count--;\n  }\n  return result;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { preference } = useSelector((st: AppState) => st.preferences);\n  const fontSizeOptions: Array<number> = getFontSizeOptions(\n    DEFAULT.preference.fontSize - 4,\n    10\n  );\n  const onFontChange = (fontSize: number): void => {\n    dispatch(applyPreference(Object.assign(preference, { fontSize })));\n  };\n\n  return (\n    <div className={props.className}>\n      <List>\n        <ListItem className={classes.item}>\n          <ListItemText\n            classes={{ primary: classes.itemText }}\n            primary={SettingsLabel.FONT_SIZE}\n          />\n          <FormControl className={classes.formControl}>\n            <Select\n              value={preference.fontSize}\n              onChange={(e): void => onFontChange(e.target.value as number)}>\n              {fontSizeOptions.map((v) => (\n                <MenuItem key={v} value={v}>\n                  {v}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport { CategoryViewer } from './views/components/kural/CategoryViewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport Home from './views/pages/home';\nimport { ListWithRouteViewer } from './views/pages/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  LIST_CATEGORY: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListWithRouteViewer,\n        routes: [\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST_CATEGORY}*`,\n            component: CategoryViewer,\n          },\n          /* {\n            path: `${ROUTE_CONSTANTS.LIST}*`,\n            // eslint-disable-next-line react/display-name\n            component: (): React.ReactElement => (\n              <Redirect to={`${ROUTE_CONSTANTS.LIST}/1/1/1`} />\n            ),\n            exact: true,\n          }, */\n        ],\n      },\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => <Redirect to='/' />,\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const settings = useSelector((st: AppState) => st.preferences);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div\n      className={classes.root}\n      style={{ fontSize: settings.preference.fontSize }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  preferences: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","import { Category, SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport const ITEMS_COUNT_MAP: Record<Category, number> = {\n  kural: 1330,\n  chapter: 133,\n  literature: 13,\n  section: 3,\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\nexport * from './route';\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport { updateUserPreference, User, UserPreference } from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const DEFAULT: User = {\n  id: 'anonymous',\n  favorites: {\n    kural: [],\n    chapter: [],\n  },\n  preference: {\n    language: {\n      primary: 'TA',\n      secondary: [],\n    },\n    fontSize: 16,\n  },\n};\nexport const PreferenceReducer = (\n  settings = DEFAULT,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n"],"sourceRoot":""}