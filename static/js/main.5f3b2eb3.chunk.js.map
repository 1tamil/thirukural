{"version":3,"sources":["state/kuralIndex/index.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useBaseItem.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","views/components/common/AnimatedExpandedIcon.tsx","views/components/category-viewer/category-list-item.tsx","views/components/category-viewer/category-viewer.tsx","views/components/category-viewer/category-viewer-container.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/RouteViewer.tsx","lib/hooks/useLongPress.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/pages/settings/RankTransliteratorSetting.tsx","views/components/common/ListView.tsx","views/components/favourite-viewer/chapter-fav-list.tsx","views/components/favourite-viewer/kural-fav-list.tsx","views/components/favourite-viewer/index.tsx","views/pages/home/index.tsx","views/pages/list/index.tsx","views/components/kural/KuralSearch.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","state/title/index.ts","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","views/pages/search/SearchChips.tsx","views/pages/search/search.tsx","views/components/common/DiscreteSlider.tsx","views/pages/settings/FontSizePicker.tsx","views/pages/settings/LanguagePicker.tsx","views/pages/settings/SettingItem.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx","lib/api/types.ts","lib/api/category.ts","lib/api/firestore.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","lib/api/route.ts","lib/api/user.ts","lib/api/index.ts"],"names":["defaultState","chapter","section","literature","transliterator","index","kurals","KuralIndexReducer","state","action","type","payload","thunkInitKuralIndexMapAndUserPref","firestore","dispatch","a","getUserPreferences","user","primary","preference","language","getKuralIndex","kuralIndex","toBaseTypeMap","getAllSections","sectionMap","getAllLiterature","literatureMap","getAllChapter","chapterMap","getAllTransliterators","transliteratorMap","reduce","oldVal","t1","id","Object","getKurals","kuralsMap","entries","k","v","value","setUser","updateUserFSAsync","updateUserPreference","applyPreference","pref","ANONYOMOUS_USER","favorites","secondary","fontSizeType","FontSizeType","MEDIUM","PreferenceReducer","settings","useNavigation","history","useHistory","route","push","useSubCategory","category","resultCategory","Error","isCategoryValidErr","React","useState","result","setResult","KURAL_INDEX","useSelector","st","kuralIndexMap","getLiteraturesBySection","useCallback","sectionId","LITERATURE_MAP","INDEX_MAP","fillRange","litIndex","map","getChaptersFromLiterature","litId","CHAPTER_MAP","litChapMap","c","useEffect","getKuralIdsOfChapter","kId","length","useBaseItem","items","itemNo","categoryId","getCategoryIds","getRoutes","categories","favourites","isFavourite","filter","it","includes","routes","ROUTE_CONSTANTS","LIST_CATEGORY","color","CATEGORY_COLORS","default","LIST","kural","useRoute","inputFilter","setInputFilter","useFirestore","useDispatch","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","findChapterNoFromKuralNo","options","keys","find","rootCategoryFinder","log","debug","sectionRoute","matchPath","path","exact","literatureRoute","chapterRoute","kuralRoute","Number","params","undefined","listen","getRouteValue","output","input","shouldAddToList","favIndex","findIndex","datetime","Date","splice","sortSearchResults","SortValueMap","sort","b","status","keyword","results","filters","userSelections","detail","useKuralSearch","KURALS","addResults","searchTypes","forEach","kuralNo","parseInt","isCategoryValid","item","chapterNo","literatureNo","sectionNo","setSearchKeyword","types","isInteger","searchNumber","e","findSuitableSearchTypes","setSearchStatus","useStyles","makeStyles","theme","icon","palette","main","transform","transition","AnimatedExpandedIcon","isExpanded","className","style","classes","ExpandMore","clsx","listItem","cursor","position","borderRadius","spacing","WebkitTapHighlightColor","border","paddingLeft","listIcon","display","justifyContent","alignItems","TreeListItem","level","hasNodes","isOpen","label","toggleNode","focused","onClick","active","ListItem","ev","ListItemText","treeMenuContainer","outlineStyle","list","padding","CategoryViewer","props","List","key","itemProps","CategoryViewerContainer","chapterQueryParam","URLSearchParams","search","get","routeKey","replace","RegExp","sections","getChaptersByLiterature","TREE_DATA","values","s","sIndex","toString","nodes","lit","ch","chIndex","initialActiveKey","initialFocusKey","initialOpenNodes","split","substring","indexOf","getInitialOpenNodes","onClickItem","newRoute","lastItemSeparator","lastIndexOf","currentRoute","data","hasSearch","flexDirection","userSelect","breakpoints","up","badgeContainer","background","height","fontSize","lineHeight","minWidth","kuralWrapper","width","KuralCard","root","component","componentType","showBadge","dangerouslySetInnerHTML","__html","transliteratorList","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","textAlign","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","PRIMARY_LANG","TRANSLITERATORS","setKural","kuralDetail","setKuralDetail","getUserTransliterators","userPreferedTranslits","getKuralDetail","useKuralDetail","transliterators","transliteratorId","name","Chip","size","routeContainer","flexWrap","chipRoot","margin","maxWidth","favoriteIcon","RouteChip","onLongPress","navigateTo","longPressEventHandlers","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","Favorite","backgroundColor","RouteViewer","toggleRouteFavourite","renderRight","SwiperCore","use","Virtual","Keyboard","KuralDetailViewer","useParams","activeKuralNo","setActiveKuralNo","slideKuralIds","Array","from","ITEMS_COUNT_MAP","i","findCategoryRouteMapString","Container","disableGutters","keyboard","grabCursor","initialSlide","spaceBetween","slidesPerView","allowSlideNext","virtual","onTransitionEnd","swiper","activeIndex","virtualIndex","renderSlide","kuralCard","ListKuralCard","openKuralDetail","ListKuralsOfChapter","TransliteratorSectionType","gridTemplateColumns","idWrap","opacity","left","labelWrap","ListView","divider","showDivider","onItemSelected","chapFavorites","paddingRight","ChapterFavList","getChapter","chapterIds","KuralFavList","chapterKuralMap","setchapterKuralMap","onKuralSelected","chapMap","kuralIds","chap","chapId","chapterInfo","disablePadding","ListSubheader","disableSticky","collapsableGroup","listItemTitle","marginLeft","favCount","FavoritesViewer","KURAL_IDS","CHAPTER_IDS","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","noRecordsFound","GroupTitleMaker","isVisible","title","collapseContent","selected","button","inset","Collapse","in","timeout","marginTop","favoriteCard","Home","Card","variant","CardHeader","CardContent","SEARCH_ROUTE","createStyles","borderColor","fade","grey","searchicon","clearIcon","flex","light","KuralSearch","inputRef","useRef","setSearchKey","debounced","useDebouncedCallback","setKeyword","isExact","isSearchRoute","focus","setFocus","current","querySelector","InputBase","ref","placeholder","inputProps","onChange","text","target","onFocus","onSearchTap","Fade","trim","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","toolbar","avatar","actionsGroup","searchbar","marginRight","flexGrow","iconButton","MyAppBar","AppBar","elevation","Toolbar","isHomeRoute","Avatar","Person","IconButton","goBack","KeyboardBackspace","actions","defalutTitle","appBar","bottom","top","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","setRoute","Main","renderRoutes","searchFilter","SearchChips","setFilters","hasStartsWith","f","startsWith","filterOptions","SearchCategoryLabelMap","all","isShow","Set","r","isSelected","selection","kuralSearchItem","searchItem","searchItemAvatar","SearchResultItem","innerContent","charAt","toUpperCase","Search","getOnClickRoute","isResultOfType","renderItem","StyledSlider","withStyles","thumb","track","rail","mark","right","content","markActive","Slider","DiscreteSlider","aria-labelledby","valueLabelDisplay","sliderWrapper","sliderRoot","FontSizePicker","FONT_SIZE_MAP","marks","aria-label","step","min","TINY","max","BIG","fontType","userPreference","languageItem","languageItemText","LanguagePicker","useFirestoreConnect","COLLECTION_NAME_MAP","LANGUAGE","languageMap","getOrderedLangIds","sortedIds","toLocaleLowerCase","orderedLangIds","setOrderdLangIds","onDragEnd","source","destination","reordered","droppableId","provided","snapshot","isDraggingOver","droppableProps","innerRef","langId","draggableId","isDragging","draggableProps","dragHandleProps","ListItemIcon","DragHandle","disableTypography","subList","subHeader","subListItem","subListItemText","TransliteratorLabel","inactive","toUserLikedTranslitsMap","RankTransliteratorSetting","userTransLits","setUserTransLits","updateState","reorderedTransliterors","JSON","parse","stringify","srcList","ACTIVE","INACTIVE","transilterators","t","subheader","tItem","DragIndicator","itemLabel","itemChild","listItemIcon","SettingItem","showExpandIcon","isItemExpanded","toggleItem","suffix","container","unmountOnExit","itemText","formControl","fontSizePicker","SettingsLabel","Settings","FormatSize","People","Language","ROOT","SEARCH","FAVOURITE","SETTINGS","SettingsViewer","activeChapterNo","setActiveChapterNo","slideChapterIds","chId","render","match","url","ROUTE_REGEX","test","to","App","rootReducers","combineReducers","concat","firebase","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","getLiteratureNoFromChapterNo","isItemInRange","getSectionNoByLiteratureNo","secId","firestoreGetCacheFirst","empty","collection","indexSnapshot","getDocData","docs","doc","getAllBaseItems","lang","collectionKey","sectionSnapshot","Math","ceil","resType","LARGE","SMALL","KURAL","kuralSnapshotRef","KURAL_DETAIL","startKuralNo","TRANSLITERATOR","transliteratorSnapRef","userId","USER","where","FieldPath","documentId","limit","userDocRef","set","range","out","findCategoryRouteMap","join","convertCategoryRouteMapToString","transliteratorsMap","tMap","userLangs","getUserPreferedLanguages","userTMap","some","userLikedTransliterators","allowedTransliteratorIds","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER"],"mappings":"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","file":"static/js/main.5f3b2eb3.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n  kurals: {},\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getKurals,\n  getUserPreferences,\n  Kural,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    const kuralsMap = Object.entries(\n      await getKurals(firestore, primary)\n    ).reduce(\n      (oldVal, [k, v]) => ({\n        ...oldVal,\n        [k]: ({ id: k, value: v } as unknown) as Kural,\n      }),\n      {}\n    ) as Record<number, Kural>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n        kurals: kuralsMap,\n      },\n    });\n  };\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  FontSizeType,\n  updateUserPreference,\n  User,\n  UserPreference,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const ANONYOMOUS_USER: User = {\n  id: 'anonymous',\n  favorites: [],\n  preference: {\n    language: {\n      primary: 'ta',\n      secondary: [],\n    },\n    fontSizeType: FontSizeType.MEDIUM,\n  },\n};\nexport const PreferenceReducer = (\n  settings = ANONYOMOUS_USER,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralIdsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category?: RootCategory,\n  id?: number,\n  resultCategory?: Category\n) => [BaseType[], (id: number) => BaseType[], (id: number) => BaseType[]];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (id && category && resultCategory) {\n    if (category === resultCategory) {\n      throw new Error('Bad input');\n    }\n    isCategoryValidErr(category, id);\n  }\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  const getLiteraturesBySection = React.useCallback(\n    (sectionId: number): BaseType[] => {\n      const { literature: LITERATURE_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('section', sectionId);\n      return fillRange(INDEX_MAP!!.section[sectionId].litIndex).map(\n        (k) => LITERATURE_MAP[k]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  const getChaptersFromLiterature = React.useCallback(\n    (litId: number): BaseType[] => {\n      const { chapter: CHAPTER_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('literature', litId);\n      return fillRange(INDEX_MAP!!.litChapMap[litId]).map(\n        (c) => CHAPTER_MAP[c]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  React.useEffect(() => {\n    if (id && category === 'chapter' && resultCategory === 'kural') {\n      setResult(getKuralIdsOfChapter(id).map((kId) => KURAL_INDEX.kurals[kId]));\n    }\n  }, [KURAL_INDEX.kurals, category, id, resultCategory]);\n\n  React.useEffect(() => {\n    if (!result.length && id && resultCategory !== 'kural') {\n      const { index: INDEX_MAP } = KURAL_INDEX;\n      if (INDEX_MAP) {\n        if (category === 'literature' && resultCategory === 'chapter') {\n          setResult(getChaptersFromLiterature(id));\n        } else if (category === 'section' && resultCategory === 'literature') {\n          setResult(getLiteraturesBySection(id));\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    id,\n    KURAL_INDEX,\n    getLiteraturesBySection,\n    getChaptersFromLiterature,\n  ]);\n\n  return [result, getLiteraturesBySection, getChaptersFromLiterature];\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  CATEGORY_COLORS,\n  UserFavourite,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: UserFavourite[]\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const isFavourite = (category: Category, id: number) => {\n    return favourites\n      .filter((it) => it.category === category)\n      .map((it) => it.id)\n      .includes(id);\n  };\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: ROUTE_CONSTANTS.LIST_CATEGORY,\n      color: CATEGORY_COLORS.default,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section.id}`,\n      color: CATEGORY_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section!!.id}/${\n        categories.literature.id\n      }`,\n      color: CATEGORY_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: isFavourite('chapter', categories.chapter.id),\n      type: 'chapter',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter.id}`,\n      color: CATEGORY_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: isFavourite('kural', categories.kural.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter!!.id}/${categories.kural.id}`,\n      color: CATEGORY_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.user);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section`,\n      exact: true,\n    });\n    const literatureRoute = matchPath<{ literature: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section/:literature`,\n      exact: true,\n    });\n    // TODO: category & list route for chapter\n    const chapterRoute = matchPath<{ chapter: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n      exact: true,\n    });\n    const kuralRoute = matchPath<{ kural: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n      exact: true,\n    });\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    // log.debug('route path values => ', JSON.stringify(newFilter));\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    // TODO: enable logs after debounceing\n    // log.debug('detect route => ', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites = user.favorites;\n      const favIndex = favorites.findIndex(\n        (it) => it.category === route.type && it.id === route.id\n      );\n      if (shouldAddToList && favIndex === -1) {\n        favorites = [\n          ...favorites,\n          { id: route.id, datetime: new Date(), category: route.type },\n        ];\n      } else {\n        favorites.splice(favIndex, 1);\n      }\n      dispatch(\n        updateUserFSAsync(firestore, {\n          ...user,\n          favorites,\n        })\n      );\n    }\n  };\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\nconst sortSearchResults = (items: SearchResult[]) => {\n  const SortValueMap: Record<Category, number> = {\n    kural: 1,\n    chapter: 2,\n    literature: 3,\n    section: 4,\n  };\n  return items.sort(\n    (a, b) => SortValueMap[a.category] - SortValueMap[b.category]\n  );\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults([...state.results, ...action.payload]),\n    };\n  } else if (action.type === 'SetSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults(action.payload as SearchResult[]),\n    };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { SearchResult, SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport {\n  appendSearchResults,\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const { literature, section, chapter } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword);\n  };\n\n  const addResults = (searchTypes: SearchTypes[], keyword: string): void => {\n    searchTypes.forEach(async (type) => {\n      const items: SearchResult[] = [];\n      switch (type) {\n        case 'ByKuralNo':\n          const kuralNo = parseInt(keyword);\n          if (isCategoryValid('kural', kuralNo)) {\n            items.push({\n              type,\n              keyword,\n              category: 'kural',\n              item: KURALS[kuralNo],\n            });\n          }\n          break;\n        case 'ByChapterNo':\n          const chapterNo = parseInt(keyword);\n          if (isCategoryValid('chapter', chapterNo)) {\n            items.push({\n              type,\n              keyword,\n              item: chapter[parseInt(keyword)],\n              category: 'chapter',\n            });\n          }\n          break;\n        case 'ByLiteratureNo':\n          const literatureNo = parseInt(keyword);\n          if (isCategoryValid('literature', literatureNo)) {\n            items.push({\n              type,\n              keyword,\n              item: literature[parseInt(keyword)],\n              category: 'literature',\n            });\n          }\n          break;\n        case 'BySectionNo':\n          const sectionNo = parseInt(keyword);\n          if (isCategoryValid('section', sectionNo)) {\n            items.push({\n              type,\n              keyword,\n              item: section[parseInt(keyword)],\n              category: 'section',\n            });\n          }\n          break;\n      }\n      if (items.length) {\n        dispatch(appendSearchResults(items));\n      }\n    });\n  };\n\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.primary.main,\n    transform: 'rotate(0deg)',\n    transition: 'all 0.2s ease',\n    '&.is-expanded': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype ExpandedIconProps = {\n  className?: string;\n  isExpanded?: boolean;\n  style?: React.CSSProperties;\n};\n\nexport const AnimatedExpandedIcon: React.FC<ExpandedIconProps> = ({\n  isExpanded,\n  className,\n  style,\n}: ExpandedIconProps) => {\n  const classes = useStyles();\n  return (\n    <ExpandMore\n      style={style}\n      className={clsx(classes.icon, isExpanded && 'is-expanded', className)}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { TreeMenuItem } from 'react-simple-tree-menu';\n\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport const TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n  onClick,\n  active,\n  ...props\n}: TreeMenuItem) => {\n  const classes = useStyles();\n\n  const toggleCategory = (ev: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    hasNodes && toggleNode && toggleNode();\n    onClick(ev);\n  };\n  return (\n    <ListItem\n      onClick={toggleCategory}\n      className={`${classes.listItem} level-${level} ${focused && 'on-focus'} ${\n        active && 'is-active'\n      }`}>\n      <ListItemText primary={label}></ListItemText>\n      {hasNodes && (\n        <div className={classes.listIcon}>\n          <AnimatedExpandedIcon isExpanded={isOpen} />\n        </div>\n      )}\n    </ListItem>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport TreeMenu, { TreeMenuProps } from 'react-simple-tree-menu';\n\nimport { TreeListItem } from './category-list-item';\n\nconst useStyles = makeStyles((theme) => ({\n  treeMenuContainer: {\n    '&>div': {\n      outlineStyle: 'none',\n    },\n  },\n  list: {\n    padding: `0px ${theme.spacing(1)}px`,\n  },\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transition: 'all 0.2s ease',\n    transform: 'rotate(0deg)',\n    '&.is-open': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n} & TreeMenuProps;\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = ({\n  className,\n  ...props\n}: CategoryViewerProps) => {\n  const classes = useStyles();\n  debug('CategoryViewer renders');\n  return (\n    <div className={classes.treeMenuContainer}>\n      <TreeMenu {...props}>\n        {({ items }) => (\n          <List className={classes.list}>\n            {items.map(({ key, ...itemProps }) => (\n              <TreeListItem key={key} {...itemProps} />\n            ))}\n          </List>\n        )}\n      </TreeMenu>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TreeNodeInArray, Item } from 'react-simple-tree-menu';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport { CategoryViewer } from './category-viewer';\n\ntype CategoryViewerContainerProps = {\n  className?: string;\n};\n\nexport const CategoryViewerContainer: React.FC<CategoryViewerContainerProps> = (\n  props: CategoryViewerContainerProps\n) => {\n  const history = useHistory();\n  const queryParams = new URLSearchParams(history.location.search);\n  const chapterQueryParam = queryParams.get('chapter');\n  const routeKey = history.location.pathname.replace(\n    // eslint-disable-next-line no-useless-escape\n    new RegExp(`${ROUTE_CONSTANTS.LIST_CATEGORY}(\\/)?`),\n    ''\n  );\n  const getInitialOpenNodes = () => {\n    const nodes = routeKey\n      .split('/')\n      .map((it) => routeKey.substring(0, routeKey.indexOf(it) + it.length));\n    if (nodes.length === 2 && nodes[0] === nodes[1]) {\n      nodes[1] = `${nodes[0]}/${nodes[1]}`;\n    }\n    return nodes;\n  };\n\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n  const TREE_DATA: TreeNodeInArray[] = Object.values(sections).map(\n    (s, sIndex) => ({\n      key: s.id.toString(),\n      label: s.value,\n      index: sIndex,\n      nodes: getLiteraturesBySection(s.id).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        nodes: getChaptersByLiterature(lit.id).map((ch, chIndex) => ({\n          key: ch.id.toString(),\n          label: ch.value,\n          index: chIndex,\n        })),\n      })),\n    })\n  );\n  const onItemClick = (item: Item) => {\n    const newRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${item.key}`;\n    if (!item.hasNodes) {\n      const lastItemSeparator = item.key.lastIndexOf('/');\n      const chapter = item.key.substring(lastItemSeparator + 1);\n      const literatureRoute = item.key.substring(0, lastItemSeparator);\n      const currentRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${literatureRoute}?chapter=${chapter}`;\n      history.replace(currentRoute);\n      history.push(newRoute);\n    } else {\n      history.replace(newRoute);\n    }\n  };\n  return (\n    <CategoryViewer\n      initialActiveKey={routeKey}\n      initialFocusKey={\n        chapterQueryParam ? `${routeKey}/${chapterQueryParam}` : routeKey\n      }\n      initialOpenNodes={getInitialOpenNodes()}\n      onClickItem={onItemClick}\n      data={TREE_DATA}\n      hasSearch={false}\n    />\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n\n  if (!props.kural || !props.kural.value) {\n    return null;\n  }\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    userSelect: 'none',\n    padding: theme.spacing(1),\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { getUserTransliterators, isCategoryValidErr, Kural } from '../api';\nimport { getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  const { primary: PRIMARY_LANG } = user.preference.language;\n  const TRANSLITERATORS = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  const [userPreferedTranslits] = getUserTransliterators(user, TRANSLITERATORS);\n\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      if (typeof kuralInput === 'number') {\n        isCategoryValidErr('kural', kuralInput);\n        setKural(KURALS[kuralInput]);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, PRIMARY_LANG, KURALS]);\n  return [kural, kuralDetail, userPreferedTranslits];\n};\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n  favoriteIcon: {\n    width: '1rem',\n    height: '1rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  findCategoryRouteMapString,\n  isCategoryValid,\n  ITEMS_COUNT_MAP,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport KuralDetail from './KuralDetail';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const params = useParams<{ kural: string }>();\n  const KURAL_NO = parseInt(params.kural);\n  const [activeKuralNo, setActiveKuralNo] = React.useState(KURAL_NO);\n  const slideKuralIds = Array.from(Array(ITEMS_COUNT_MAP.kural).keys()).map(\n    (i) => i + 1\n  );\n  const renderSlide = (kId: number, index: number) => (\n    <SwiperSlide key={kId} virtualIndex={index}>\n      <KuralDetail kural={kId} />\n    </SwiperSlide>\n  );\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { kural: activeKuralNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeKuralNo, history]);\n\n  if (!isCategoryValid('kural', KURAL_NO)) {\n    return null;\n  }\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={KURAL_NO - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideKuralIds[slideKuralIds.length - 1] !== activeKuralNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveKuralNo(swiper.activeIndex + 1);\n        }}>\n        {slideKuralIds.map((kId, index) => renderSlide(kId, index))}\n      </Swiper>\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { useSelector } from 'react-redux';\nimport { findCategoryRouteMapString, Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(\n      `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP!!, {\n        kural: kural.id,\n      })}`\n    )();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={i}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const [kurals] = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { findCategoryRouteMapString, ITEMS_COUNT_MAP } from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport 'swiper/swiper.scss';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const history = useHistory();\n  const { chapter } = useParams<{ chapter: string }>();\n  const CHAPTER_NO = parseInt(chapter);\n  const [activeChapterNo, setActiveChapterNo] = React.useState(CHAPTER_NO);\n  const slideChapterIds = Array.from(Array(ITEMS_COUNT_MAP.chapter).keys()).map(\n    (i) => i + 1\n  );\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { chapter: activeChapterNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeChapterNo, history]);\n  const renderSlide = (chId: number, index: number) => (\n    <SwiperSlide key={chId} virtualIndex={index}>\n      <ListKuralsOfChapter chapterNo={chId} />\n    </SwiperSlide>\n  );\n  return (\n    <div className={props.className}>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={CHAPTER_NO!! - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideChapterIds[slideChapterIds.length - 1] !== activeChapterNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveChapterNo(swiper.activeIndex + 1);\n        }}>\n        {slideChapterIds.map((chId, index) => renderSlide(chId, index))}\n      </Swiper>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n} from '@material-ui/core';\nimport { DragIndicator } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  getUserTransliterators,\n  Transliterator,\n  User,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { applyPreference } from 'src/state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  subList: {\n    '&.dragging-over': {\n      backgroundColor: 'lightblue',\n    },\n  },\n  subHeader: {\n    textAlign: 'left',\n    lineHeight: '1.5em',\n  },\n  subListItem: {\n    '&.is-dragging': {\n      backgroundColor: 'red',\n    },\n  },\n  subListItemText: {\n    fontSize: '0.8em',\n  },\n}));\n\ntype RankTransliteratorSettingProps = {\n  user: User;\n  className?: string;\n};\n\nenum TransliteratorSectionType {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n}\ntype TransliteratorSectionMapType = Record<\n  TransliteratorSectionType,\n  Transliterator[]\n>;\n\nconst TransliteratorLabel: Record<TransliteratorSectionType, string> = {\n  active: 'Active',\n  inactive: 'InActive',\n};\n\nconst toUserLikedTranslitsMap = (\n  user: User,\n  transliterators: Record<number, Transliterator>\n): TransliteratorSectionMapType => {\n  const [activeList, inActiveList] = getUserTransliterators(\n    user,\n    transliterators\n  );\n  return { active: activeList, inactive: inActiveList };\n};\n\nexport const RankTransliteratorSetting: React.FC<RankTransliteratorSettingProps> = (\n  props: RankTransliteratorSettingProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const transliterators = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const [userTransLits, setUserTransLits] = React.useState(\n    toUserLikedTranslitsMap(props.user, transliterators)\n  );\n  React.useEffect(() => {\n    setUserTransLits(toUserLikedTranslitsMap(props.user, transliterators));\n  }, [props.user, transliterators]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    if (!destination) {\n      return;\n    }\n    let updateState = false;\n    const reorderedTransliterors = JSON.parse(\n      JSON.stringify(userTransLits)\n    ) as TransliteratorSectionMapType;\n    const srcList =\n      reorderedTransliterors[source.droppableId as TransliteratorSectionType];\n    if (\n      srcList.length <= 1 &&\n      source.droppableId === TransliteratorSectionType.ACTIVE &&\n      destination.droppableId === TransliteratorSectionType.INACTIVE\n    ) {\n      // Note: Don't allow active transliterators to go empty.\n      return;\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n      const destList =\n        reorderedTransliterors[\n          destination.droppableId as TransliteratorSectionType\n        ];\n      destList.splice(destination.index, 0, srcList[source.index]);\n      srcList.splice(source.index, 1);\n      updateState = true;\n    } else if (source.index !== destination.index) {\n      srcList.splice(destination.index, 0, ...srcList.splice(source.index, 1));\n      updateState = true;\n    }\n    if (updateState) {\n      const userPreference = {\n        ...props.user.preference,\n        transilterators: reorderedTransliterors.active.map((t) => t.id),\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {Object.entries(userTransLits).map(([key, list]) => (\n        <Droppable droppableId={key} key={key}>\n          {(provided, snapshot) => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={clsx(\n                classes.subList,\n                snapshot.isDraggingOver && 'dragging-over'\n              )}\n              subheader={\n                <ListSubheader component='div' className={classes.subHeader}>\n                  {TransliteratorLabel[key as TransliteratorSectionType]}\n                </ListSubheader>\n              }>\n              {list.map((tItem, index) => (\n                <Draggable\n                  key={tItem.id}\n                  draggableId={tItem.id.toString()}\n                  index={index}>\n                  {(provided, snapshot) => (\n                    <ListItem\n                      className={clsx(\n                        classes.subListItem,\n                        snapshot.isDragging && 'is-dragging'\n                      )}\n                      style={provided.draggableProps.style}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}>\n                      <ListItemIcon>\n                        <DragIndicator />\n                      </ListItemIcon>\n                      <ListItemText\n                        disableTypography\n                        primary={tItem.name}\n                        className={classes.subListItemText}\n                      />\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      ))}\n    </DragDropContext>\n  );\n};\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  showDivider?: boolean;\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={props.showDivider}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { BaseType, findCategoryRouteMapString } from '../../../lib/api';\nimport { useBaseItem, useNavigation } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport ListView from '../common/ListView';\n\nconst useStyles = makeStyles((theme) => ({\n  chapFavorites: {\n    padding: 0,\n    '& li': {\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport interface ChapterFavListProps {\n  chapterIds: number[];\n}\n\nexport const ChapterFavList: React.FC<ChapterFavListProps> = (\n  props: ChapterFavListProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [getChapter] = useBaseItem('chapter');\n  const [navigateTo] = useNavigation();\n\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n\n  return (\n    <>\n      {props.chapterIds.length && (\n        <ListView\n          className={classes.chapFavorites}\n          items={\n            props.chapterIds\n              .sort()\n              .map((ch) => getChapter(ch))\n              .filter((ch) => ch !== null) as BaseType[]\n          }\n          onItemSelected={onChapterSelected}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { List, ListSubheader, makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport {\n  BaseType,\n  findCategoryRouteMapString,\n  findChapterNoFromKuralNo,\n} from '../../../lib/api';\nimport { useBaseItem, useNavigation } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport KuralCard from './../kural/KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  kural: {\n    padding: `0 0 0 ${theme.spacing(1)}px`,\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport interface KuralFavListProps {\n  kuralIds: number[];\n}\n\nexport const KuralFavList: React.FC<KuralFavListProps> = (\n  props: KuralFavListProps\n) => {\n  const classes = useStyles();\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [getChapter] = useBaseItem('chapter');\n  const [navigateTo] = useNavigation();\n  const [chapterKuralMap, setchapterKuralMap] = React.useState<\n    Record<number, BaseType[]>\n  >({});\n\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n\n  const onKuralSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          kural: item.id,\n        })}`\n      )();\n    }\n  };\n\n  React.useEffect(() => {\n    const chapMap = props.kuralIds.reduce((chapMap, kId) => {\n      const chap = findChapterNoFromKuralNo(kId);\n      if (KURALS[kId] !== undefined) {\n        return {\n          ...chapMap,\n          [chap]: [...(chapMap[chap] || []), KURALS[kId]],\n        };\n      }\n      return chapMap;\n    }, {} as Record<number, BaseType[]>);\n    setchapterKuralMap(chapMap);\n  }, [props.kuralIds, KURALS]);\n\n  return (\n    <>\n      {Object.keys(chapterKuralMap).map((chapId) => {\n        const chapterInfo = getChapter(parseInt(chapId));\n        return (\n          <List\n            component='div'\n            className='sub-list'\n            key={chapId}\n            disablePadding>\n            {chapterInfo && (\n              <ListSubheader\n                className='sub-header'\n                disableSticky\n                onClick={(): void => onChapterSelected(chapterInfo)}>\n                {chapterInfo.value}\n              </ListSubheader>\n            )}\n\n            {chapterKuralMap[parseInt(chapId)].map((item: BaseType) => (\n              <KuralCard\n                className={classes.kural}\n                key={item.id}\n                kural={item}\n                onClick={onKuralSelected}\n              />\n            ))}\n          </List>\n        );\n      })}\n    </>\n  );\n};\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../../state';\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\nimport { ChapterFavList } from './chapter-fav-list';\nimport { KuralFavList } from './kural-fav-list';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  collapsableGroup: {},\n  list: {\n    '& .sub-header': {\n      textAlign: 'left',\n      color: 'brown',\n      lineHeight: '2rem',\n      padding: `0px 0 0 ${theme.spacing(0.5)}px`,\n    },\n  },\n  listItemTitle: {\n    '& .toggle-icon-container': {\n      marginLeft: theme.spacing(1.5),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n  favCount: {\n    fontSize: '0.8rem',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nexport const FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const classes = useStyles();\n  const favorites = useSelector((st: AppState) => st.user.favorites);\n  const KURAL_IDS = (favorites || [])\n    .filter((it) => it.category === 'kural')\n    .map((it) => it.id);\n  const CHAPTER_IDS = (favorites || [])\n    .filter((it) => it.category === 'chapter')\n    .map((it) => it.id);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n\n  const noRecordsFound = <h1>None Found</h1>;\n\n  const GroupTitleMaker = (\n    isVisible: boolean,\n    onClick: () => void,\n    title: React.ReactNode,\n    favCount: React.ReactNode,\n    collapseContent?: React.ReactNode\n  ) => (\n    <>\n      <ListItem\n        selected={isVisible}\n        className={classes.listItemTitle}\n        button\n        onClick={onClick}>\n        <ListItemText inset={true} primary={title} />\n        {!isVisible && <span className={classes.favCount}>{favCount}</span>}\n        <div className={`toggle-icon-container`}>\n          <AnimatedExpandedIcon isExpanded={isVisible} />\n        </div>\n      </ListItem>\n      <Collapse\n        in={isVisible}\n        style={{ paddingBottom: isVisible ? 8 : 0 }}\n        className={classes.collapsableGroup}\n        timeout='auto'>\n        {collapseContent || noRecordsFound}\n      </Collapse>\n    </>\n  );\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        {GroupTitleMaker(\n          isKuralVisible,\n          () => {\n            setKuralVisible(!isKuralVisible);\n          },\n          'Kurals',\n          KURAL_IDS.length ? KURAL_IDS.length : null,\n          KURAL_IDS.length && <KuralFavList kuralIds={KURAL_IDS} />\n        )}\n        {GroupTitleMaker(\n          isChapterVisible,\n          () => {\n            setChapterVisible(!isChapterVisible);\n          },\n          'Chapters',\n          CHAPTER_IDS.length ? CHAPTER_IDS.length : null,\n          CHAPTER_IDS.length && <ChapterFavList chapterIds={CHAPTER_IDS} />\n        )}\n      </List>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport { FavoritesViewer } from '../../components/favourite-viewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(0.5),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; */\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n      {/* <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype ListWithRouteViewerProps = RouteConfigComponentProps;\n\nexport const ListCategoryViewer: React.FC<ListWithRouteViewerProps> = ({\n  route,\n}: ListWithRouteViewerProps) => {\n  const classes = useStyles();\n  return <div className={classes.root}>{renderRoutes(route?.routes)}</div>;\n};\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n      cursor: 'pointer',\n    },\n    clearIcon: {\n      cursor: 'pointer',\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\n// TODO: AppBar & kuralSearch rerenders often e.g) even if there any changes in settigns page.\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const history = useHistory();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const isSearchRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: SEARCH_ROUTE })?.isExact ||\n    false;\n  const [focus, setFocus] = React.useState(isSearchRoute());\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  history.listen(({ pathname }) => {\n    if (pathname !== SEARCH_ROUTE) {\n      setKeyword('');\n      setFocus(false);\n    } else {\n      setFocus(true);\n    }\n  });\n  const onSearchBarFocus = (): void => {\n    if (history.location.pathname !== SEARCH_ROUTE) {\n      debug('route -> search');\n      history.push(SEARCH_ROUTE);\n    }\n  };\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon\n        onClick={() => {\n          inputRef.current?.querySelector('input')?.focus();\n        }}\n        className={clsx(classes.searchicon, 'search-icon')}\n      />\n      <InputBase\n        ref={inputRef}\n        className={`searchbar ${classes.input}`}\n        placeholder='Search 43, agara'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          onSearchBarFocus();\n          props.onSearchTap && props.onSearchTap();\n        }}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          className={classes.clearIcon}\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardBackspace, Person, Settings } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\n\nimport KuralSearch from '../kural/KuralSearch';\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'space-around',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  const history = useHistory();\n  const isHomeRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: '/' })?.isExact || false;\n  const renderLeftIcon = (): React.ReactElement => {\n    return !isHomeRoute() ? (\n      <IconButton className={classes.iconButton} onClick={history.goBack}>\n        <KeyboardBackspace color='primary' />\n      </IconButton>\n    ) : (\n      <Avatar className={classes.avatar}>\n        <Person />\n      </Avatar>\n    );\n  };\n\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {renderLeftIcon()}\n            <KuralSearch className={classes.searchbar} />\n            <div className={classes.actionsGroup}>\n              {props.actions}\n              <IconButton\n                className={classes.iconButton}\n                onClick={(): void => history.push('/settings')}>\n                <Settings color='primary' />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\nexport default MyAppBar;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  // {\n  //   icon: <SettingsIcon />,\n  //   route: '/settings',\n  //   label: 'Settings',\n  // },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      <MyAppBar />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setAllUserSelections, setUserSelection } from '../../../state/search';\nimport {\n  CATEGORY_COLORS,\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n} from './../../../lib/api';\nimport { AppState } from './../../../state';\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n}));\n\nexport const SearchChips: React.FC<SearchChipsProps> = (\n  props: SearchChipsProps\n) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            style={{\n              backgroundColor:\n                CATEGORY_COLORS[\n                  f.type === 'all' || f.type === 'detail' ? 'default' : f.type\n                ],\n            }}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport {\n  isResultOfType,\n  SearchResult,\n  CATEGORY_COLORS,\n  Category,\n  findCategoryRouteMapString,\n} from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state/reducers';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport { SearchChips } from './SearchChips';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n  searchItem: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    cursor: 'pointer',\n  },\n  searchItemAvatar: {\n    width: '2rem',\n    height: '2rem',\n    textAlign: 'center',\n    fontSize: '1rem',\n    marginRight: '0.5rem',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchResultItemProps = {\n  component?: React.ReactNode;\n  result: SearchResult;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  result,\n  label,\n  onClick,\n  component,\n}: SearchResultItemProps) => {\n  const classes = useStyles();\n  const innerContent = component ? component : <div>{result.item.value}</div>;\n  return (\n    <ListItem\n      key={`${label}${result.item.id}`}\n      onClick={onClick}\n      className={classes.searchItem}>\n      <Avatar\n        className={classes.searchItemAvatar}\n        style={{ backgroundColor: CATEGORY_COLORS[result.category] }}>\n        {label.charAt(0).toUpperCase()}\n      </Avatar>\n      {innerContent}\n    </ListItem>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const getOnClickRoute = React.useCallback(\n    (category: Category, id: number) => {\n      let route = ROUTE_CONSTANTS.LIST_CATEGORY;\n      if (INDEX_MAP) {\n        route += `/${findCategoryRouteMapString(INDEX_MAP, {\n          [category]: id,\n        })}`;\n      }\n      return route;\n    },\n    [INDEX_MAP]\n  );\n  const [navigateTo] = useNavigation();\n  const renderItem = (\n    item: SearchResult,\n    index: number\n  ): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <SearchResultItem\n          key={index}\n          result={item}\n          label='k'\n          onClick={navigateTo(getOnClickRoute('kural', item.item.id))}\n          component={\n            <KuralCard\n              componentType='span'\n              key={item.item.id}\n              kural={item.item}\n              className={classes.kuralSearchItem}\n            />\n          }\n        />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='ch'\n          onClick={navigateTo(getOnClickRoute('chapter', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='lit'\n          onClick={navigateTo(getOnClickRoute('literature', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='sec'\n          onClick={navigateTo(getOnClickRoute('section', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <SearchChips />\n      <List>{search.results.map((item, i) => renderItem(item, i))}</List>\n    </div>\n  );\n};\n\nexport default Search;\n","import * as React from 'react';\n\nimport { Slider, SliderTypeMap, withStyles } from '@material-ui/core';\nimport { DefaultComponentProps } from '@material-ui/core/OverridableComponent';\n\nexport type DiscreteSliderProps = Partial<DefaultComponentProps<SliderTypeMap>>;\n\nconst StyledSlider = withStyles({\n  root: {\n    height: 8,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    marginTop: '-7px',\n    backgroundColor: 'currentColor',\n    '&:focus, &:hover, &$active': {\n      boxShadow:\n        'rgba(136, 153, 166, 0.2) 0px 0px 7px, rgba(136, 153, 166, 0.15) 0px 1px 3px 1px',\n    },\n  },\n  active: {},\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n  mark: {\n    width: 16,\n    height: 16,\n    borderRadius: '50%',\n    marginLeft: '-6px',\n    opacity: 0.8,\n    marginTop: '-5px',\n    '& ::after': {\n      top: '-15px',\n      left: '-15px',\n      right: '-15px',\n      bottom: '-15px',\n      content: '\"',\n      position: 'absolute',\n      borderRadius: '50%',\n      border: '1px solid',\n    },\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\nexport const DiscreteSlider: React.FC<DiscreteSliderProps> = (props) => {\n  return (\n    <StyledSlider\n      aria-labelledby='discrete-slider'\n      valueLabelDisplay='auto'\n      {...props}\n    />\n  );\n};\n\nexport default DiscreteSlider;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  FONT_SIZE_MAP,\n  User,\n  FontSizeType,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { applyPreference, ANONYOMOUS_USER } from 'src/state/settings';\n\nimport { CommonComponentProps } from '../../components';\nimport { DiscreteSlider } from './../../components/common/DiscreteSlider';\n\nconst useStyles = makeStyles((theme) => ({\n  sliderWrapper: {\n    display: 'flex',\n    marginLeft: theme.spacing(3),\n    alignItems: 'center',\n  },\n  sliderRoot: {\n    width: '80%',\n  },\n}));\n\nexport interface FontSizePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const FontSizePicker: React.FC<FontSizePickerProps> = (\n  props: FontSizePickerProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const fontSize =\n    FONT_SIZE_MAP[\n      props.user.preference.fontSizeType ||\n        ANONYOMOUS_USER.preference.fontSizeType\n    ];\n  const marks = Object.entries(FONT_SIZE_MAP).map(([, v]) => ({\n    value: v,\n  }));\n  const onFontChange = (\n    _: React.ChangeEvent<unknown>,\n    value: number | number[]\n  ) => {\n    if (typeof value === 'number') {\n      const fontType = Object.keys(FONT_SIZE_MAP).find(\n        (type) => FONT_SIZE_MAP[type as FontSizeType] === value\n      );\n      const userPreference = {\n        ...props.user.preference,\n        fontSizeType: fontType!! as FontSizeType,\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <div\n      className={clsx(\n        props.className && props.className + '-wrapper',\n        classes.sliderWrapper\n      )}>\n      <DiscreteSlider\n        classes={{ root: classes.sliderRoot }}\n        {...props}\n        aria-label='font-size-picker'\n        value={fontSize}\n        valueLabelDisplay={'off'}\n        step={null}\n        marks={marks}\n        min={FONT_SIZE_MAP.TINY}\n        max={FONT_SIZE_MAP.BIG}\n        onChange={onFontChange}\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport { DragHandle } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport { COLLECTION_NAME_MAP, User } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { applyPreference } from 'src/state/settings';\n\nimport { CommonComponentProps } from '../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  languageItem: {},\n  languageItemText: {},\n}));\n\nexport interface LanguagePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const LanguagePicker: React.FC<LanguagePickerProps> = (\n  props: LanguagePickerProps\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useFirestoreConnect([COLLECTION_NAME_MAP.LANGUAGE]);\n  const { primary: PRIMARY_LANG } = props.user.preference.language;\n  const languageMap = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.LANGUAGE]\n  );\n  const getOrderedLangIds = React.useCallback(\n    () => (): Array<string> => {\n      if (!languageMap) {\n        return [];\n      }\n      const sortedIds = Object.keys(languageMap).sort();\n      sortedIds.splice(sortedIds.indexOf(PRIMARY_LANG.toLocaleLowerCase()), 1);\n      sortedIds.splice(0, 0, PRIMARY_LANG.toLocaleLowerCase());\n      return sortedIds;\n    },\n    [PRIMARY_LANG, languageMap]\n  );\n  const [orderedLangIds, setOrderdLangIds] = React.useState<Array<string>>([]);\n\n  React.useEffect(() => {\n    setOrderdLangIds(getOrderedLangIds());\n  }, [getOrderedLangIds, languageMap]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    if (!destination) {\n      return;\n    }\n    if (source.index !== destination.index) {\n      const reordered = [...orderedLangIds];\n      reordered.splice(\n        destination.index,\n        0,\n        ...reordered.splice(source.index, 1)\n      );\n      setOrderdLangIds(reordered);\n      if (PRIMARY_LANG !== reordered[0]) {\n        const userPreference = {\n          ...props.user.preference,\n          language: {\n            ...props.user.preference.language,\n            primary: reordered[0],\n          },\n        };\n        dispatch(applyPreference(userPreference));\n        // TODO: IGNORE FS update until i18n support\n        /* updateUserPreference(firestore, {\n          ...props.user,\n          preference: userPreference,\n        }); */\n      }\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId={'language'} key={'language'}>\n        {(provided, snapshot) => (\n          <List\n            className={clsx(\n              props.className && props.className + '-wrapper',\n              classes.root,\n              snapshot.isDraggingOver && 'dragging-over'\n            )}\n            {...provided.droppableProps}\n            ref={provided.innerRef}>\n            {orderedLangIds.map((langId, index) => (\n              <Draggable key={langId} draggableId={langId} index={index}>\n                {(provided, snapshot) => (\n                  <ListItem\n                    className={clsx(\n                      classes.languageItem,\n                      snapshot.isDragging && 'is-dragging'\n                    )}\n                    style={provided.draggableProps.style}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}>\n                    <ListItemIcon>\n                      <DragHandle />\n                    </ListItemIcon>\n                    <ListItemText\n                      disableTypography\n                      primary={languageMap[langId].value}\n                      className={classes.languageItemText}\n                    />\n                  </ListItem>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </List>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import React, { FC, PropsWithChildren } from 'react';\n\nimport {\n  Collapse,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { AnimatedExpandedIcon } from './../../components/common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  itemLabel: {\n    fontSize: '1em',\n  },\n  itemChild: {\n    padding: theme.spacing(1),\n  },\n  listItemIcon: {},\n}));\n\ntype SettingItemProps = PropsWithChildren<{\n  label: string;\n  className?: string;\n  isOpen?: boolean;\n  showExpandIcon?: boolean;\n  icon?: React.ReactNode;\n  suffix?: React.ReactNode;\n}>;\n\nexport const SettingItem: FC<SettingItemProps> = ({\n  label,\n  className,\n  isOpen = false,\n  showExpandIcon = true,\n  children,\n  ...props\n}: SettingItemProps) => {\n  const classes = useStyles();\n  const [isItemExpanded, toggleItem] = React.useState(isOpen);\n  return (\n    <>\n      <ListItem\n        button\n        className={clsx(className, classes.root)}\n        onClick={(): void => toggleItem(!isItemExpanded)}>\n        {props.icon}\n        <ListItemText\n          classes={{ primary: classes.itemLabel }}\n          primary={label}\n        />\n        {props.suffix}\n        {showExpandIcon && (\n          <ListItemIcon className={classes.listItemIcon}>\n            <AnimatedExpandedIcon isExpanded={isItemExpanded} />\n          </ListItemIcon>\n        )}\n      </ListItem>\n      <Collapse\n        classes={{ container: classes.itemChild }}\n        in={isItemExpanded}\n        timeout='auto'\n        unmountOnExit>\n        {children}\n      </Collapse>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, List, ListItemIcon } from '@material-ui/core';\nimport { FormatSize, Language, People } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport { FontSizePicker } from './FontSizePicker';\nimport { LanguagePicker } from './LanguagePicker';\nimport { RankTransliteratorSetting } from './RankTransliteratorSetting';\nimport { SettingItem } from './SettingItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  fontSizePicker: {\n    // padding: theme.spacing(1),\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n  TRANSLITERATOR_PICK: 'Order Transliterator',\n  LANGUAGE_PICK: 'Language',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const user = useSelector((st: AppState) => st.user);\n  debug('renders Settings');\n  return (\n    <div className={props.className}>\n      <List>\n        <SettingItem\n          label={SettingsLabel.FONT_SIZE}\n          icon={\n            <ListItemIcon>\n              <FormatSize />\n            </ListItemIcon>\n          }>\n          <FontSizePicker user={user} className={classes.fontSizePicker} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.TRANSLITERATOR_PICK}\n          icon={\n            <ListItemIcon>\n              <People />\n            </ListItemIcon>\n          }>\n          <RankTransliteratorSetting user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.LANGUAGE_PICK}\n          icon={\n            <ListItemIcon>\n              <Language />\n            </ListItemIcon>\n          }>\n          <LanguagePicker user={user} />\n        </SettingItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig, RouteConfigComponentProps } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport { isCategoryValid } from './lib/api';\nimport { CategoryViewerContainer } from './views/components/category-viewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport Home from './views/pages/home';\nimport { ListCategoryViewer } from './views/pages/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  LIST_CATEGORY: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListCategoryViewer,\n        routes: [\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST_CATEGORY}*`,\n            // eslint-disable-next-line react/display-name\n            render: ({ match }: RouteConfigComponentProps): React.ReactNode => {\n              const route = match.url.replace(ROUTE_CONSTANTS.LIST, '');\n              const ROUTE_REGEX = /^(\\/\\d+)?(\\/\\d+)?$/;\n              if (ROUTE_REGEX.test(route)) {\n                const [section, literature] = [\n                  route.replace(ROUTE_REGEX, '$1').replace('/', ''),\n                  route.replace(ROUTE_REGEX, '$2').replace('/', ''),\n                ];\n                if (\n                  (section === '' && literature === '') ||\n                  (section.length > 0 &&\n                    isCategoryValid('section', parseInt(section))) ||\n                  (literature.length > 0 &&\n                    isCategoryValid('literature', parseInt(literature)))\n                ) {\n                  return <CategoryViewerContainer />;\n                }\n              }\n              return <Redirect to={`${ROUTE_CONSTANTS.LIST}/1/1/1`} />;\n            },\n          },\n        ],\n      },\n\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => (\n          <Redirect to={ROUTE_CONSTANTS.ROOT} />\n        ),\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { FONT_SIZE_MAP } from './lib/api';\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div\n      className={classes.root}\n      style={{\n        fontSize: FONT_SIZE_MAP[user.preference.fontSizeType],\n      }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  user: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","export type IndexMapType = {\n  section: {\n    [key: number]: {\n      litIndex: [number, number];\n      chapIndex: [number, number];\n    };\n  };\n  litChapMap: { [key: number]: [number, number] };\n};\n\nexport type Transliterator = {\n  id: number;\n  name: string;\n  lang: string;\n  rank?: number;\n};\n\ntype BaseType = {\n  value: string;\n  id: number;\n};\n\ntype Kural = BaseType;\ntype Section = BaseType;\ntype Literature = BaseType;\ntype Chapter = BaseType;\n\ntype Category = 'section' | 'chapter' | 'literature' | 'kural';\ntype RootCategory = Exclude<Category, 'kural'>;\ntype CategoryBaseTypeMap = Record<Category, BaseType>;\n\ntype KuralMixin = {\n  kural: Kural;\n  section: Section;\n  literature: Literature;\n  chapter: Chapter;\n};\n\ntype SearchResult = {\n  type: SearchTypes;\n  item: BaseType;\n  category: Category;\n  keyword: string;\n};\n\ntype SectionSearchType = 'BySectionNo' | 'BySectionContains';\ntype LiteratureSearchType = 'ByLiteratureNo' | 'ByLiteratureContains';\ntype ChapterSearchType = 'ByChapterNo' | 'ByChapterContains';\ntype KuralSearchType =\n  | 'ByKuralNo'\n  | 'ByKuralContains'\n  | 'ByKuralStartsWith'\n  | 'ByKuralEndsWith';\ntype KuralDetailSearchType = 'ByKuralDetailContains';\ntype SearchTypes =\n  | KuralSearchType\n  | SectionSearchType\n  | LiteratureSearchType\n  | ChapterSearchType\n  | KuralDetailSearchType;\n\nexport type KuralDetail = Record<string, string>;\nexport type {\n  BaseType,\n  Kural,\n  Section,\n  Literature,\n  Chapter,\n  KuralMixin,\n  Category,\n  RootCategory,\n  CategoryBaseTypeMap,\n  SearchResult,\n  SearchTypes,\n};\n\nexport type SearchCategoryTypes = Category | 'detail' | 'all';\n\nexport enum FontSizeType {\n  TINY = 'TINY',\n  SMALL = 'SMALL',\n  MEDIUM = 'MEDIUM',\n  LARGE = 'LARGE',\n  BIG = 'BIG',\n}\n\nexport type UserPreference = {\n  language: {\n    primary: string;\n    secondary: string[];\n  };\n  fontSizeType: FontSizeType;\n  transilterators?: number[];\n};\n\nexport type UserFavourite = {\n  category: Exclude<Category, 'section' | 'literature'>;\n  datetime: Date;\n  id: number;\n};\n\nexport type User = {\n  id: string;\n  favorites: UserFavourite[];\n  preference: UserPreference;\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\nimport { Category } from './types';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n\nexport const CATEGORY_COLORS: Record<Category | 'default', string> = {\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n  default: 'blueviolet',\n};\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  FontSizeType,\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n\nexport const FONT_SIZE_MAP: Record<FontSizeType, number> = {\n  BIG: 24,\n  LARGE: 21,\n  MEDIUM: 18,\n  SMALL: 15,\n  TINY: 12,\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { isCategoryValidErr, COLLECTION_NAME_MAP, KuralDetail } from './';\n\nexport const getKurals = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Record<number, string>> => {\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(lang)\n    .get();\n  return (kuralSnapshotRef.data() || {}) as Record<number, string>;\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralIdsOfChapter = (chapter: number): number[] => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return kuralRangeIds;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  // TODO: get only transliterators of user prefered language\n  const transliteratorSnapRef = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n  );\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  // TODO: update only if user not an anonymous user\n  await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .doc(`${user.id}`)\n    .set(user);\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { getCategoryIds } from './category';\nimport { findChapterNoFromKuralNo } from './common';\nimport { Category, IndexMapType, RootCategory } from './types';\n\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\nexport type CategoryIdMapPartial = Partial<Record<Category, number>>;\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\nexport const findCategoryRouteMap = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): CategoryIdMapPartial => {\n  const { kural, chapter, literature, section } = filter;\n  const KURALS_CHAPTER = kural ? findChapterNoFromKuralNo(kural) : chapter;\n  return {\n    ...rootCategoryFinder(INDEX_MAP, {\n      chapter: KURALS_CHAPTER,\n      literature,\n      section,\n    }),\n    ...(kural ? { kural } : {}),\n  };\n};\n\nexport const convertCategoryRouteMapToString = (\n  filter: CategoryIdMapPartial\n): string => {\n  return (['section', 'literature', 'chapter', 'kural'] as Category[])\n    .filter((k) => filter[k as Category] !== undefined)\n    .map((k) => filter[k as Category])\n    .join('/');\n};\n\nexport const findCategoryRouteMapString = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): string => {\n  return convertCategoryRouteMapToString(\n    findCategoryRouteMap(INDEX_MAP, filter)\n  );\n};\n","import { Transliterator, User } from './types';\n\nexport const getUserPreferedLanguages = (user: User): string[] => {\n  const { primary, secondary } = user.preference.language;\n  return [primary, ...secondary];\n};\n\nexport const findTransliteratorsOfLanguage = (\n  language: string[],\n  tMap: Record<number, Transliterator>\n): Record<number, Transliterator> => {\n  if (!language.length) {\n    return tMap;\n  }\n  return Object.entries(tMap)\n    .filter(([id, transliterator]) =>\n      language.some((lang) => lang === transliterator.lang)\n    )\n    .reduce((state, [key, value]) => ({ ...state, [key]: value }), {});\n};\n\nexport type UserTransliteratorMap = [Transliterator[], Transliterator[]];\n\ntype getUserTransliteratorsType = (\n  u: User,\n  tMap: Record<number, Transliterator>\n) => UserTransliteratorMap;\nexport const getUserTransliterators: getUserTransliteratorsType = (\n  user,\n  transliteratorsMap\n) => {\n  const result: UserTransliteratorMap = [[], []];\n  const userLangs = getUserPreferedLanguages(user);\n  const userTMap = findTransliteratorsOfLanguage(userLangs, transliteratorsMap);\n  const userLikedTransliterators = user.preference?.transilterators || [];\n  if (userLikedTransliterators.length) {\n    const allowedTransliteratorIds = Object.keys(userTMap).map((t) =>\n      parseInt(t)\n    );\n    result[0] = userLikedTransliterators\n      .filter((t) => allowedTransliteratorIds.includes(t))\n      .map((t) => userTMap[t]);\n    result[1] = allowedTransliteratorIds\n      .filter((t) => !userLikedTransliterators.includes(t))\n      .map((t) => userTMap[t]);\n  } else {\n    result[0] = Object.values(userTMap);\n  }\n  return result;\n};\n","import { Category, SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport const ITEMS_COUNT_MAP: Record<Category, number> = {\n  kural: 1330,\n  chapter: 133,\n  literature: 13,\n  section: 3,\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\nexport * from './route';\nexport * from './user';\n"],"sourceRoot":""}