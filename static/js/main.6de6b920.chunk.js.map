{"version":3,"sources":["state/kuralIndex/index.ts","lib/api/category.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","lib/api/index.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","lib/hooks/useCategory.tsx","views/components/common/ListView.tsx","views/components/kural/ChapterViewer.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/components/kural/LiteratureViewer.tsx","views/components/kural/SectionViewer.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/home.tsx","views/components/kural/RouteViewer.tsx","views/pages/list/list.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","state/title/index.ts","views/pages/main/main.tsx","lib/hooks/useKuralHeader.tsx","views/components/kural/KuralSearch.tsx","views/pages/search/search.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx"],"names":["getLiteratureNoFromChapterNo","INDEX_MAP","chapterNo","isCategoryValidErr","Number","Object","keys","litChapMap","find","litId","isItemInRange","getSectionNoByLiteratureNo","literatureNo","section","map","secId","litIndex","getCategoryIds","category","categoryId","result","literature","chapter","getKuralIndex","firestore","a","collection","COLLECTION_NAME_MAP","get","indexSnapshot","getDocData","key","docs","doc","id","data","getAllBaseItems","lang","collectionKey","sectionSnapshot","value","getAllSections","getAllChapter","getAllLiterature","findChapterNoFromKuralNo","kuralNo","Math","ceil","isResultOfType","type","resType","startsWith","getKural","kId","KURAL","kuralSnapshotRef","getKuralDetail","KURAL_DETAIL","snapshot","getKuralsOfChapter","startKuralNo","kuralRangeIds","Array","from","i","kuralsRef","where","firebase","FieldPath","documentId","sort","b","getAllTransliterators","TRANSLITERATOR","transliteratorSnapRef","getUserPreferences","userId","USER_SETTINGS","limit","empty","Error","userDocRef","item","range","fillRange","out","push","isCategoryValid","getItemByPosition","direction","getSectionPrev","getLiteraturePrev","getChapterPrev","kural","getKuralPrev","toBaseTypeMap","list","reduce","oldVal","defaultState","transliterator","index","KuralIndexReducer","state","action","payload","thunkInitKuralIndexMapAndUserPref","dispatch","userPref","kuralIndex","primaryLanguage","sectionMap","literatureMap","chapterMap","transliteratorMap","t1","applyPreference","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER","SearchCategoryLabelMap","all","detail","pref","defaultSettings","fontSize","SettingsReducer","settings","useNavigation","history","useHistory","route","useSubCategory","resultCategory","useFirestore","React","useState","setResult","useSelector","st","KURAL_INDEX","kuralIndexMap","useEffect","length","c","k","CHIP_COLORS","getRoutes","categories","routes","color","useRoute","filter","inputFilter","setInputFilter","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","options","rootCategoryFinder","log","debug","sectionRoute","matchPath","literatureRoute","chapterRoute","kuralRoute","newFilter","params","undefined","listen","getRouteValue","useCallback","output","input","setSearchFilters","results","setSearchKeyword","keyword","filters","userSelections","useKuralSearch","search","useDispatch","searchTypes","types","isInteger","parseInt","searchNumber","e","findSuitableSearchTypes","useCategory","navigateTo","useStyles","makeStyles","theme","root","listItem","cursor","display","gridTemplateColumns","idWrap","alignItems","palette","primary","main","minWidth","opacity","textAlign","position","left","labelWrap","paddingLeft","spacing","ListView","props","classes","List","className","items","ListItem","divider","onClick","onItemSelected","ChapterViewer","useParams","onItemSelection","breakpoints","up","kuralListItem","flexDirection","justifyContent","badgeContainer","kuralBadge","height","top","kuralWrapper","width","KuralCard","clsx","component","componentType","Badge","badgeContent","anchorOrigin","vertical","horizontal","badge","max","dangerouslySetInnerHTML","__html","replace","borderBottom","fontWeight","transliteration","padding","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","transliterators","setKural","kuralDetail","setKuralDetail","values","trans","t2","rank","t1r","t2r","useKuralDetail","transliteratorId","name","Chip","size","label","KuralDetailViewer","virtualize","SwipeableViews","paddingBottom","kuralCard","marginBottom","ListKuralCard","openKuralDetail","kurals","ListKuralsOfChapter","VirtualizeSwipeableViews","LiteratureViewer","SectionViewer","sections","chapFavorites","FavoritesViewer","itemNo","useBaseItem","getChapter","chapters","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","chapterKuralMap","Map","forEach","it","chap","has","set","noRecordsFound","disablePadding","selected","button","ListItemText","Collapse","in","timeout","chapterInfo","ListSubheader","disableSticky","marginTop","favoriteCard","margin","Home","Card","variant","CardHeader","title","CardContent","routeContainer","flexWrap","chipRoot","maxWidth","RouteViewer","style","backgroundColor","renderRight","ListPage","Container","disableGutters","renderRoutes","HideOnScroll","children","window","trigger","useScrollTrigger","target","Slide","appear","menuButton","marginRight","flexGrow","MyAppBar","AppBar","Toolbar","Typography","actions","appBar","bottom","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","currentRoute","onChange","_","BottomNavigationAction","icon","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","isExact","setRoute","Main","createStyles","marginLeft","flex","iconButton","KuralSearch","setKeyword","clearSearchResults","useDebouncedCallback","debouncedCallback","searchKeyword","Paper","IconButton","disabled","aria-label","InputBase","placeholder","inputProps","Divider","orientation","searchWrapper","searchFilter","paddingTop","kuralSearchItem","SearchChips","setFilters","hasStartsWith","f","filterOptions","isShow","Set","r","isSelected","selection","SearchResultItem","Search","showBadgeRight","renderItem","itemText","formControl","ROUTE_CONSTANTS","path","exact","fontSizeOptions","counter","FormControl","InputLabel","Select","labelId","v","MenuItem","enableMouseEvents","overscanSlideBefore","overscanSlideAfter","onChangeIndex","indexLatest","slideRenderer","nextIndex","mod","to","App","rootReducers","combineReducers","concat","status","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","render","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6de6b920.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport {\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.INDEX_MAP)\n    .get();\n  const getDocData = (key: 'section' | 'litChapMap'): any =>\n    indexSnapshot.docs.find((doc) => doc.id === key);\n  return {\n    section: getDocData('section').data(),\n    litChapMap: getDocData('litChapMap').data(),\n  };\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestore\n    .collection(COLLECTION_NAME_MAP[collectionKey])\n    .get();\n  return sectionSnapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n} from './';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => `${startKuralNo + i}`\n  );\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await kuralsRef\n    .where(firebase.firestore.FieldPath.documentId(), 'in', kuralRangeIds)\n    .get();\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  const transliteratorSnapRef = await firestore\n    .collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n    .get();\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { UserPreference } from './types';\n\ntype UserPreferenceDocument = Exclude<UserPreference, 'userId'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<UserPreference> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER_SETTINGS)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    userId: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { UpdateSettingsAction } from './../settings';\nimport { applyPreference } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<\n  void,\n  AppState,\n  unknown,\n  InitIndexMapAction | UpdateSettingsAction\n> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    const userPref = await getUserPreferences(firestore, 'rajeshsundaram');\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(\n      await getAllSections(firestore, userPref.primaryLanguage)\n    );\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, userPref.primaryLanguage)\n    );\n    const chapterMap = toBaseTypeMap(\n      await getAllChapter(firestore, userPref.primaryLanguage)\n    );\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(applyPreference(userPref));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import { SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER_SETTINGS: 'USER_SETTINGS',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\n","import { UserPreference } from 'src/lib/api';\n\ntype LoadSettingsAction = { type: 'LoadSettings'; payload: UserPreference };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = LoadSettingsAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const defaultSettings: UserPreference = {\n  fontSize: 16,\n  primaryLanguage: 'TA',\n};\nexport const SettingsReducer = (\n  settings = defaultSettings,\n  action: SettingsActionTypes\n): UserPreference => {\n  switch (action.type) {\n    case 'LoadSettings':\n      return action.payload;\n    case 'UpdateSettings':\n      return { ...settings, ...action.payload };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category: RootCategory,\n  id: number,\n  resultCategory: Category\n) => BaseType[];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (category === resultCategory) {\n    throw new Error('Bad input');\n  }\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primaryLanguage } = useSelector((st: AppState) => st.settings);\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n  isCategoryValidErr(category, id);\n\n  React.useEffect(() => {\n    if (!result.length) {\n      if (category === 'chapter' && resultCategory === 'kural') {\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, primaryLanguage));\n        })();\n      } else {\n        const { literature, chapter, index: INDEX_MAP } = KURAL_INDEX;\n        if (INDEX_MAP) {\n          if (category === 'literature' && resultCategory === 'chapter') {\n            setResult(\n              fillRange(INDEX_MAP.litChapMap[id]).map((c) => chapter[c])\n            );\n          } else if (\n            category === 'section' &&\n            resultCategory === 'literature'\n          ) {\n            setResult(\n              fillRange(INDEX_MAP!!.section[id].litIndex).map(\n                (k) => literature[k]\n              )\n            );\n          } else {\n            throw new Error('category not supported');\n          }\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    firestore,\n    id,\n    primaryLanguage,\n    KURAL_INDEX,\n  ]);\n  return result;\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst CHIP_COLORS = {\n  top: 'blueviolet',\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n};\n\nconst getRoutes: (categories: Partial<CategoryBaseTypeMap>) => RouteProp[] = (\n  categories\n) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: '/list/section',\n      color: CHIP_COLORS.top,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `/list/${categories.section.id}/literature`,\n      color: CHIP_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `/list/${categories.literature.id}/chapter`,\n      color: CHIP_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      type: 'chapter',\n      route: `/list/${categories.chapter.id}/kural`,\n      color: CHIP_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      id: categories.kural.id,\n      value: `குறள்-${categories.kural.id}`,\n      type: 'kural',\n      route: `/list/kural/${categories.kural.id}`,\n      color: CHIP_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (filter: RouteMap) => [RouteMap, RouteProp[]];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(\n      pathname,\n      '/list/:section/literature'\n    );\n    const literatureRoute = matchPath<{ literature: string }>(\n      pathname,\n      '/list/:literature/chapter'\n    );\n    const chapterRoute = matchPath<{ chapter: string }>(\n      pathname,\n      '/list/:chapter/kural'\n    );\n    const kuralRoute = matchPath<{ kural: string }>(\n      pathname,\n      '/list/kural/:kural'\n    );\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    log.debug('filters', newFilter);\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    log.debug('pathname', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n  // TODO: direct access of http://localhost:3000/#/list/kural/631 doesn't show routes\n  return [routeMap, getRoutes(getRouteValue())];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\n\ntype SearchStateActionType =\n  | SetSearchKeyword\n  | SetSearchResults\n  | AddSearchResults\n  | SetSearchFilters\n  | SetAllUserSelection\n  | SetUserSelection;\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\n// reducer\ntype SearchState = {\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return { ...state, results: [...state.results, ...action.payload] };\n  } else if (action.type === 'SetSearchResults') {\n    return { ...state, results: action.payload as SearchResult[] };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  }\n  return state;\n};\n","/* eslint-disable no-fallthrough */\nimport * as React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state/reducers';\nimport {\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [(keyword: string) => void, () => void];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nconst addResults = (\n  searchTypes: SearchTypes[],\n  keyword: string,\n  dispatch: Dispatch<any>\n): void => {\n  // searchTypes.forEach((type) => {\n  //   const items: SearchResult[] = [];\n  //   switch (type) {\n  //     case 'ByKuralNo':\n  //       items.push({ type, keyword, item: getKural(parseInt(keyword)) });\n  //       break;\n  //     case 'ByChapterNo':\n  //       items.push({ type, keyword, item: getChapter(parseInt(keyword)) });\n  //       break;\n  //     case 'ByLiteratureNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getLiterature(parseInt(keyword)) });\n  //       break;\n  //     case 'BySectionNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getSection(parseInt(keyword)) });\n  //       break;\n  //   }\n  //   if (items.length > 0) {\n  //     dispatch(appendSearchResults(items));\n  //   }\n  // });\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n  };\n  const clearSearch = (): void => {\n    dispatch(clearSearchResults());\n    dispatch(setSearchKeyword(''));\n    dispatch(setSearchFilters([]));\n  };\n  React.useEffect(() => {\n    // TODO: redux-thunk\n    const searchTypes = findSuitableSearchTypes(search.keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, search.keyword, dispatch);\n  }, [dispatch, search.keyword]);\n  return [setSearchKey, clearSearch];\n};\n","import { isCategoryValid, BaseType, Category } from 'src/lib/api';\n\nimport { useNavigation } from './useNavigation';\n\ntype SubCategoryListType = Exclude<Category, 'chapter' | 'kural'> | 'top';\n\ntype useCategoryType = (\n  type: SubCategoryListType,\n  key: number\n) => (item: BaseType) => void;\nexport const useCategory: useCategoryType = (type, key) => {\n  const [navigateTo] = useNavigation();\n  if (type !== 'top') {\n    isCategoryValid(type, key);\n  }\n  const onItemSelected = (item: BaseType): void => {\n    switch (type) {\n      case 'top':\n        navigateTo(`/list/${item.id}/literature`)();\n        break;\n      case 'section':\n        navigateTo(`/list/${item.id}/chapter`)();\n        break;\n      case 'literature':\n        navigateTo(`/list/${item.id}/kural`)();\n        break;\n    }\n  };\n  return onItemSelected;\n};\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={true}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useCategory, useSubCategory } from '../../../lib/hooks';\nimport ListView from '../common/ListView';\n\ntype ChapterViewerProps = {\n  className?: string;\n};\n\nconst ChapterViewer: React.FC<ChapterViewerProps> = (\n  props: ChapterViewerProps\n) => {\n  const { literature } = useParams<{ literature: string }>();\n  const items = useSubCategory('literature', Number(literature), 'chapter');\n  const onItemSelection = useCategory('literature', Number(literature));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default ChapterViewer;\n","import React from 'react';\n\nimport { makeStyles, Badge } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  kuralListItem: {\n    flexDirection: 'row',\n    alignItems: 'start',\n    justifyContent: 'space-between',\n  },\n  badgeContainer: {\n    position: 'absolute',\n  },\n  kuralBadge: {\n    opacity: 0.8,\n    height: '1.5em',\n    fontSize: '0.5em',\n    top: theme.spacing(-1),\n    left: 2,\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadgeRight?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: any;\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem, classes.kuralListItem) }}\n      component={props.componentType || 'li'}>\n      <Badge\n        color='primary'\n        badgeContent={props.kural.id}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        className='kural-badge'\n        classes={{\n          badge: classes.kuralBadge,\n          root: classes.badgeContainer,\n        }}\n        max={1330}\n      />\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    cursor: 'grab',\n  },\n  kural: {\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    flexDirection: 'column',\n    alignItems: 'self-end',\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      padding: '0.4em',\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.root }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const {\n    settings: { primaryLanguage },\n    kuralIndexMap: { transliterator: transliterators },\n  } = useSelector((st: AppState) => st);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, primaryLanguage));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, primaryLanguage]);\n  const filteredTransliteratorMap = Object.values(transliterators)\n    .filter((trans) => trans.lang === primaryLanguage)\n    .sort((t1, t2) => {\n      const [t1r, t2r] = [t1.rank, t2.rank];\n      return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n    });\n  return [kural, kuralDetail, filteredTransliteratorMap];\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { mod } from 'react-swipeable-views-core';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition, isCategoryValid } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralDetail from './KuralDetail';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const [navigateTo] = useNavigation();\n  const params = useParams<{ kural: string }>();\n  const kuralNo = parseInt(params.kural);\n  return (\n    <>\n      <KuralDetail kural={kuralNo} />\n      {/* <VirtualizeSwipeableViews\n        enableMouseEvents\n        overscanSlideBefore={kuralNo === 1 ? 0 : 1}\n        overscanSlideAfter={kuralNo === 1330 ? 0 : 1}\n        index={kuralNo - 1}\n        onChangeIndex={(index, indexLatest): void => {\n          navigateTo(\n            `/list/kural/${getItemByPosition(\n              'kural',\n              index - indexLatest < 0 ? 'PREV' : 'NEXT',\n              kuralNo\n            )}`\n          )();\n        }}\n        slideRenderer={({ key, index }): React.ReactNode => {\n          const nextIndex = mod(index, 1330) + 1;\n          // TODO: 1000 above requests firing when loading 1329th kural detail\n          return null; \n          //  isCategoryValid('kural', nextIndex) ? (\n          //   <KuralDetail key={key} kural={nextIndex} />\n          // ) : null; \n        }}\n      /> */}\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingBottom: 0,\n    '& li:last-child': {\n      borderBottom: 'none',\n    },\n  },\n  kuralCard: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(`/list/kural/${kural.id}`)();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          className={classes.kuralCard}\n          key={k.id}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const kurals = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { mod } from 'react-swipeable-views-core';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition, isCategoryValid } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const { chapter } = useParams<{ chapter: string }>();\n  const chapterNo = Number(chapter);\n  const [navigateTo] = useNavigation();\n  return (\n    <div className={props.className}>\n      <VirtualizeSwipeableViews\n        enableMouseEvents\n        overscanSlideBefore={chapterNo === 1 ? 0 : 1}\n        overscanSlideAfter={chapterNo === 133 ? 0 : 1}\n        index={chapterNo - 1}\n        onChangeIndex={(index, indexLatest): void => {\n          const chap = parseInt(chapter);\n          navigateTo(\n            `/list/${getItemByPosition(\n              'chapter',\n              index - indexLatest < 0 ? 'PREV' : 'NEXT',\n              chap\n            )}/kural`\n          )();\n        }}\n        slideRenderer={({ key, index }): React.ReactNode => {\n          const nextIndex = mod(index, 133) + 1;\n          return isCategoryValid('chapter', nextIndex) ? (\n            <ListKuralsOfChapter key={key} chapterNo={nextIndex} />\n          ) : null;\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useCategory, useSubCategory } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\n\ntype LiteratureViewerProps = {\n  className?: string;\n};\n\nconst LiteratureViewer: React.FC<LiteratureViewerProps> = (\n  props: LiteratureViewerProps\n) => {\n  const { section } = useParams<{ section: string }>();\n  const items = useSubCategory('section', Number(section), 'literature');\n  const onItemSelection = useCategory('section', Number(section));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default LiteratureViewer;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport ListView from './../common/ListView';\n\ntype SectionViewerProps = {\n  className?: string;\n};\n\nconst SectionViewer: React.FC<SectionViewerProps> = (\n  props: SectionViewerProps\n) => {\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [navigateTo] = useNavigation();\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={Object.values(sections)}\n        onItemSelected={(item): void => {\n          navigateTo(`/list/${item.id}/literature`)();\n        }}\n      />\n    </>\n  );\n};\n\nexport default SectionViewer;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { findChapterNoFromKuralNo } from 'src/lib/api';\nimport { Chapter, Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation, useFavorites } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  list: {\n    '& .list-group': {},\n    '& .sub-list': {\n      // paddingTop: 16,\n      '& li:last-child': {\n        borderBottom: 'unset',\n        marginBottom: 'unset',\n      },\n    },\n    '& .sub-header': {\n      textAlign: 'left',\n      // lineHeight: '30px',\n      color: 'brown',\n    },\n  },\n  chapFavorites: {\n    paddingBottom: 0,\n    '& li:last-child': {\n      borderBottom: 'unset',\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const [chapters, setChapters] = React.useState<Chapter[]>([]);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  // const [, , getFavorites] = useFavorites();\n  const onChapterSelected = (item: BaseType): void => {\n    navigateTo(`/list/${item.id}/kural`)();\n  };\n  const sortById = (items: BaseType[]): BaseType[] =>\n    items.sort((it1, it2) => it1.id - it2.id);\n  // React.useEffect(() => {\n  // const { chapter, kural } = getFavorites();\n  // chapter.then((res) => setChapters(sortById(res)));\n  // kural.then((res) => setKurals(sortById(res)));\n  // }, [getFavorites]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        <ListItem\n          selected={isKuralVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setKuralVisible(!isKuralVisible);\n          }}>\n          <ListItemText primary='Kurals' />\n          {isKuralVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isKuralVisible} timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard key={item.id} kural={item} />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        <ListItem\n          selected={isChapterVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setChapterVisible(!isChapterVisible);\n          }}>\n          <ListItemText primary='Chapters' />\n          {isChapterVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isChapterVisible} timeout='auto'>\n          {chapters.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={chapters}\n              onItemSelected={(item: BaseType): void => onChapterSelected(item)}\n            />\n          )}\n          {chapters.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useRoute, useNavigation } from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.6em',\n    height: '1.3em',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles(props);\n  const [navigateTo] = useNavigation();\n  const [, routes] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <Chip\n            size='small'\n            label={item.value}\n            color={'primary'}\n            onClick={(): void => {\n              if (item.route) {\n                navigateTo(item.route)();\n              }\n            }}\n            style={{ backgroundColor: item.color }}\n            classes={{ root: classes.chipRoot }}\n            key={index}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { renderRoutes } from 'react-router-config';\nimport RouteViewer from 'src/views/components/kural/RouteViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst ListPage: React.FC<any> = (props: any) => {\n  const classes = useStyles();\n  // TODO:\n  // const favoriteAction = (\n  //   <FavouriteToggle\n  //     active={isFavourite(kuralNo, 'kural')}\n  //     handler={(isActive: boolean): Promise<boolean> =>\n  //       setFavourite(kuralNo, isActive, 'kural')\n  //     }\n  //   />\n  // );\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer renderRight={<div>hello</div>} />\n      </Container>\n      <div className={classes.root}>{renderRoutes(props.route.routes)}</div>\n    </>\n  );\n};\n\nexport default ListPage;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    textAlign: 'start',\n    flexGrow: 1,\n  },\n}));\n\ntype MyAppBarProps = {\n  title: string;\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  const classes = useStyles();\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar /* color='inherit' */>\n          <Toolbar>\n            <Typography variant='h6' className={classes.title}>\n              {props.title}\n            </Typography>\n            {props.actions}\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default MyAppBar;\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = {};\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  {\n    icon: <SearchIcon />,\n    route: '/search',\n    label: 'Search',\n  },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  {\n    icon: <SettingsIcon />,\n    route: '/settings',\n    label: 'Settings',\n  },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\nimport { useKuralHeader } from 'src/lib/hooks';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  const [title, actions] = useKuralHeader();\n  return (\n    <>\n      <MyAppBar title={title} actions={actions} />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport { AppState } from '../../state/reducers';\nimport FavouriteToggle from '../../views/components/common/FavouriteToggle';\nimport { useFavorites } from './useFavorites';\n\ntype useKuralHeaderType = () => [string, React.ReactNode];\nexport const useKuralHeader: useKuralHeaderType = () => {\n  // const [isFavourite, setFavourite] = useFavorites();\n  const title = useSelector((st: AppState) => st.title);\n  // const chapterRoute = useRouteMatch<{ chapter: string }>(\n  //   '/list/:chapter/kural'\n  // );\n  // const kuralRoute = useRouteMatch<{ kural: string }>('/list/kural/:kural');\n  const actions = null;\n  // if (chapterRoute?.isExact) {\n  //   const chapterNo = parseInt(chapterRoute.params.chapter);\n  //   actions = (\n  //     <FavouriteToggle\n  //       active={isFavourite(chapterNo, 'chapter')}\n  //       handler={(isActive: boolean): Promise<boolean> =>\n  //         setFavourite(chapterNo, isActive, 'chapter')\n  //       }\n  //     />\n  //   );\n  // } else if (kuralRoute?.isExact) {\n  //   const kuralNo = parseInt(kuralRoute.params.kural);\n  //   actions = (\n  //     <FavouriteToggle\n  //       active={isFavourite(kuralNo, 'kural')}\n  //       handler={(isActive: boolean): Promise<boolean> =>\n  //         setFavourite(kuralNo, isActive, 'kural')\n  //       }\n  //     />\n  //   );\n  // }\n  return [title, actions];\n};\n","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useSelector } from 'react-redux';\nimport { AppState } from 'src/state/reducers';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n};\n\n/* const SearchOptions = [\n  {\n    id: 1,\n    label: 'All', // kural_no, startsWith, endsWith, contains\n  },\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n */\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const [setKeyword, clearSearchResults] = useKuralSearch();\n  const [debouncedCallback] = useDebouncedCallback((value: string) => {\n    setKeyword(value);\n  }, 500);\n  const [searchKeyword, setSearchKeyword] = React.useState<string>(\n    search.keyword\n  );\n  //   const onSearchOptionChange = console.log;\n  return (\n    <Paper component='form' className={classes.root}>\n      {/* <Select\n        labelId='demo-mutiple-name-label'\n        id='demo-mutiple-name'\n        multiple\n        value={[SearchOptions[0].id]}\n        onChange={onSearchOptionChange}\n        input={<Input />}\n        MenuProps={MenuProps}>\n        {SearchOptions.map((item) => (\n          <MenuItem key={item.id} value={item.label}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select> */}\n      <IconButton\n        disabled\n        type='submit'\n        color='primary'\n        className={classes.iconButton}\n        aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        // TODO: placeholder: 12, kural, chapter_name\n        placeholder='Search kurals'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          setSearchKeyword(e.target.value);\n          debouncedCallback(e.target.value);\n        }}\n        value={searchKeyword}\n      />\n      <Divider className={classes.divider} orientation='vertical' />\n      <IconButton\n        disabled={!search.keyword.length}\n        type='submit'\n        color='primary'\n        className={classes.iconButton}\n        onClick={(): void => {\n          setSearchKeyword('');\n          clearSearchResults();\n        }}\n        aria-label='search'>\n        <ClearIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Chip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n  isResultOfType,\n  SearchResult,\n  BaseType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state/reducers';\nimport { setUserSelection, setAllUserSelections } from 'src/state/search';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport KuralSearch from '../../components/kural/KuralSearch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  searchWrapper: {\n    textAlign: 'center',\n  },\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchChipsProps = {};\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst SearchChips: React.FC<SearchChipsProps> = (props: SearchChipsProps) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n\ntype SearchResultItem = {\n  item: BaseType;\n  label: string;\n  onClick: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItem> = ({\n  item,\n  label,\n  onClick,\n}: SearchResultItem) => {\n  return (\n    <div key={item.id} onClick={onClick}>\n      <div>{item.value}</div>\n    </div>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n\n  const renderItem = (item: SearchResult): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <KuralCard\n          key={item.item.id}\n          kural={item.item}\n          className={classes.kuralSearchItem}\n          showBadgeRight={true}\n        />\n        // <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    // if (isResultOfType(item, 'detail') && search.userSelections.detail) {\n    //   return <>detail: {item.item.value}</>;\n    // }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <div className={classes.searchWrapper}>\n        <KuralSearch />\n      </div>\n      <SearchChips />\n      <List>\n        {search.results.map((item, i) => (\n          <ListItem key={i} divider={true}>\n            {renderItem(item)}\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  InputLabel,\n  Select,\n  FormControl,\n  MenuItem,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport {\n  applyPreference,\n  defaultSettings,\n  SETTINGS_STORAGE,\n} from '../../../state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {\n    fontSize: '1em',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const settings = useSelector((st: AppState) => st.settings);\n\n  const fontSizeOptions: Array<number> = [];\n  Array.from(Array(10).keys()).reduce((counter) => {\n    fontSizeOptions.push(counter);\n    counter = counter + 2;\n    return counter;\n  }, defaultSettings.fontSize - 4);\n  const onFontChange = (value: number): void => {\n    dispatch(applyPreference({ fontSize: value }));\n  };\n\n  // TODO:\n  // React.useEffect(() => {\n  //   (async (): Promise<void> => {\n  //     await localforage.setItem(SETTINGS_STORAGE, settings);\n  //   })();\n  // }, [settings]);\n\n  return (\n    <div className={props.className}>\n      <List>\n        <ListItem className={classes.item}>\n          <ListItemText\n            classes={{ primary: classes.itemText }}\n            primary='font size'\n          />\n          <FormControl className={classes.formControl}>\n            <InputLabel id='demo-simple-select-label'>Age</InputLabel>\n            <Select\n              labelId='demo-simple-select-label'\n              id='demo-simple-select'\n              value={settings.fontSize}\n              onChange={(e): void => onFontChange(e.target.value as number)}>\n              {fontSizeOptions.map((v) => (\n                <MenuItem key={v} value={v}>\n                  {v}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport ChapterViewer from './views/components/kural/ChapterViewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport LiteratureViewer from './views/components/kural/LiteratureViewer';\nimport SectionViewer from './views/components/kural/SectionViewer';\nimport Home from './views/pages/home/home';\nimport ListPage from './views/pages/list/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      /* {\n        path: ROUTE_CONSTANTS.FAVOURITE,\n        component: FavoritesViewer,\n        exact: true,\n      }, */\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListPage,\n        routes: [\n          {\n            path: '/list/section',\n            component: SectionViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:section/literature',\n            component: LiteratureViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:literature/chapter',\n            component: ChapterViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:chapter/kural',\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: '/list/kural/:kural',\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: '/list*',\n            // eslint-disable-next-line react/display-name\n            component: (): React.ReactElement => (\n              <Redirect to='/list/1/kural' />\n            ),\n            exact: true,\n          },\n        ],\n      },\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => <Redirect to='/' />,\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const settings = useSelector((st: AppState) => st.settings);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div className={classes.root} style={{ fontSize: settings.fontSize }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { SettingsReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  settings: SettingsReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'TRACE');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}