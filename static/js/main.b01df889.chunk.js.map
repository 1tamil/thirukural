{"version":3,"sources":["state/kuralIndex/index.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","views/components/common/AnimatedExpandedIcon.tsx","views/components/category-viewer/category-list-item.tsx","views/components/category-viewer/category-viewer.tsx","views/components/category-viewer/category-viewer-container.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/RouteViewer.tsx","lib/hooks/useLongPress.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/pages/settings/RankTransliteratorSetting.tsx","views/components/common/ListView.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/index.tsx","views/pages/list/index.tsx","views/components/kural/KuralSearch.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","state/title/index.ts","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","views/pages/search/SearchChips.tsx","views/pages/search/search.tsx","views/components/common/DiscreteSlider.tsx","views/pages/settings/FontSizePicker.tsx","views/pages/settings/SettingItem.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx","lib/api/types.ts","lib/api/category.ts","lib/api/firestore.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","lib/api/route.ts","lib/api/user.ts","lib/api/index.ts"],"names":["defaultState","chapter","section","literature","transliterator","index","KuralIndexReducer","state","action","type","payload","thunkInitKuralIndexMapAndUserPref","firestore","dispatch","a","getUserPreferences","user","primary","preference","language","getKuralIndex","kuralIndex","toBaseTypeMap","getAllSections","sectionMap","getAllLiterature","literatureMap","getAllChapter","chapterMap","getAllTransliterators","transliteratorMap","reduce","oldVal","t1","id","setUser","updateUserFSAsync","updateUserPreference","applyPreference","pref","ANONYOMOUS_USER","favorites","kural","secondary","fontSizeType","FontSizeType","MEDIUM","PreferenceReducer","settings","useNavigation","history","useHistory","route","push","useSubCategory","category","resultCategory","Error","isCategoryValidErr","useFirestore","React","useState","result","setResult","PRIMARY_LANG","useSelector","st","KURAL_INDEX","kuralIndexMap","getLiteraturesBySection","useCallback","sectionId","LITERATURE_MAP","INDEX_MAP","fillRange","litIndex","map","k","getChaptersFromLiterature","litId","CHAPTER_MAP","litChapMap","c","useEffect","length","getKuralsOfChapter","getRoutes","categories","favourites","routes","value","ROUTE_CONSTANTS","LIST_CATEGORY","color","CATEGORY_COLORS","default","isFavourite","some","ch","LIST","useRoute","filter","inputFilter","setInputFilter","useDispatch","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","findChapterNoFromKuralNo","options","Object","keys","find","getCategoryIds","rootCategoryFinder","log","debug","sectionRoute","matchPath","path","exact","literatureRoute","chapterRoute","kuralRoute","Number","params","undefined","listen","getRouteValue","output","input","itemIndex","indexOf","splice","updatedUserPref","sortSearchResults","items","SortValueMap","sort","b","status","keyword","results","filters","userSelections","detail","useKuralSearch","USER_LANG","addResults","searchTypes","forEach","kuralNo","parseInt","isCategoryValid","getKural","item","chapterNo","literatureNo","sectionNo","setSearchKeyword","types","isInteger","searchNumber","e","findSuitableSearchTypes","setSearchStatus","useStyles","makeStyles","theme","icon","palette","main","transform","transition","AnimatedExpandedIcon","isExpanded","className","style","classes","ExpandMore","clsx","listItem","cursor","position","borderRadius","spacing","WebkitTapHighlightColor","border","paddingLeft","listIcon","display","justifyContent","alignItems","TreeListItem","level","hasNodes","isOpen","label","toggleNode","focused","onClick","active","ListItem","ev","ListItemText","treeMenuContainer","outlineStyle","list","padding","CategoryViewer","props","List","key","itemProps","CategoryViewerContainer","chapterQueryParam","URLSearchParams","search","get","routeKey","replace","RegExp","sections","getChaptersByLiterature","TREE_DATA","values","s","sIndex","toString","nodes","lit","chIndex","initialActiveKey","initialFocusKey","initialOpenNodes","split","it","substring","getInitialOpenNodes","onClickItem","newRoute","lastItemSeparator","lastIndexOf","currentRoute","data","hasSearch","flexDirection","userSelect","breakpoints","up","badgeContainer","background","height","fontSize","lineHeight","minWidth","kuralWrapper","width","KuralCard","root","component","componentType","showBadge","dangerouslySetInnerHTML","__html","transliteratorList","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","textAlign","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","TRANSLITERATORS","setKural","kuralDetail","setKuralDetail","getUserTransliterators","userPreferedTranslits","getKuralDetail","useKuralDetail","transliterators","transliteratorId","name","Chip","size","routeContainer","flexWrap","chipRoot","margin","maxWidth","favoriteIcon","RouteChip","onLongPress","navigateTo","longPressEventHandlers","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","Favorite","backgroundColor","RouteViewer","toggleRouteFavourite","renderRight","SwiperCore","use","Virtual","Keyboard","KuralDetailViewer","useParams","activeKuralNo","setActiveKuralNo","slideKuralIds","Array","from","ITEMS_COUNT_MAP","i","findCategoryRouteMapString","Container","disableGutters","keyboard","grabCursor","initialSlide","spaceBetween","slidesPerView","allowSlideNext","virtual","onTransitionEnd","swiper","activeIndex","kId","virtualIndex","renderSlide","kuralCard","ListKuralCard","openKuralDetail","kurals","ListKuralsOfChapter","TransliteratorSectionType","gridTemplateColumns","idWrap","opacity","left","labelWrap","ListView","divider","showDivider","onItemSelected","collapsableGroup","listItemTitle","marginLeft","listTitleBadge","chapFavorites","paddingRight","FavoritesViewer","itemNo","categoryId","useBaseItem","getChapter","KURAL_IDS","CHAPTER_IDS","setKurals","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","onKuralSelected","getKuralByIds","then","chapterKuralMap","Map","chap","has","set","noRecordsFound","GroupTitleMaker","isVisible","title","badgeContent","selected","button","inset","Badge","badge","showZero","max","invisible","disablePadding","Collapse","in","timeout","chapterInfo","ListSubheader","disableSticky","marginTop","favoriteCard","Home","Card","variant","CardHeader","CardContent","SEARCH_ROUTE","createStyles","borderColor","fade","grey","searchicon","clearIcon","flex","light","KuralSearch","inputRef","useRef","setSearchKey","debounced","useDebouncedCallback","setKeyword","isExact","isSearchRoute","focus","setFocus","current","querySelector","InputBase","ref","placeholder","inputProps","onChange","text","target","onFocus","onSearchTap","Fade","trim","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","toolbar","avatar","actionsGroup","searchbar","marginRight","flexGrow","iconButton","MyAppBar","AppBar","elevation","Toolbar","isHomeRoute","Avatar","Person","IconButton","goBack","KeyboardBackspace","actions","defalutTitle","appBar","bottom","top","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","setRoute","Main","renderRoutes","searchFilter","SearchChips","setFilters","hasStartsWith","f","startsWith","filterOptions","SearchCategoryLabelMap","all","isShow","Set","r","isSelected","selection","kuralSearchItem","searchItem","searchItemAvatar","SearchResultItem","innerContent","charAt","toUpperCase","Search","getOnClickRoute","isResultOfType","renderItem","StyledSlider","withStyles","thumb","track","rail","mark","right","content","markActive","Slider","DiscreteSlider","aria-labelledby","valueLabelDisplay","sliderWrapper","sliderRoot","FontSizePicker","FONT_SIZE_MAP","marks","entries","aria-label","step","min","TINY","BIG","fontType","userPreference","subList","subHeader","subListItem","subListItemText","TransliteratorLabel","inactive","toUserLikedTranslitsMap","RankTransliteratorSetting","userTransLits","setUserTransLits","onDragEnd","source","destination","updateState","reorderedTransliterors","JSON","parse","stringify","srcList","droppableId","transilterators","t","provided","snapshot","droppableProps","innerRef","isDraggingOver","subheader","tItem","draggableId","isDragging","draggableProps","dragHandleProps","ListItemIcon","DragIndicator","disableTypography","itemLabel","itemChild","listItemIcon","SettingItem","showExpandIcon","isItemExpanded","toggleItem","container","unmountOnExit","itemText","formControl","fontSizePicker","SettingsLabel","Settings","ROOT","SEARCH","FAVOURITE","SETTINGS","SettingsViewer","activeChapterNo","setActiveChapterNo","slideChapterIds","chId","render","match","url","ROUTE_REGEX","test","to","App","rootReducers","combineReducers","concat","firebase","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","getLiteratureNoFromChapterNo","isItemInRange","getSectionNoByLiteratureNo","secId","firestoreGetCacheFirst","empty","collection","COLLECTION_NAME_MAP","indexSnapshot","getDocData","docs","doc","getAllBaseItems","lang","collectionKey","sectionSnapshot","Math","ceil","resType","LARGE","SMALL","KURAL","kuralSnapshotRef","KURAL_DETAIL","ids","kuralsRef","where","FieldPath","documentId","startKuralNo","kuralRangeIds","TRANSLITERATOR","transliteratorSnapRef","userId","USER","limit","userDocRef","range","out","findCategoryRouteMap","join","convertCategoryRouteMapToString","transliteratorsMap","tMap","userLangs","getUserPreferedLanguages","userTMap","userLikedTransliterators","allowedTransliteratorIds","includes","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER"],"mappings":"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","file":"static/js/main.b01df889.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  FontSizeType,\n  updateUserPreference,\n  User,\n  UserPreference,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const ANONYOMOUS_USER: User = {\n  id: 'anonymous',\n  favorites: {\n    kural: [],\n    chapter: [],\n  },\n  preference: {\n    language: {\n      primary: 'TA',\n      secondary: [],\n    },\n    fontSizeType: FontSizeType.MEDIUM,\n  },\n};\nexport const PreferenceReducer = (\n  settings = ANONYOMOUS_USER,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category?: RootCategory,\n  id?: number,\n  resultCategory?: Category\n) => [BaseType[], (id: number) => BaseType[], (id: number) => BaseType[]];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (id && category && resultCategory) {\n    if (category === resultCategory) {\n      throw new Error('Bad input');\n    }\n    isCategoryValidErr(category, id);\n  }\n\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primary: PRIMARY_LANG } = useSelector(\n    (st: AppState) => st.user.preference.language\n  );\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  const getLiteraturesBySection = React.useCallback(\n    (sectionId: number): BaseType[] => {\n      const { literature: LITERATURE_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('section', sectionId);\n      return fillRange(INDEX_MAP!!.section[sectionId].litIndex).map(\n        (k) => LITERATURE_MAP[k]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  const getChaptersFromLiterature = React.useCallback(\n    (litId: number): BaseType[] => {\n      const { chapter: CHAPTER_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('literature', litId);\n      return fillRange(INDEX_MAP!!.litChapMap[litId]).map(\n        (c) => CHAPTER_MAP[c]\n      );\n    },\n    [KURAL_INDEX]\n  );\n  React.useEffect(() => {\n    if (!result.length && id) {\n      if (category === 'chapter' && resultCategory === 'kural') {\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, PRIMARY_LANG));\n        })();\n      } else {\n        const { index: INDEX_MAP } = KURAL_INDEX;\n        if (INDEX_MAP) {\n          if (category === 'literature' && resultCategory === 'chapter') {\n            setResult(getChaptersFromLiterature(id));\n          } else if (\n            category === 'section' &&\n            resultCategory === 'literature'\n          ) {\n            setResult(getLiteraturesBySection(id));\n          } else {\n            throw new Error('category not supported');\n          }\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    firestore,\n    id,\n    PRIMARY_LANG,\n    KURAL_INDEX,\n    getLiteraturesBySection,\n    getChaptersFromLiterature,\n  ]);\n\n  return [result, getLiteraturesBySection, getChaptersFromLiterature];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  User,\n  CATEGORY_COLORS,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: Record<'kural' | 'chapter', number[]>\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: ROUTE_CONSTANTS.LIST_CATEGORY,\n      color: CATEGORY_COLORS.default,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section.id}`,\n      color: CATEGORY_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section!!.id}/${\n        categories.literature.id\n      }`,\n      color: CATEGORY_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: favourites.chapter.some(\n        (ch) => ch === categories.chapter?.id\n      ),\n      type: 'chapter',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter.id}`,\n      color: CATEGORY_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: favourites.kural.some((k) => k === categories.kural?.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter!!.id}/${categories.kural.id}`,\n      color: CATEGORY_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.user);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section`,\n      exact: true,\n    });\n    const literatureRoute = matchPath<{ literature: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section/:literature`,\n      exact: true,\n    });\n    // TODO: category & list route for chapter\n    const chapterRoute = matchPath<{ chapter: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n      exact: true,\n    });\n    const kuralRoute = matchPath<{ kural: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n      exact: true,\n    });\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    // log.debug('route path values => ', JSON.stringify(newFilter));\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    // TODO: enable logs after debounceing\n    // log.debug('detect route => ', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites: number[];\n      if (shouldAddToList) {\n        favorites = [...user.favorites[route.type], route.id];\n      } else {\n        const itemIndex = user.favorites[route.type].indexOf(route.id);\n        favorites = user.favorites[route.type];\n        favorites.splice(itemIndex, 1);\n      }\n      const updatedUserPref: User = {\n        ...user,\n        favorites: {\n          ...user.favorites,\n          [route.type]: favorites,\n        },\n      };\n      dispatch(updateUserFSAsync(firestore, updatedUserPref));\n    }\n  };\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\nconst sortSearchResults = (items: SearchResult[]) => {\n  const SortValueMap: Record<Category, number> = {\n    kural: 1,\n    chapter: 2,\n    literature: 3,\n    section: 4,\n  };\n  return items.sort(\n    (a, b) => SortValueMap[a.category] - SortValueMap[b.category]\n  );\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults([...state.results, ...action.payload]),\n    };\n  } else if (action.type === 'SetSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults(action.payload as SearchResult[]),\n    };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { getKural, SearchResult, SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport {\n  appendSearchResults,\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const USER_LANG = useSelector((st: AppState) => st.user.preference.language);\n  const { literature, section, chapter } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword);\n  };\n\n  const addResults = (searchTypes: SearchTypes[], keyword: string): void => {\n    searchTypes.forEach(async (type) => {\n      const items: SearchResult[] = [];\n      switch (type) {\n        case 'ByKuralNo':\n          const kuralNo = parseInt(keyword);\n          if (isCategoryValid('kural', kuralNo)) {\n            const item = await getKural(\n              firestore,\n              parseInt(keyword),\n              USER_LANG.primary\n            );\n            items.push({\n              type,\n              keyword,\n              category: 'kural',\n              item,\n            });\n          }\n          break;\n        case 'ByChapterNo':\n          const chapterNo = parseInt(keyword);\n          if (isCategoryValid('chapter', chapterNo)) {\n            items.push({\n              type,\n              keyword,\n              item: chapter[parseInt(keyword)],\n              category: 'chapter',\n            });\n          }\n          break;\n        case 'ByLiteratureNo':\n          const literatureNo = parseInt(keyword);\n          if (isCategoryValid('literature', literatureNo)) {\n            items.push({\n              type,\n              keyword,\n              item: literature[parseInt(keyword)],\n              category: 'literature',\n            });\n          }\n          break;\n        case 'BySectionNo':\n          const sectionNo = parseInt(keyword);\n          if (isCategoryValid('section', sectionNo)) {\n            items.push({\n              type,\n              keyword,\n              item: section[parseInt(keyword)],\n              category: 'section',\n            });\n          }\n          break;\n      }\n      if (items.length) {\n        dispatch(appendSearchResults(items));\n      }\n    });\n  };\n\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.primary.main,\n    transform: 'rotate(0deg)',\n    transition: 'all 0.2s ease',\n    '&.is-expanded': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype ExpandedIconProps = {\n  className?: string;\n  isExpanded?: boolean;\n  style?: React.CSSProperties;\n};\n\nexport const AnimatedExpandedIcon: React.FC<ExpandedIconProps> = ({\n  isExpanded,\n  className,\n  style,\n}: ExpandedIconProps) => {\n  const classes = useStyles();\n  return (\n    <ExpandMore\n      style={style}\n      className={clsx(classes.icon, isExpanded && 'is-expanded', className)}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { TreeMenuItem } from 'react-simple-tree-menu';\n\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport const TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n  onClick,\n  active,\n  ...props\n}: TreeMenuItem) => {\n  const classes = useStyles();\n\n  const toggleCategory = (ev: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    hasNodes && toggleNode && toggleNode();\n    onClick(ev);\n  };\n  return (\n    <ListItem\n      onClick={toggleCategory}\n      className={`${classes.listItem} level-${level} ${focused && 'on-focus'} ${\n        active && 'is-active'\n      }`}>\n      <ListItemText primary={label}></ListItemText>\n      {hasNodes && (\n        <div className={classes.listIcon}>\n          <AnimatedExpandedIcon isExpanded={isOpen} />\n        </div>\n      )}\n    </ListItem>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport TreeMenu, { TreeMenuProps } from 'react-simple-tree-menu';\n\nimport { TreeListItem } from './category-list-item';\n\nconst useStyles = makeStyles((theme) => ({\n  treeMenuContainer: {\n    '&>div': {\n      outlineStyle: 'none',\n    },\n  },\n  list: {\n    padding: `0px ${theme.spacing(1)}px`,\n  },\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transition: 'all 0.2s ease',\n    transform: 'rotate(0deg)',\n    '&.is-open': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n} & TreeMenuProps;\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = ({\n  className,\n  ...props\n}: CategoryViewerProps) => {\n  const classes = useStyles();\n  debug('CategoryViewer renders');\n  return (\n    <div className={classes.treeMenuContainer}>\n      <TreeMenu {...props}>\n        {({ items }) => (\n          <List className={classes.list}>\n            {items.map(({ key, ...itemProps }) => (\n              <TreeListItem key={key} {...itemProps} />\n            ))}\n          </List>\n        )}\n      </TreeMenu>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TreeNodeInArray, Item } from 'react-simple-tree-menu';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport { CategoryViewer } from './category-viewer';\n\ntype CategoryViewerContainerProps = {\n  className?: string;\n};\n\nexport const CategoryViewerContainer: React.FC<CategoryViewerContainerProps> = (\n  props: CategoryViewerContainerProps\n) => {\n  const history = useHistory();\n  const queryParams = new URLSearchParams(history.location.search);\n  const chapterQueryParam = queryParams.get('chapter');\n  const routeKey = history.location.pathname.replace(\n    new RegExp(`${ROUTE_CONSTANTS.LIST_CATEGORY}(\\/)?`),\n    ''\n  );\n  const getInitialOpenNodes = () => {\n    const nodes = routeKey\n      .split('/')\n      .map((it) => routeKey.substring(0, routeKey.indexOf(it) + it.length));\n    if (nodes.length === 2 && nodes[0] === nodes[1]) {\n      nodes[1] = `${nodes[0]}/${nodes[1]}`;\n    }\n    return nodes;\n  };\n\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n  const TREE_DATA: TreeNodeInArray[] = Object.values(sections).map(\n    (s, sIndex) => ({\n      key: s.id.toString(),\n      label: s.value,\n      index: sIndex,\n      nodes: getLiteraturesBySection(s.id).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        nodes: getChaptersByLiterature(lit.id).map((ch, chIndex) => ({\n          key: ch.id.toString(),\n          label: ch.value,\n          index: chIndex,\n        })),\n      })),\n    })\n  );\n  const onItemClick = (item: Item) => {\n    const newRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${item.key}`;\n    if (!item.hasNodes) {\n      const lastItemSeparator = item.key.lastIndexOf('/');\n      const chapter = item.key.substring(lastItemSeparator + 1);\n      const literatureRoute = item.key.substring(0, lastItemSeparator);\n      const currentRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${literatureRoute}?chapter=${chapter}`;\n      history.replace(currentRoute);\n      history.push(newRoute);\n    } else {\n      history.replace(newRoute);\n    }\n  };\n  return (\n    <CategoryViewer\n      initialActiveKey={routeKey}\n      initialFocusKey={\n        chapterQueryParam ? `${routeKey}/${chapterQueryParam}` : routeKey\n      }\n      initialOpenNodes={getInitialOpenNodes()}\n      onClickItem={onItemClick}\n      data={TREE_DATA}\n      hasSearch={false}\n    />\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    userSelect: 'none',\n    padding: theme.spacing(1),\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { getUserTransliterators, Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  const { primary: PRIMARY_LANG } = user.preference.language;\n  const TRANSLITERATORS = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  const [userPreferedTranslits] = getUserTransliterators(user, TRANSLITERATORS);\n\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, PRIMARY_LANG));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, PRIMARY_LANG]);\n  // const filteredTransliteratorMap = Object.values(TRANSLITERATORS)\n  //   .filter((trans) => trans.lang === PRIMARY_LANG)\n  //   .sort((t1, t2) => {\n  //     const [t1r, t2r] = [t1.rank, t2.rank];\n  //     return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n  //   });\n  return [kural, kuralDetail, userPreferedTranslits];\n};\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n  favoriteIcon: {\n    width: '1rem',\n    height: '1rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  findCategoryRouteMapString,\n  isCategoryValid,\n  ITEMS_COUNT_MAP,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport KuralDetail from './KuralDetail';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const params = useParams<{ kural: string }>();\n  const KURAL_NO = parseInt(params.kural);\n  const [activeKuralNo, setActiveKuralNo] = React.useState(KURAL_NO);\n  const slideKuralIds = Array.from(Array(ITEMS_COUNT_MAP.kural).keys()).map(\n    (i) => i + 1\n  );\n  const renderSlide = (kId: number, index: number) => (\n    <SwiperSlide key={kId} virtualIndex={index}>\n      <KuralDetail kural={kId} />\n    </SwiperSlide>\n  );\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { kural: activeKuralNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeKuralNo, history]);\n\n  if (!isCategoryValid('kural', KURAL_NO)) {\n    return null;\n  }\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={KURAL_NO - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideKuralIds[slideKuralIds.length - 1] !== activeKuralNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveKuralNo(swiper.activeIndex + 1);\n        }}>\n        {slideKuralIds.map((kId, index) => renderSlide(kId, index))}\n      </Swiper>\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { useSelector } from 'react-redux';\nimport { findCategoryRouteMapString, Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(\n      `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP!!, {\n        kural: kural.id,\n      })}`\n    )();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={i}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const [kurals] = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { findCategoryRouteMapString, ITEMS_COUNT_MAP } from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport 'swiper/swiper.scss';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const history = useHistory();\n  const { chapter } = useParams<{ chapter: string }>();\n  const CHAPTER_NO = parseInt(chapter);\n  const [activeChapterNo, setActiveChapterNo] = React.useState(CHAPTER_NO);\n  const slideChapterIds = Array.from(Array(ITEMS_COUNT_MAP.chapter).keys()).map(\n    (i) => i + 1\n  );\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { chapter: activeChapterNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeChapterNo, history]);\n  const renderSlide = (chId: number, index: number) => (\n    <SwiperSlide key={chId} virtualIndex={index}>\n      <ListKuralsOfChapter chapterNo={chId} />\n    </SwiperSlide>\n  );\n  return (\n    <div className={props.className}>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={CHAPTER_NO!! - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideChapterIds[slideChapterIds.length - 1] !== activeChapterNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveChapterNo(swiper.activeIndex + 1);\n        }}>\n        {slideChapterIds.map((chId, index) => renderSlide(chId, index))}\n      </Swiper>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n} from '@material-ui/core';\nimport { DragIndicator } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  getUserTransliterators,\n  Transliterator,\n  User,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { applyPreference } from 'src/state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  subList: {\n    '&.dragging-over': {\n      backgroundColor: 'lightblue',\n    },\n  },\n  subHeader: {\n    textAlign: 'left',\n    lineHeight: '1.5em',\n  },\n  subListItem: {\n    '&.is-dragging': {\n      backgroundColor: 'red',\n    },\n  },\n  subListItemText: {\n    fontSize: '0.8em',\n  },\n}));\n\ntype RankTransliteratorSettingProps = {\n  user: User;\n  className?: string;\n};\n\nenum TransliteratorSectionType {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n}\ntype TransliteratorSectionMapType = Record<\n  TransliteratorSectionType,\n  Transliterator[]\n>;\n\nconst TransliteratorLabel: Record<TransliteratorSectionType, string> = {\n  active: 'Active',\n  inactive: 'InActive',\n};\n\nconst toUserLikedTranslitsMap = (\n  user: User,\n  transliterators: Record<number, Transliterator>\n): TransliteratorSectionMapType => {\n  const [activeList, inActiveList] = getUserTransliterators(\n    user,\n    transliterators\n  );\n  return { active: activeList, inactive: inActiveList };\n};\n\nexport const RankTransliteratorSetting: React.FC<RankTransliteratorSettingProps> = (\n  props: RankTransliteratorSettingProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const transliterators = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const [userTransLits, setUserTransLits] = React.useState(\n    toUserLikedTranslitsMap(props.user, transliterators)\n  );\n  React.useEffect(() => {\n    setUserTransLits(toUserLikedTranslitsMap(props.user, transliterators));\n  }, [props.user, transliterators]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    let updateState = false;\n    if (!destination) {\n      return;\n    }\n    const reorderedTransliterors = JSON.parse(\n      JSON.stringify(userTransLits)\n    ) as TransliteratorSectionMapType;\n    const srcList =\n      reorderedTransliterors[source.droppableId as TransliteratorSectionType];\n    if (source.droppableId !== destination.droppableId) {\n      const destList =\n        reorderedTransliterors[\n          destination.droppableId as TransliteratorSectionType\n        ];\n      destList.splice(destination.index, 0, srcList[source.index]);\n      srcList.splice(source.index, 1);\n      updateState = true;\n    } else if (source.index !== destination.index) {\n      srcList.splice(destination.index, 0, ...srcList.splice(source.index, 1));\n      updateState = true;\n    }\n    if (updateState) {\n      const userPreference = {\n        ...props.user.preference,\n        transilterators: reorderedTransliterors.active.map((t) => t.id),\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {Object.entries(userTransLits).map(([key, list]) => (\n        <Droppable droppableId={key} key={key}>\n          {(provided, snapshot) => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={clsx(\n                classes.subList,\n                snapshot.isDraggingOver && 'dragging-over'\n              )}\n              subheader={\n                <ListSubheader component='div' className={classes.subHeader}>\n                  {TransliteratorLabel[key as TransliteratorSectionType]}\n                </ListSubheader>\n              }>\n              {list.map((tItem, index) => (\n                <Draggable\n                  key={tItem.id}\n                  draggableId={tItem.id.toString()}\n                  index={index}>\n                  {(provided, snapshot) => (\n                    <ListItem\n                      className={clsx(\n                        classes.subListItem,\n                        snapshot.isDragging && 'is-dragging'\n                      )}\n                      style={provided.draggableProps.style}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}>\n                      <ListItemIcon>\n                        <DragIndicator />\n                      </ListItemIcon>\n                      <ListItemText\n                        disableTypography\n                        primary={tItem.name}\n                        className={classes.subListItemText}\n                      />\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      ))}\n    </DragDropContext>\n  );\n};\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  showDivider?: boolean;\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={props.showDivider}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n  Badge,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  findCategoryRouteMapString,\n  findChapterNoFromKuralNo,\n  getKuralByIds,\n} from 'src/lib/api';\nimport { Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  collapsableGroup: {\n    // marginBottom: theme.spacing(1),\n  },\n  list: {\n    '& .sub-header': {\n      textAlign: 'left',\n      color: 'brown',\n      lineHeight: '2rem',\n      padding: `0px 0 0 ${theme.spacing(0.5)}px`,\n    },\n  },\n  listItemTitle: {\n    '& .badge-placeholder': {\n      height: '0.5rem',\n    },\n    '& .toggle-icon-container': {\n      marginLeft: theme.spacing(1.5),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n  listTitleBadge: {\n    opacity: 0.6,\n    fontSize: '0.6rem',\n    height: '130%',\n    width: '120%',\n  },\n  kural: {\n    padding: `0 0 0 ${theme.spacing(1)}px`,\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  chapFavorites: {\n    padding: 0,\n    '& li': {\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5),\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const firestore = useFirestore();\n  const {\n    favorites: { kural: KURAL_IDS, chapter: CHAPTER_IDS },\n    preference,\n  } = useSelector((st: AppState) => st.user);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n  const onKuralSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          kural: item.id,\n        })}`\n      )();\n    }\n  };\n  React.useEffect(() => {\n    if (KURAL_IDS.length > 0) {\n      getKuralByIds(firestore, KURAL_IDS, preference.language.primary).then(\n        (kurals) => {\n          setKurals(kurals);\n        }\n      );\n    }\n  }, [firestore, KURAL_IDS, preference.language.primary]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n\n  const GroupTitleMaker = (\n    isVisible: boolean,\n    onClick: () => void,\n    title: React.ReactNode,\n    badgeContent: React.ReactNode\n  ) => (\n    <ListItem\n      selected={isVisible}\n      className={classes.listItemTitle}\n      button\n      onClick={onClick}>\n      <ListItemText inset={true} primary={title} />\n      <Badge\n        badgeContent={badgeContent}\n        classes={{ badge: classes.listTitleBadge }}\n        color='secondary'\n        showZero={false}\n        max={10}\n        invisible={isVisible}>\n        <div className='badge-placeholder'></div>\n      </Badge>\n      <div className={`toggle-icon-container`}>\n        <AnimatedExpandedIcon isExpanded={isVisible} />\n      </div>\n    </ListItem>\n  );\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        {GroupTitleMaker(\n          isKuralVisible,\n          () => {\n            setKuralVisible(!isKuralVisible);\n          },\n          'Kurals',\n          KURAL_IDS.length\n        )}\n        <Collapse\n          in={isKuralVisible}\n          style={{ paddingBottom: isKuralVisible ? 8 : 0 }}\n          className={classes.collapsableGroup}\n          timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard\n                      className={classes.kural}\n                      key={item.id}\n                      kural={item}\n                      onClick={onKuralSelected}\n                    />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        {GroupTitleMaker(\n          isChapterVisible,\n          () => {\n            setChapterVisible(!isChapterVisible);\n          },\n          'Chapters',\n          CHAPTER_IDS.length\n        )}\n        <Collapse\n          in={isChapterVisible}\n          style={{ paddingBottom: isChapterVisible ? 8 : 0 }}\n          className={classes.collapsableGroup}\n          timeout='auto'>\n          {CHAPTER_IDS.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={\n                CHAPTER_IDS.sort()\n                  .map((ch) => getChapter(ch))\n                  .filter((ch) => ch !== null) as BaseType[]\n              }\n              onItemSelected={onChapterSelected}\n            />\n          )}\n          {CHAPTER_IDS.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(0.5),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; */\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n      {/* <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype ListWithRouteViewerProps = RouteConfigComponentProps;\n\nexport const ListCategoryViewer: React.FC<ListWithRouteViewerProps> = ({\n  route,\n}: ListWithRouteViewerProps) => {\n  const classes = useStyles();\n  return <div className={classes.root}>{renderRoutes(route?.routes)}</div>;\n};\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n      cursor: 'pointer',\n    },\n    clearIcon: {\n      cursor: 'pointer',\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\n// TODO: AppBar & kuralSearch rerenders often e.g) even if there any changes in settigns page.\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const history = useHistory();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const isSearchRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: SEARCH_ROUTE })?.isExact ||\n    false;\n  const [focus, setFocus] = React.useState(isSearchRoute());\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  history.listen(({ pathname }) => {\n    if (pathname !== SEARCH_ROUTE) {\n      setKeyword('');\n      setFocus(false);\n    } else {\n      setFocus(true);\n    }\n  });\n  const onSearchBarFocus = (): void => {\n    if (history.location.pathname !== SEARCH_ROUTE) {\n      debug('route -> search');\n      history.push(SEARCH_ROUTE);\n    }\n  };\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon\n        onClick={() => {\n          inputRef.current?.querySelector('input')?.focus();\n        }}\n        className={clsx(classes.searchicon, 'search-icon')}\n      />\n      <InputBase\n        ref={inputRef}\n        className={`searchbar ${classes.input}`}\n        placeholder='Search 43, agara'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          onSearchBarFocus();\n          props.onSearchTap && props.onSearchTap();\n        }}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          className={classes.clearIcon}\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardBackspace, Person, Settings } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\n\nimport KuralSearch from '../kural/KuralSearch';\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'space-around',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  const history = useHistory();\n  const isHomeRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: '/' })?.isExact || false;\n  const renderLeftIcon = (): React.ReactElement => {\n    return !isHomeRoute() ? (\n      <IconButton className={classes.iconButton} onClick={history.goBack}>\n        <KeyboardBackspace color='primary' />\n      </IconButton>\n    ) : (\n      <Avatar className={classes.avatar}>\n        <Person />\n      </Avatar>\n    );\n  };\n\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {renderLeftIcon()}\n            <KuralSearch className={classes.searchbar} />\n            <div className={classes.actionsGroup}>\n              {props.actions}\n              <IconButton\n                className={classes.iconButton}\n                onClick={(): void => history.push('/settings')}>\n                <Settings color='primary' />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\nexport default MyAppBar;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  // {\n  //   icon: <SettingsIcon />,\n  //   route: '/settings',\n  //   label: 'Settings',\n  // },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      <MyAppBar />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setAllUserSelections, setUserSelection } from '../../../state/search';\nimport {\n  CATEGORY_COLORS,\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n} from './../../../lib/api';\nimport { AppState } from './../../../state';\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n}));\n\nexport const SearchChips: React.FC<SearchChipsProps> = (\n  props: SearchChipsProps\n) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            style={{\n              backgroundColor:\n                CATEGORY_COLORS[\n                  f.type === 'all' || f.type === 'detail' ? 'default' : f.type\n                ],\n            }}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport {\n  isResultOfType,\n  SearchResult,\n  CATEGORY_COLORS,\n  Category,\n  findCategoryRouteMapString,\n} from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state/reducers';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport { SearchChips } from './SearchChips';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n  searchItem: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    cursor: 'pointer',\n  },\n  searchItemAvatar: {\n    width: '2rem',\n    height: '2rem',\n    textAlign: 'center',\n    fontSize: '1rem',\n    marginRight: '0.5rem',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchResultItemProps = {\n  component?: React.ReactNode;\n  result: SearchResult;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  result,\n  label,\n  onClick,\n  component,\n}: SearchResultItemProps) => {\n  const classes = useStyles();\n  const innerContent = component ? component : <div>{result.item.value}</div>;\n  return (\n    <ListItem\n      key={`${label}${result.item.id}`}\n      onClick={onClick}\n      className={classes.searchItem}>\n      <Avatar\n        className={classes.searchItemAvatar}\n        style={{ backgroundColor: CATEGORY_COLORS[result.category] }}>\n        {label.charAt(0).toUpperCase()}\n      </Avatar>\n      {innerContent}\n    </ListItem>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const getOnClickRoute = React.useCallback(\n    (category: Category, id: number) => {\n      let route = ROUTE_CONSTANTS.LIST_CATEGORY;\n      if (INDEX_MAP) {\n        route += `/${findCategoryRouteMapString(INDEX_MAP, {\n          [category]: id,\n        })}`;\n      }\n      return route;\n    },\n    [INDEX_MAP]\n  );\n  const [navigateTo] = useNavigation();\n  const renderItem = (\n    item: SearchResult,\n    index: number\n  ): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <SearchResultItem\n          key={index}\n          result={item}\n          label='k'\n          onClick={navigateTo(getOnClickRoute('kural', item.item.id))}\n          component={\n            <KuralCard\n              componentType='span'\n              key={item.item.id}\n              kural={item.item}\n              className={classes.kuralSearchItem}\n            />\n          }\n        />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='ch'\n          onClick={navigateTo(getOnClickRoute('chapter', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='lit'\n          onClick={navigateTo(getOnClickRoute('literature', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='sec'\n          onClick={navigateTo(getOnClickRoute('section', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <SearchChips />\n      <List>{search.results.map((item, i) => renderItem(item, i))}</List>\n    </div>\n  );\n};\n\nexport default Search;\n","import * as React from 'react';\n\nimport { Slider, SliderTypeMap, withStyles } from '@material-ui/core';\nimport { DefaultComponentProps } from '@material-ui/core/OverridableComponent';\n\nexport type DiscreteSliderProps = Partial<DefaultComponentProps<SliderTypeMap>>;\n\nconst StyledSlider = withStyles({\n  root: {\n    height: 8,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    marginTop: '-7px',\n    backgroundColor: 'currentColor',\n    '&:focus, &:hover, &$active': {\n      boxShadow:\n        'rgba(136, 153, 166, 0.2) 0px 0px 7px, rgba(136, 153, 166, 0.15) 0px 1px 3px 1px',\n    },\n  },\n  active: {},\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n  mark: {\n    width: 16,\n    height: 16,\n    borderRadius: '50%',\n    marginLeft: '-6px',\n    opacity: 0.8,\n    marginTop: '-5px',\n    '& ::after': {\n      top: '-15px',\n      left: '-15px',\n      right: '-15px',\n      bottom: '-15px',\n      content: '\"',\n      position: 'absolute',\n      borderRadius: '50%',\n      border: '1px solid',\n    },\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\nexport const DiscreteSlider: React.FC<DiscreteSliderProps> = (props) => {\n  return (\n    <StyledSlider\n      aria-labelledby='discrete-slider'\n      valueLabelDisplay='auto'\n      {...props}\n    />\n  );\n};\n\nexport default DiscreteSlider;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  FONT_SIZE_MAP,\n  User,\n  FontSizeType,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { applyPreference, ANONYOMOUS_USER } from 'src/state/settings';\n\nimport { CommonComponentProps } from '../../components';\nimport { DiscreteSlider } from './../../components/common/DiscreteSlider';\n\nconst useStyles = makeStyles((theme) => ({\n  sliderWrapper: {\n    display: 'flex',\n    marginLeft: theme.spacing(3),\n    alignItems: 'center',\n  },\n  sliderRoot: {\n    width: '80%',\n  },\n}));\n\nexport interface FontSizePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const FontSizePicker: React.FC<FontSizePickerProps> = (\n  props: FontSizePickerProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const fontSize =\n    FONT_SIZE_MAP[\n      props.user.preference.fontSizeType ||\n        ANONYOMOUS_USER.preference.fontSizeType\n    ];\n  const marks = Object.entries(FONT_SIZE_MAP).map(([, v]) => ({\n    value: v,\n  }));\n  const onFontChange = (\n    _: React.ChangeEvent<unknown>,\n    value: number | number[]\n  ) => {\n    if (typeof value === 'number') {\n      const fontType = Object.keys(FONT_SIZE_MAP).find(\n        (type) => FONT_SIZE_MAP[type as FontSizeType] === value\n      );\n      const userPreference = {\n        ...props.user.preference,\n        fontSizeType: fontType!! as FontSizeType,\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <div className={clsx(`${props.className}-wrapper`, classes.sliderWrapper)}>\n      <DiscreteSlider\n        classes={{ root: classes.sliderRoot }}\n        {...props}\n        aria-label='font-size-picker'\n        value={fontSize}\n        valueLabelDisplay={'off'}\n        step={null}\n        marks={marks}\n        min={FONT_SIZE_MAP.TINY}\n        max={FONT_SIZE_MAP.BIG}\n        onChange={onFontChange}\n      />\n    </div>\n  );\n};\n","import React, { FC, PropsWithChildren } from 'react';\n\nimport {\n  Collapse,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { AnimatedExpandedIcon } from './../../components/common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  itemLabel: {\n    fontSize: '1em',\n  },\n  itemChild: {\n    padding: theme.spacing(1),\n  },\n  listItemIcon: {},\n}));\n\ntype RankTransliteratorListProps = PropsWithChildren<{\n  label: string;\n  className?: string;\n  isOpen?: boolean;\n  showExpandIcon?: boolean;\n}>;\n\nexport const SettingItem: FC<RankTransliteratorListProps> = ({\n  label,\n  className,\n  isOpen = false,\n  showExpandIcon = true,\n  children,\n}: RankTransliteratorListProps) => {\n  const classes = useStyles();\n  const [isItemExpanded, toggleItem] = React.useState(isOpen);\n  return (\n    <>\n      <ListItem\n        button\n        className={clsx(className, classes.root)}\n        onClick={(): void => toggleItem(!isItemExpanded)}>\n        <ListItemText\n          classes={{ primary: classes.itemLabel }}\n          primary={label}\n        />\n        {showExpandIcon && (\n          <ListItemIcon className={classes.listItemIcon}>\n            <AnimatedExpandedIcon isExpanded={isItemExpanded} />\n          </ListItemIcon>\n        )}\n      </ListItem>\n      <Collapse\n        classes={{ container: classes.itemChild }}\n        in={isItemExpanded}\n        timeout='auto'\n        unmountOnExit>\n        {children}\n      </Collapse>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, List } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport { FontSizePicker } from './FontSizePicker';\nimport { RankTransliteratorSetting } from './RankTransliteratorSetting';\nimport { SettingItem } from './SettingItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  fontSizePicker: {\n    // padding: theme.spacing(1),\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n  TRANSLITERATOR_PICK: 'Order Transliterator',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const user = useSelector((st: AppState) => st.user);\n  debug('renders Settings');\n  return (\n    <div className={props.className}>\n      <List>\n        <SettingItem label={SettingsLabel.FONT_SIZE}>\n          <FontSizePicker user={user} className={classes.fontSizePicker} />\n        </SettingItem>\n        <SettingItem label={SettingsLabel.TRANSLITERATOR_PICK}>\n          <RankTransliteratorSetting user={user} />\n        </SettingItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig, RouteConfigComponentProps } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport { isCategoryValid } from './lib/api';\nimport { CategoryViewerContainer } from './views/components/category-viewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport Home from './views/pages/home';\nimport { ListCategoryViewer } from './views/pages/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  LIST_CATEGORY: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListCategoryViewer,\n        routes: [\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST_CATEGORY}*`,\n            // eslint-disable-next-line react/display-name\n            render: ({ match }: RouteConfigComponentProps): React.ReactNode => {\n              const route = match.url.replace(ROUTE_CONSTANTS.LIST, '');\n              const ROUTE_REGEX = /^(\\/\\d+)?(\\/\\d+)?$/;\n              if (ROUTE_REGEX.test(route)) {\n                const [section, literature] = [\n                  route.replace(ROUTE_REGEX, '$1').replace('/', ''),\n                  route.replace(ROUTE_REGEX, '$2').replace('/', ''),\n                ];\n                if (\n                  (section === '' && literature === '') ||\n                  (section.length > 0 &&\n                    isCategoryValid('section', parseInt(section))) ||\n                  (literature.length > 0 &&\n                    isCategoryValid('literature', parseInt(literature)))\n                ) {\n                  return <CategoryViewerContainer />;\n                }\n              }\n              return <Redirect to={`${ROUTE_CONSTANTS.LIST}/1/1/1`} />;\n            },\n          },\n        ],\n      },\n\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => (\n          <Redirect to={ROUTE_CONSTANTS.ROOT} />\n        ),\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { FONT_SIZE_MAP } from './lib/api';\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div\n      className={classes.root}\n      style={{\n        fontSize: FONT_SIZE_MAP[user.preference.fontSizeType],\n      }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  user: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","export type IndexMapType = {\n  section: {\n    [key: number]: {\n      litIndex: [number, number];\n      chapIndex: [number, number];\n    };\n  };\n  litChapMap: { [key: number]: [number, number] };\n};\n\nexport type Transliterator = {\n  id: number;\n  name: string;\n  lang: string;\n  rank?: number;\n};\n\ntype BaseType = {\n  value: string;\n  id: number;\n};\n\ntype Kural = BaseType;\ntype Section = BaseType;\ntype Literature = BaseType;\ntype Chapter = BaseType;\n\ntype Category = 'section' | 'chapter' | 'literature' | 'kural';\ntype RootCategory = Exclude<Category, 'kural'>;\ntype CategoryBaseTypeMap = Record<Category, BaseType>;\n\ntype KuralMixin = {\n  kural: Kural;\n  section: Section;\n  literature: Literature;\n  chapter: Chapter;\n};\n\ntype SearchResult = {\n  type: SearchTypes;\n  item: BaseType;\n  category: Category;\n  keyword: string;\n};\n\ntype SectionSearchType = 'BySectionNo' | 'BySectionContains';\ntype LiteratureSearchType = 'ByLiteratureNo' | 'ByLiteratureContains';\ntype ChapterSearchType = 'ByChapterNo' | 'ByChapterContains';\ntype KuralSearchType =\n  | 'ByKuralNo'\n  | 'ByKuralContains'\n  | 'ByKuralStartsWith'\n  | 'ByKuralEndsWith';\ntype KuralDetailSearchType = 'ByKuralDetailContains';\ntype SearchTypes =\n  | KuralSearchType\n  | SectionSearchType\n  | LiteratureSearchType\n  | ChapterSearchType\n  | KuralDetailSearchType;\n\nexport type KuralDetail = Record<string, string>;\nexport type {\n  BaseType,\n  Kural,\n  Section,\n  Literature,\n  Chapter,\n  KuralMixin,\n  Category,\n  RootCategory,\n  CategoryBaseTypeMap,\n  SearchResult,\n  SearchTypes,\n};\n\nexport type SearchCategoryTypes = Category | 'detail' | 'all';\n\nexport enum FontSizeType {\n  TINY = 'TINY',\n  SMALL = 'SMALL',\n  MEDIUM = 'MEDIUM',\n  LARGE = 'LARGE',\n  BIG = 'BIG',\n}\n\nexport type UserPreference = {\n  language: {\n    primary: string;\n    secondary: string[];\n  };\n  fontSizeType: FontSizeType;\n  transilterators?: number[];\n};\nexport type User = {\n  id: string;\n  favorites: Record<Exclude<Category, 'section' | 'literature'>, number[]>;\n  preference: UserPreference;\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\nimport { Category } from './types';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n\nexport const CATEGORY_COLORS: Record<Category | 'default', string> = {\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n  default: 'blueviolet',\n};\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  FontSizeType,\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n\nexport const FONT_SIZE_MAP: Record<FontSizeType, number> = {\n  BIG: 24,\n  LARGE: 21,\n  MEDIUM: 18,\n  SMALL: 15,\n  TINY: 12,\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n  BaseType,\n} from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralByIds = async (\n  firestore: ExtendedFirestoreInstance,\n  ids: number[],\n  lang: string\n): Promise<BaseType[]> => {\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await firestoreGetCacheFirst(\n    kuralsRef.where(\n      firebase.firestore.FieldPath.documentId(),\n      'in',\n      ids.map((id) => id.toString())\n    )\n  );\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return getKuralByIds(firestore, kuralRangeIds, lang);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  // TODO: get only transliterators of user prefered language\n  const transliteratorSnapRef = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n  );\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  // TODO: update only if user not an anonymous user\n  await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .doc(`${user.id}`)\n    .set(user);\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { getCategoryIds } from './category';\nimport { findChapterNoFromKuralNo } from './common';\nimport { Category, IndexMapType, RootCategory } from './types';\n\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\nexport type CategoryIdMapPartial = Partial<Record<Category, number>>;\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\nexport const findCategoryRouteMap = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): CategoryIdMapPartial => {\n  const { kural, chapter, literature, section } = filter;\n  const KURALS_CHAPTER = kural ? findChapterNoFromKuralNo(kural) : chapter;\n  return {\n    ...rootCategoryFinder(INDEX_MAP, {\n      chapter: KURALS_CHAPTER,\n      literature,\n      section,\n    }),\n    ...(kural ? { kural } : {}),\n  };\n};\n\nexport const convertCategoryRouteMapToString = (\n  filter: CategoryIdMapPartial\n): string => {\n  return (['section', 'literature', 'chapter', 'kural'] as Category[])\n    .filter((k) => filter[k as Category] !== undefined)\n    .map((k) => filter[k as Category])\n    .join('/');\n};\n\nexport const findCategoryRouteMapString = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): string => {\n  return convertCategoryRouteMapToString(\n    findCategoryRouteMap(INDEX_MAP, filter)\n  );\n};\n","import { Transliterator, User } from './types';\n\nexport const getUserPreferedLanguages = (user: User): string[] => {\n  const { primary, secondary } = user.preference.language;\n  return [primary, ...secondary];\n};\n\nexport const findTransliteratorsOfLanguage = (\n  language: string[],\n  tMap: Record<number, Transliterator>\n): Record<number, Transliterator> => {\n  if (!language.length) {\n    return tMap;\n  }\n  return Object.entries(tMap)\n    .filter(([id, transliterator]) =>\n      language.some((lang) => lang === transliterator.lang)\n    )\n    .reduce((state, [key, value]) => ({ ...state, [key]: value }), {});\n};\n\nexport type UserTransliteratorMap = [Transliterator[], Transliterator[]];\n\ntype getUserTransliteratorsType = (\n  u: User,\n  tMap: Record<number, Transliterator>\n) => UserTransliteratorMap;\nexport const getUserTransliterators: getUserTransliteratorsType = (\n  user,\n  transliteratorsMap\n) => {\n  const result: UserTransliteratorMap = [[], []];\n  const userLangs = getUserPreferedLanguages(user);\n  const userTMap = findTransliteratorsOfLanguage(userLangs, transliteratorsMap);\n  const userLikedTransliterators = user.preference?.transilterators || [];\n  if (userLikedTransliterators.length) {\n    const allowedTransliteratorIds = Object.keys(userTMap).map((t) =>\n      parseInt(t)\n    );\n    result[0] = userLikedTransliterators\n      .filter((t) => allowedTransliteratorIds.includes(t))\n      .map((t) => userTMap[t]);\n    result[1] = allowedTransliteratorIds\n      .filter((t) => !userLikedTransliterators.includes(t))\n      .map((t) => userTMap[t]);\n  } else {\n    result[0] = Object.values(userTMap);\n  }\n  return result;\n};\n","import { Category, SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport const ITEMS_COUNT_MAP: Record<Category, number> = {\n  kural: 1330,\n  chapter: 133,\n  literature: 13,\n  section: 3,\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\nexport * from './route';\nexport * from './user';\n"],"sourceRoot":""}