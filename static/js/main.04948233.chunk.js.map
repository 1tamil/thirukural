{"version":3,"sources":["state/kuralIndex/index.ts","lib/api/category.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","lib/api/firestore.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","lib/hooks/useCategory.tsx","lib/hooks/useFavouriteDetector.tsx","views/components/common/ListView.tsx","views/components/kural/ChapterViewer.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/components/kural/LiteratureViewer.tsx","views/components/kural/SectionViewer.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/home.tsx","views/components/kural/RouteViewer.tsx","lib/hooks/useLongPress.tsx","views/pages/list/list.tsx","views/components/kural/KuralSearch.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","state/title/index.ts","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","views/pages/search/search.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx","state/settings/index.ts","lib/api/index.ts"],"names":["getLiteratureNoFromChapterNo","INDEX_MAP","chapterNo","isCategoryValidErr","Number","Object","keys","litChapMap","find","litId","isItemInRange","getSectionNoByLiteratureNo","literatureNo","section","map","secId","litIndex","getCategoryIds","category","categoryId","result","literature","chapter","getKuralIndex","firestore","a","firestoreGetCacheFirst","collection","COLLECTION_NAME_MAP","indexSnapshot","getDocData","key","docs","doc","id","data","getAllBaseItems","lang","collectionKey","sectionSnapshot","value","getAllSections","getAllChapter","getAllLiterature","findChapterNoFromKuralNo","kuralNo","Math","ceil","isResultOfType","type","resType","startsWith","getKural","kId","KURAL","get","kuralSnapshotRef","getKuralDetail","KURAL_DETAIL","snapshot","getKuralByIds","ids","kuralsRef","where","firebase","FieldPath","documentId","toString","sort","b","getKuralsOfChapter","startKuralNo","kuralRangeIds","Array","from","i","getAllTransliterators","TRANSLITERATOR","transliteratorSnapRef","getUserPreferences","userId","USER","limit","empty","Error","userDocRef","updateUserPreference","user","set","item","range","fillRange","out","push","isCategoryValid","getItemByPosition","direction","getSectionPrev","getLiteraturePrev","getChapterPrev","kural","getKuralPrev","toBaseTypeMap","list","reduce","oldVal","defaultState","transliterator","index","KuralIndexReducer","state","action","payload","thunkInitKuralIndexMapAndUserPref","dispatch","primary","preference","language","kuralIndex","sectionMap","literatureMap","chapterMap","transliteratorMap","t1","setUser","ref","source","log","debug","useNavigation","history","useHistory","route","useSubCategory","resultCategory","useFirestore","React","useState","setResult","PRIMARY_LANG","useSelector","st","preferences","KURAL_INDEX","kuralIndexMap","useEffect","length","c","k","CHIP_COLORS","getRoutes","categories","favourites","routes","color","isFavourite","some","ch","useRoute","filter","inputFilter","setInputFilter","useDispatch","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","options","rootCategoryFinder","sectionRoute","matchPath","literatureRoute","chapterRoute","kuralRoute","newFilter","params","undefined","listen","getRouteValue","useCallback","output","input","favorites","itemIndex","indexOf","splice","updatedUserPref","updateUserFSAsync","status","keyword","results","filters","userSelections","detail","useKuralSearch","setSearchKeyword","searchTypes","types","isInteger","parseInt","searchNumber","e","findSuitableSearchTypes","setSearchStatus","useCategory","navigateTo","makeStyles","theme","favStyle","useStyles","root","listItem","cursor","display","gridTemplateColumns","idWrap","alignItems","palette","main","minWidth","opacity","textAlign","position","left","labelWrap","fontSize","paddingLeft","spacing","ListView","props","classes","List","className","items","ListItem","divider","onClick","onItemSelected","ChapterViewer","useParams","onItemSelection","flexDirection","breakpoints","up","badgeContainer","background","height","lineHeight","borderRadius","justifyContent","padding","kuralWrapper","width","KuralCard","clsx","component","componentType","showBadge","dangerouslySetInnerHTML","__html","replace","transliteratorList","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","transliterators","setKural","kuralDetail","setKuralDetail","values","trans","t2","rank","t1r","t2r","useKuralDetail","transliteratorId","name","Chip","size","label","VirtualizeSwipeableViews","virtualize","SwipeableViews","KuralDetailViewer","enableMouseEvents","overscanSlideBefore","overscanSlideAfter","onChangeIndex","indexLatest","slideRenderer","nextIndex","mod","kuralCard","ListKuralCard","openKuralDetail","kurals","ListKuralsOfChapter","LiteratureViewer","SectionViewer","sections","chapFavorites","FavoritesViewer","itemNo","useBaseItem","getChapter","KURAL_IDS","CHAPTER_IDS","setKurals","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","then","chapterKuralMap","Map","forEach","it","chap","has","noRecordsFound","disablePadding","selected","button","ListItemText","Collapse","in","timeout","chapterInfo","ListSubheader","disableSticky","marginTop","favoriteCard","margin","Home","Card","variant","CardHeader","title","CardContent","routeContainer","flexWrap","chipRoot","maxWidth","favoriteIcon","RouteChip","onLongPress","longPressEventHandlers","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","icon","style","backgroundColor","RouteViewer","toggleRouteFavourite","renderRight","ListPage","Container","disableGutters","renderRoutes","SEARCH_ROUTE","createStyles","border","borderColor","fade","grey","searchicon","flex","light","KuralSearch","setSearchKey","debounced","useDebouncedCallback","setKeyword","path","isExact","isSearchRoute","focus","setFocus","InputBase","placeholder","inputProps","onChange","text","target","onFocus","onSearchTap","Fade","trim","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","toolbar","avatar","marginLeft","actionsGroup","searchbar","marginRight","flexGrow","iconButton","MyAppBar","AppBar","elevation","Toolbar","isHomeRoute","Avatar","alt","src","IconButton","goBack","KeyboardBackspace","actions","defalutTitle","appBar","bottom","top","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","currentRoute","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","setRoute","Main","searchWrapper","searchFilter","kuralSearchItem","SearchChips","setFilters","search","hasStartsWith","f","filterOptions","SearchCategoryLabelMap","all","isShow","Set","r","isSelected","selection","SearchResultItem","Search","renderItem","itemText","formControl","SettingsLabel","ROUTE_CONSTANTS","exact","fontSizeOptions","baseSize","count","offset","getFontSizeOptions","DEFAULT","FormControl","Select","applyPreference","assign","v","MenuItem","to","App","settings","rootReducers","combineReducers","concat","PreferenceReducer","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","render","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","pref","secondary","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER"],"mappings":"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","file":"static/js/main.04948233.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n  BaseType,\n} from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralByIds = async (\n  firestore: ExtendedFirestoreInstance,\n  ids: number[],\n  lang: string\n): Promise<BaseType[]> => {\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await firestoreGetCacheFirst(\n    kuralsRef.where(\n      firebase.firestore.FieldPath.documentId(),\n      'in',\n      ids.map((id) => id.toString())\n    )\n  );\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return getKuralByIds(firestore, kuralRangeIds, lang);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  // TODO: get only transliterators of user prefered language\n  const transliteratorSnapRef = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n  );\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { firestoreGetCacheFirst } from './firestore';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestoreGetCacheFirst(\n    firestore\n      .collection(COLLECTION_NAME_MAP.USER)\n      .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n      .limit(1)\n  );\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .doc(`${user.id}`)\n    .set(user);\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category: RootCategory,\n  id: number,\n  resultCategory: Category\n) => BaseType[];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (category === resultCategory) {\n    throw new Error('Bad input');\n  }\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primary: PRIMARY_LANG } = useSelector(\n    (st: AppState) => st.preferences.preference.language\n  );\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n  isCategoryValidErr(category, id);\n\n  React.useEffect(() => {\n    if (!result.length) {\n      if (category === 'chapter' && resultCategory === 'kural') {\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, PRIMARY_LANG));\n        })();\n      } else {\n        const { literature, chapter, index: INDEX_MAP } = KURAL_INDEX;\n        if (INDEX_MAP) {\n          if (category === 'literature' && resultCategory === 'chapter') {\n            setResult(\n              fillRange(INDEX_MAP.litChapMap[id]).map((c) => chapter[c])\n            );\n          } else if (\n            category === 'section' &&\n            resultCategory === 'literature'\n          ) {\n            setResult(\n              fillRange(INDEX_MAP!!.section[id].litIndex).map(\n                (k) => literature[k]\n              )\n            );\n          } else {\n            throw new Error('category not supported');\n          }\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    firestore,\n    id,\n    PRIMARY_LANG,\n    KURAL_INDEX,\n  ]);\n  return result;\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  User,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst CHIP_COLORS = {\n  top: 'blueviolet',\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n};\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: Record<'kural' | 'chapter', number[]>\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: '/list/section',\n      color: CHIP_COLORS.top,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `/list/${categories.section.id}/literature`,\n      color: CHIP_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `/list/${categories.literature.id}/chapter`,\n      color: CHIP_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: favourites.chapter.some(\n        (ch) => ch === categories.chapter?.id\n      ),\n      type: 'chapter',\n      route: `/list/${categories.chapter.id}/kural`,\n      color: CHIP_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: favourites.kural.some((k) => k === categories.kural?.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `/list/kural/${categories.kural.id}`,\n      color: CHIP_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.preferences);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(\n      pathname,\n      '/list/:section/literature'\n    );\n    const literatureRoute = matchPath<{ literature: string }>(\n      pathname,\n      '/list/:literature/chapter'\n    );\n    const chapterRoute = matchPath<{ chapter: string }>(\n      pathname,\n      '/list/:chapter/kural'\n    );\n    const kuralRoute = matchPath<{ kural: string }>(\n      pathname,\n      '/list/kural/:kural'\n    );\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    log.debug('filters', newFilter);\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    log.debug('pathname', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites: number[];\n      if (shouldAddToList) {\n        favorites = [...user.favorites[route.type], route.id];\n      } else {\n        const itemIndex = user.favorites[route.type].indexOf(route.id);\n        favorites = user.favorites[route.type];\n        favorites.splice(itemIndex, 1);\n      }\n      const updatedUserPref: User = {\n        ...user,\n        favorites: {\n          ...user.favorites,\n          [route.type]: favorites,\n        },\n      };\n      dispatch(updateUserFSAsync(firestore, updatedUserPref));\n    }\n  };\n  // TODO: direct access of http://localhost:3000/#/list/kural/631 doesn't show routes\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return { ...state, results: [...state.results, ...action.payload] };\n  } else if (action.type === 'SetSearchResults') {\n    return { ...state, results: action.payload as SearchResult[] };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import { useDispatch } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { SearchTypes } from 'src/lib/api';\nimport {\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nconst addResults = (\n  searchTypes: SearchTypes[],\n  keyword: string,\n  dispatch: Dispatch<any>\n): void => {\n  // searchTypes.forEach((type) => {\n  //   const items: SearchResult[] = [];\n  //   switch (type) {\n  //     case 'ByKuralNo':\n  //       items.push({ type, keyword, item: getKural(parseInt(keyword)) });\n  //       break;\n  //     case 'ByChapterNo':\n  //       items.push({ type, keyword, item: getChapter(parseInt(keyword)) });\n  //       break;\n  //     case 'ByLiteratureNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getLiterature(parseInt(keyword)) });\n  //       break;\n  //     case 'BySectionNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getSection(parseInt(keyword)) });\n  //       break;\n  //   }\n  //   if (items.length > 0) {\n  //     dispatch(appendSearchResults(items));\n  //   }\n  // });\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword, dispatch);\n  };\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","import { isCategoryValid, BaseType, Category } from 'src/lib/api';\n\nimport { useNavigation } from './useNavigation';\n\ntype SubCategoryListType = Exclude<Category, 'chapter' | 'kural'> | 'top';\n\ntype useCategoryType = (\n  type: SubCategoryListType,\n  key: number\n) => (item: BaseType) => void;\nexport const useCategory: useCategoryType = (type, key) => {\n  const [navigateTo] = useNavigation();\n  if (type !== 'top') {\n    isCategoryValid(type, key);\n  }\n  const onItemSelected = (item: BaseType): void => {\n    switch (type) {\n      case 'top':\n        navigateTo(`/list/${item.id}/literature`)();\n        break;\n      case 'section':\n        navigateTo(`/list/${item.id}/chapter`)();\n        break;\n      case 'literature':\n        navigateTo(`/list/${item.id}/kural`)();\n        break;\n    }\n  };\n  return onItemSelected;\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { Category } from 'src/lib/api';\n\nimport { AppState } from '../../state/reducers';\nimport FavouriteToggle from '../../views/components/common/FavouriteToggle';\n\nconst useStyles = makeStyles((theme) => ({\n  favStyle: {\n    color: 'rgba(215, 22, 64, 0.8)',\n  },\n}));\n\nconst isFavourite = (\n  type: 'kural' | 'chapter',\n  itemNo: number,\n  items: number[]\n): boolean => {\n  // TODO:\n  return true;\n};\ntype ToggleFavourite = (favourite: boolean) => void;\ntype useKuralHeaderType = (\n  type: Exclude<Category, 'section' | 'literature'>,\n  path: string\n) => React.ReactNode;\nexport const useFavouriteDetector: useKuralHeaderType = (type, path) => {\n  const classes = useStyles();\n  const { [type]: FAVOURITE_ITEMS } = useSelector(\n    (st: AppState) => st.preferences.favorites\n  );\n  const { pathname } = useLocation();\n  const isRoute = matchPath<Record<string, string>>(pathname, path);\n  let element: React.ReactNode = null;\n  const setFavourite: ToggleFavourite = (flag: boolean) => {\n    // TODO:\n  };\n  if (isRoute?.isExact) {\n    element = (\n      <FavouriteToggle\n        className={classes.favStyle}\n        active={isFavourite(\n          type,\n          parseInt(isRoute.params[type]),\n          FAVOURITE_ITEMS\n        )}\n        handler={(isActive: boolean): Promise<boolean> => {\n          setFavourite(isActive);\n          return Promise.resolve(true);\n        }}\n      />\n    );\n  }\n  return element;\n};\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={true}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useCategory, useSubCategory } from '../../../lib/hooks';\nimport ListView from '../common/ListView';\n\ntype ChapterViewerProps = {\n  className?: string;\n};\n\nconst ChapterViewer: React.FC<ChapterViewerProps> = (\n  props: ChapterViewerProps\n) => {\n  const { literature } = useParams<{ literature: string }>();\n  const items = useSubCategory('literature', Number(literature), 'chapter');\n  const onItemSelection = useCategory('literature', Number(literature));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default ChapterViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    padding: theme.spacing(1),\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const {\n    preferences: {\n      preference: {\n        language: { primary },\n      },\n    },\n    kuralIndexMap: { transliterator: transliterators },\n  } = useSelector((st: AppState) => st);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, primary));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, primary]);\n  const filteredTransliteratorMap = Object.values(transliterators)\n    .filter((trans) => trans.lang === primary)\n    .sort((t1, t2) => {\n      const [t1r, t2r] = [t1.rank, t2.rank];\n      return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n    });\n  return [kural, kuralDetail, filteredTransliteratorMap];\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { mod } from 'react-swipeable-views-core';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition, isCategoryValid } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralDetail from './KuralDetail';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const [navigateTo] = useNavigation();\n  const params = useParams<{ kural: string }>();\n  const kuralNo = parseInt(params.kural);\n  return (\n    <>\n      {/* <KuralDetail kural={kuralNo} /> */}\n      <VirtualizeSwipeableViews\n        enableMouseEvents\n        overscanSlideBefore={kuralNo === 1 ? 0 : 1}\n        overscanSlideAfter={kuralNo === 1330 ? 0 : 1}\n        index={kuralNo - 1}\n        onChangeIndex={(index, indexLatest): void => {\n          navigateTo(\n            `/list/kural/${getItemByPosition(\n              'kural',\n              index - indexLatest < 0 ? 'PREV' : 'NEXT',\n              kuralNo\n            )}`\n          )();\n        }}\n        slideRenderer={({ key, index }): React.ReactNode => {\n          const nextIndex = mod(index, 1330) + 1;\n          // TODO: 1000 above requests firing when loading 1329th kural detail\n          // return null;\n          return isCategoryValid('kural', nextIndex) ? (\n            <KuralDetail key={key} kural={nextIndex} />\n          ) : null;\n        }}\n      />\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(`/list/kural/${kural.id}`)();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={k.id}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const kurals = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { mod } from 'react-swipeable-views-core';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition, isCategoryValid } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const { chapter } = useParams<{ chapter: string }>();\n  const chapterNo = Number(chapter);\n  const [navigateTo] = useNavigation();\n  return (\n    <div className={props.className}>\n      <VirtualizeSwipeableViews\n        enableMouseEvents\n        overscanSlideBefore={chapterNo === 1 ? 0 : 1}\n        overscanSlideAfter={chapterNo === 133 ? 0 : 1}\n        index={chapterNo - 1}\n        onChangeIndex={(index, indexLatest): void => {\n          const chap = parseInt(chapter);\n          navigateTo(\n            `/list/${getItemByPosition(\n              'chapter',\n              index - indexLatest < 0 ? 'PREV' : 'NEXT',\n              chap\n            )}/kural`\n          )();\n        }}\n        slideRenderer={({ key, index }): React.ReactNode => {\n          const nextIndex = mod(index, 133) + 1;\n          return isCategoryValid('chapter', nextIndex) ? (\n            <ListKuralsOfChapter key={key} chapterNo={nextIndex} />\n          ) : null;\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useCategory, useSubCategory } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\n\ntype LiteratureViewerProps = {\n  className?: string;\n};\n\nconst LiteratureViewer: React.FC<LiteratureViewerProps> = (\n  props: LiteratureViewerProps\n) => {\n  const { section } = useParams<{ section: string }>();\n  const items = useSubCategory('section', Number(section), 'literature');\n  const onItemSelection = useCategory('section', Number(section));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default LiteratureViewer;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport ListView from './../common/ListView';\n\ntype SectionViewerProps = {\n  className?: string;\n};\n\nconst SectionViewer: React.FC<SectionViewerProps> = (\n  props: SectionViewerProps\n) => {\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [navigateTo] = useNavigation();\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={Object.values(sections)}\n        onItemSelected={(item): void => {\n          navigateTo(`/list/${item.id}/literature`)();\n        }}\n      />\n    </>\n  );\n};\n\nexport default SectionViewer;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { findChapterNoFromKuralNo, getKuralByIds } from 'src/lib/api';\nimport { Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  list: {\n    '& .list-group': {},\n    '& .sub-list': {\n      // paddingTop: 16,\n      '& li:last-child': {\n        borderBottom: 'unset',\n        marginBottom: 'unset',\n      },\n    },\n    '& .sub-header': {\n      textAlign: 'left',\n      // lineHeight: '30px',\n      color: 'brown',\n    },\n  },\n  chapFavorites: {\n    paddingBottom: 0,\n    '& li:last-child': {\n      borderBottom: 'unset',\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const firestore = useFirestore();\n  const {\n    favorites: { kural: KURAL_IDS, chapter: CHAPTER_IDS },\n    preference,\n  } = useSelector((st: AppState) => st.preferences);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  const onChapterSelected = (item: BaseType): void => {\n    navigateTo(`/list/${item.id}/kural`)();\n  };\n  React.useEffect(() => {\n    if (KURAL_IDS.length > 0) {\n      getKuralByIds(firestore, KURAL_IDS, preference.language.primary).then(\n        (kurals) => {\n          setKurals(kurals);\n        }\n      );\n    }\n  }, [firestore, KURAL_IDS, preference.language.primary]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        <ListItem\n          selected={isKuralVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setKuralVisible(!isKuralVisible);\n          }}>\n          <ListItemText primary='Kurals' />\n          {isKuralVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isKuralVisible} timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard key={item.id} kural={item} />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        <ListItem\n          selected={isChapterVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setChapterVisible(!isChapterVisible);\n          }}>\n          <ListItemText primary='Chapters' />\n          {isChapterVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isChapterVisible} timeout='auto'>\n          {CHAPTER_IDS.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={\n                CHAPTER_IDS.map((ch) => getChapter(ch)).filter(\n                  (ch) => ch !== null\n                ) as BaseType[]\n              }\n              onItemSelected={(item: BaseType): void => onChapterSelected(item)}\n            />\n          )}\n          {CHAPTER_IDS.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; */\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n      {/* <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n  favoriteIcon: {\n    width: '1rem',\n    height: '1rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { renderRoutes } from 'react-router-config';\nimport { useFavouriteDetector } from 'src/lib/hooks';\nimport RouteViewer from 'src/views/components/kural/RouteViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ListPage: React.FC<any> = (props: any) => {\n  const classes = useStyles();\n  // const chapterFavNode = useFavouriteDetector(\n  //   'chapter',\n  //   '/list/:chapter/kural'\n  // );\n  // const kuralFavNode = useFavouriteDetector('kural', '/list/kural/:kural');\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <div className={classes.root}>{renderRoutes(props.route.routes)}</div>\n    </>\n  );\n};\n\nexport default ListPage;\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const history = useHistory();\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const isSearchRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: SEARCH_ROUTE })?.isExact ||\n    false;\n  const [focus, setFocus] = React.useState(isSearchRoute());\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  history.listen(({ pathname }) => {\n    if (pathname !== SEARCH_ROUTE) {\n      setKeyword('');\n      setFocus(false);\n    } else {\n      setFocus(true);\n    }\n  });\n  const onSearchBarFocus = (): void => {\n    if (history.location.pathname !== SEARCH_ROUTE) {\n      debug('route -> search');\n      history.push(SEARCH_ROUTE);\n    }\n  };\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon className={clsx(classes.searchicon, 'search-icon')} />\n      <InputBase\n        className={`searchbar ${classes.input}`}\n        placeholder='Search Kural'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          onSearchBarFocus();\n          props.onSearchTap && props.onSearchTap();\n        }}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardBackspace, Settings } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\n\nimport KuralSearch from '../kural/KuralSearch';\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'space-around',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  const history = useHistory();\n  const isHomeRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: '/' })?.isExact || false;\n  const renderLeftIcon = (): React.ReactElement => {\n    return !isHomeRoute() ? (\n      <IconButton className={classes.iconButton} onClick={history.goBack}>\n        <KeyboardBackspace color='primary' />\n      </IconButton>\n    ) : (\n      <Avatar\n        className={classes.avatar}\n        alt='Anonymous'\n        src='/static/images/avatar/1.jpg'\n      />\n    );\n  };\n\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {renderLeftIcon()}\n            <KuralSearch className={classes.searchbar} />\n            <div className={classes.actionsGroup}>\n              {props.actions}\n              <IconButton\n                className={classes.iconButton}\n                onClick={(): void => history.push('/settings')}>\n                <Settings color='primary' />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default MyAppBar;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  // {\n  //   icon: <SearchIcon />,\n  //   route: '/search',\n  //   label: 'Search',\n  // },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  // {\n  //   icon: <SettingsIcon />,\n  //   route: '/settings',\n  //   label: 'Settings',\n  // },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      <MyAppBar />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Chip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n  isResultOfType,\n  SearchResult,\n  BaseType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state/reducers';\nimport { setUserSelection, setAllUserSelections } from 'src/state/search';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  searchWrapper: {\n    textAlign: 'center',\n  },\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst SearchChips: React.FC<SearchChipsProps> = (props: SearchChipsProps) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n\ntype SearchResultItemProps = {\n  item: BaseType;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  item,\n  label,\n  onClick,\n}: SearchResultItemProps) => {\n  return (\n    <div key={item.id} onClick={onClick}>\n      <div>{item.value}</div>\n    </div>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n\n  const renderItem = (item: SearchResult): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <KuralCard\n          key={item.item.id}\n          kural={item.item}\n          className={classes.kuralSearchItem}\n        />\n        // <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    // TODO:\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return <SearchResultItem item={item.item} label='' />;\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return <SearchResultItem item={item.item} label='' />;\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return <SearchResultItem item={item.item} label='' />;\n    }\n    // if (isResultOfType(item, 'detail') && search.userSelections.detail) {\n    //   return <>detail: {item.item.value}</>;\n    // }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <SearchChips />\n      <List>\n        {search.results.map((item, i) => (\n          <ListItem key={i} divider={true}>\n            {renderItem(item)}\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Select,\n  FormControl,\n  MenuItem,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport { applyPreference, DEFAULT } from '../../../state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {\n    fontSize: '1em',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst getFontSizeOptions = (\n  baseSize: number,\n  count: number,\n  offset = 2\n): number[] => {\n  const result = [];\n  let size = baseSize;\n  while (count > 0) {\n    result.push(size);\n    size = size + offset;\n    count--;\n  }\n  return result;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { preference } = useSelector((st: AppState) => st.preferences);\n  const fontSizeOptions: Array<number> = getFontSizeOptions(\n    DEFAULT.preference.fontSize - 4,\n    10\n  );\n  const onFontChange = (fontSize: number): void => {\n    dispatch(applyPreference(Object.assign(preference, { fontSize })));\n  };\n\n  return (\n    <div className={props.className}>\n      <List>\n        <ListItem className={classes.item}>\n          <ListItemText\n            classes={{ primary: classes.itemText }}\n            primary={SettingsLabel.FONT_SIZE}\n          />\n          <FormControl className={classes.formControl}>\n            <Select\n              value={preference.fontSize}\n              onChange={(e): void => onFontChange(e.target.value as number)}>\n              {fontSizeOptions.map((v) => (\n                <MenuItem key={v} value={v}>\n                  {v}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport ChapterViewer from './views/components/kural/ChapterViewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport LiteratureViewer from './views/components/kural/LiteratureViewer';\nimport SectionViewer from './views/components/kural/SectionViewer';\nimport Home from './views/pages/home/home';\nimport ListPage from './views/pages/list/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      /* {\n        path: ROUTE_CONSTANTS.FAVOURITE,\n        component: FavoritesViewer,\n        exact: true,\n      }, */\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListPage,\n        routes: [\n          {\n            path: '/list/section',\n            component: SectionViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:section/literature',\n            component: LiteratureViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:literature/chapter',\n            component: ChapterViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:chapter/kural',\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: '/list/kural/:kural',\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: '/list*',\n            // eslint-disable-next-line react/display-name\n            component: (): React.ReactElement => (\n              <Redirect to='/list/1/kural' />\n            ),\n            exact: true,\n          },\n        ],\n      },\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => <Redirect to='/' />,\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const settings = useSelector((st: AppState) => st.preferences);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div\n      className={classes.root}\n      style={{ fontSize: settings.preference.fontSize }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  preferences: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport { updateUserPreference, User, UserPreference } from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const DEFAULT: User = {\n  id: 'anonymous',\n  favorites: {\n    kural: [],\n    chapter: [],\n  },\n  preference: {\n    language: {\n      primary: 'TA',\n      secondary: [],\n    },\n    fontSize: 16,\n  },\n};\nexport const PreferenceReducer = (\n  settings = DEFAULT,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n","import { SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\n"],"sourceRoot":""}