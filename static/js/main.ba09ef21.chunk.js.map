{"version":3,"sources":["state/title/index.ts","views/components/common/AnimatedExpandedIcon.tsx","state/kuralIndex/index.ts","views/components/kural/KuralCard.tsx","state/settings/index.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","views/pages/settings/RankTransliteratorSetting.tsx","views/pages/settings/SettingsPickerContainer.tsx","views/pages/settings/BackgroundPicker.tsx","views/pages/settings/ColorPicker.tsx","views/components/common/DiscreteSlider.tsx","views/pages/settings/FontSizePicker.tsx","views/pages/settings/LanguagePicker.tsx","views/pages/settings/SettingItem.tsx","views/pages/settings/index.tsx","lib/hooks/useKuralDetail.tsx","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useBaseItem.tsx","lib/hooks/useRoute.tsx","lib/hooks/useKuralSearch.ts","lib/hooks/useLongPress.tsx","lib/hooks/useIdbKeyStore.tsx","lib/hooks/useUserPreference.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","views/components/common/ListView.tsx","views/components/favourite-viewer/chapter-fav-list.tsx","views/components/favourite-viewer/kural-fav-list.tsx","views/components/favourite-viewer/index.tsx","views/pages/home/index.tsx","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","reportWebVitals.ts","serviceWorkerRegistration.ts","views/styles/theme.ts","index.tsx","state/search/index.ts","lib/api/types.ts","lib/api/category.ts","lib/api/firestore.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","lib/api/route.ts","lib/api/user.ts","lib/api/index.ts"],"names":["setTitle","title","type","payload","setDefaultTitle","defalutTitle","TitleReducer","action","concat","useStyles","makeStyles","theme","icon","color","transform","transition","AnimatedExpandedIcon","isExpanded","className","style","classes","clsx","listItem","display","flexDirection","userSelect","alignItems","breakpoints","up","cursor","badgeContainer","background","fontWeight","height","fontSize","lineHeight","borderRadius","justifyContent","padding","minWidth","kuralWrapper","width","KuralCard","props","kural","value","root","component","componentType","showBadge","id","onClick","dangerouslySetInnerHTML","__html","replace","updateUserFSAsync","firestore","user","dispatch","a","setUser","updateUserPreference","applyPreference","pref","DEFAULT_COLORS","DEFAULT_BACKGROUND","label","ANONYOMOUS_USER","favorites","preference","language","primary","secondary","fontSizeType","FontSizeType","MEDIUM","PreferenceReducer","settings","defaultState","chapter","section","literature","transliterator","index","kurals","KuralIndexReducer","state","thunkInitKuralIndexMapAndUserPref","getUserPreferences","getKuralIndex","kuralIndex","toBaseTypeMap","getAllSections","sectionMap","getAllLiterature","literatureMap","getAllChapter","chapterMap","getAllTransliterators","transliteratorMap","reduce","oldVal","t1","Object","getKurals","kuralsMap","entries","k","v","TransliteratorSectionType","colorItemContainer","gridTemplateColumns","gridGap","spacing","paddingBottom","SettingsPickerContainer","Card","elevation","CardContent","cardContentStyle","children","colorItem","justifySelf","border","itemIcon","BackgroundOption","isSelected","React","useState","itemSelected","setItemSelection","useEffect","backgroundColor","onSelect","ListItem","ListItemIcon","Radio","checkedIcon","Check","checked","ListItemText","BackgroundPicker","useDispatch","useFirestoreConnect","COLLECTION_NAME_MAP","DISPLAY","useFirestore","DISPLAY_CONFIG","useSelector","st","data","USER_BG_COLOR","gridTemplateRows","CONFIG","map","item","i","userPreference","updateUserDisplayColor","marginTop","ICON_MAP","Favorite","Grade","Whatshot","ColorItem","ColorPicker","USER_COLOR","COLORS","colors","indexOf","splice","getColors","c","StyledSlider","withStyles","thumb","boxShadow","active","track","rail","mark","marginLeft","opacity","top","left","right","bottom","content","position","markActive","Slider","DiscreteSlider","aria-labelledby","valueLabelDisplay","sliderWrapper","sliderRoot","FontSizePicker","FONT_SIZE_MAP","marks","aria-label","step","min","TINY","max","BIG","onChange","_","fontType","keys","find","paddingTop","languageItem","languageItemText","itemCheckbox","LanguagePicker","useUserPreference","updateUserPref","LANGUAGE","PRIMARY_LANG","SECONDARY_LANGS","languageMap","getOrderedLangIds","sortedIds","l","toLocaleLowerCase","sort","orderedLangIds","setOrderdLangIds","isLangActive","langId","onDragEnd","source","destination","reordered","secLangs","push","droppableId","provided","snapshot","List","isDraggingOver","droppableProps","ref","innerRef","draggableId","userPrimaryLang","userSecLangs","length","toggleLang","isDragging","draggableProps","dragHandleProps","Checkbox","disableTypography","placeholder","subList","subHeader","textAlign","subListItem","subListItemText","TransliteratorLabel","inactive","toUserLikedTranslitsMap","transliterators","getUserTransliterators","RankTransliteratorSetting","kuralIndexMap","userTransLits","setUserTransLits","updateState","reorderedTransliterors","JSON","parse","stringify","srcList","ACTIVE","INACTIVE","transilterators","t","key","list","subheader","ListSubheader","tItem","toString","DragIndicator","name","itemLabel","itemChild","listItemIcon","SettingItem","isOpen","showExpandIcon","isItemExpanded","toggleItem","button","suffix","Collapse","container","in","timeout","unmountOnExit","divider","Divider","variant","IDB_USER_PROFILE","itemText","formControl","margin","fontSizePicker","SettingsLabel","MenuItemIcon","Settings","useIdbKeyStore","setUserToLS","debug","Language","People","FormatSize","Palette","Colorize","useKuralDetail","kuralInput","TRANSLITERATORS","KURALS","setKural","kuralDetail","setKuralDetail","userPreferedTranslits","isCategoryValidErr","getKuralDetail","useNavigation","history","useHistory","route","useSubCategory","category","resultCategory","Error","result","setResult","KURAL_INDEX","getLiteraturesBySection","useCallback","sectionId","LITERATURE_MAP","INDEX_MAP","fillRange","litIndex","getChaptersFromLiterature","litId","CHAPTER_MAP","litChapMap","getKuralIdsOfChapter","kId","useBaseItem","items","itemNo","categoryId","getCategoryIds","getRoutes","categories","favourites","isFavourite","filter","it","includes","routes","ROUTE_CONSTANTS","LIST_CATEGORY","CATEGORY_COLORS","default","LIST","useRoute","inputFilter","setInputFilter","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","findChapterNoFromKuralNo","options","rootCategoryFinder","log","sectionRoute","matchPath","path","exact","literatureRoute","chapterRoute","kuralRoute","newFilter","Number","params","undefined","listen","getRouteValue","output","input","shouldAddToList","favIndex","findIndex","datetime","Date","useKuralSearch","addResults","searchTypes","keyword","forEach","kuralNo","parseInt","isCategoryValid","chapterNo","literatureNo","sectionNo","appendSearchResults","setSearchKeyword","types","isInteger","searchNumber","e","findSuitableSearchTypes","setSearchFilters","clearSearchResults","status","setSearchStatus","useLongPress","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","defaultValue","setItem","get","then","set","userPref","HideOnScroll","trigger","useScrollTrigger","target","Slide","appear","direction","toolbar","avatar","palette","main","actionsGroup","iconButton","MyAppBar","AppBar","Toolbar","actions","idWrap","labelWrap","paddingLeft","ListView","showDivider","onItemSelected","chapFavorites","paddingRight","ChapterFavList","getChapter","navigateTo","chapterIds","ch","findCategoryRouteMapString","marginBottom","KuralFavList","chapterKuralMap","setchapterKuralMap","onKuralSelected","chapMap","kuralIds","chap","chapId","chapterInfo","disablePadding","disableSticky","collapsableGroup","listItemTitle","favCount","FavoritesViewer","filterFav","KURAL_IDS","CHAPTER_IDS","expanded","visiblity","setVisiblity","noRecordsFound","GroupTitleMaker","isVisible","collapseContent","selected","inset","favoriteCard","Home","CardHeader","flexGrow","appBar","borderTop","actionItem","MyBottomNavigationBar","BottomNavigation","currentRoute","BottomNavigationAction","ActionBarItems","Search","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","isExact","setRoute","Main","fallback","renderRoutes","SettingsViewer","lazy","KuralDetailViewer","ListCategoryViewer","CategoryViewerContainer","KuralListSwipeable","ROOT","SEARCH","FAVOURITE","SETTINGS","render","match","url","ROUTE_REGEX","test","to","injectUserStyles","bodyStyles","document","body","setProperty","fontFamily","App","lsUser","remoteUser","isEqual","rootReducers","combineReducers","search","SearchStateReducer","firebase","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","ThemeProvider","AppTheme","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","results","setUserSelection","selection","setAllUserSelections","sortSearchResults","SortValueMap","b","filters","userSelections","detail","getLiteratureNoFromChapterNo","isItemInRange","getSectionNoByLiteratureNo","secId","firestoreGetCacheFirst","empty","collection","indexSnapshot","getDocData","docs","doc","getAllBaseItems","lang","collectionKey","sectionSnapshot","Math","ceil","isResultOfType","resType","startsWith","LARGE","SMALL","KURAL","kuralSnapshotRef","KURAL_DETAIL","startKuralNo","Array","from","TRANSLITERATOR","transliteratorSnapRef","userId","USER","where","FieldPath","documentId","limit","userDocRef","range","out","findCategoryRouteMap","join","convertCategoryRouteMapToString","transliteratorsMap","tMap","userLangs","getUserPreferedLanguages","userTMap","some","userLikedTransliterators","allowedTransliteratorIds","values","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER","SearchCategoryLabelMap","all","ITEMS_COUNT_MAP"],"mappings":"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","file":"static/js/main.ba09ef21.chunk.js","sourcesContent":["type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: 'inherit',\n    transform: 'rotate(0deg)',\n    transition: 'all 0.2s ease',\n    '&.is-expanded': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype ExpandedIconProps = {\n  className?: string;\n  isExpanded?: boolean;\n  style?: React.CSSProperties;\n};\n\nexport const AnimatedExpandedIcon: React.FC<ExpandedIconProps> = ({\n  isExpanded,\n  className,\n  style,\n}: ExpandedIconProps) => {\n  const classes = useStyles();\n  return (\n    <ExpandMore\n      style={style}\n      className={clsx(classes.icon, isExpanded && 'is-expanded', className)}\n    />\n  );\n};\n","export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: 'var(--app-secondary-color)',\n    fontWeight: 'bold',\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n\n  if (!props.kural || !props.kural.value) {\n    return null;\n  }\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  BackgroundColorItem,\n  FontSizeType,\n  updateUserPreference,\n  User,\n  UserPreference,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const DEFAULT_COLORS: string[] = [\n  'rgb(29, 161, 242)',\n  'rgb(224, 36, 94)',\n  'rgb(23, 191, 99)',\n];\nexport const DEFAULT_BACKGROUND: BackgroundColorItem[] = [\n  {\n    label: 'Default',\n    color: 'rgba(255,255,255,1.00)',\n  },\n  {\n    label: 'Dim',\n    color: 'rgb(21, 32, 43)',\n  },\n  {\n    label: 'Lights out',\n    color: 'rgb(0, 0, 0)',\n  },\n];\n\nexport const ANONYOMOUS_USER: User = {\n  id: 'anonymous',\n  favorites: [],\n  preference: {\n    display: {\n      color: DEFAULT_COLORS[0],\n      background: DEFAULT_BACKGROUND[0],\n    },\n    language: {\n      primary: 'ta',\n      secondary: [],\n    },\n    fontSizeType: FontSizeType.MEDIUM,\n  },\n};\nexport const PreferenceReducer = (\n  settings = ANONYOMOUS_USER,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n  kurals: {},\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getKurals,\n  getUserPreferences,\n  Kural,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    const kuralsMap = Object.entries(\n      await getKurals(firestore, primary)\n    ).reduce(\n      (oldVal, [k, v]) => ({\n        ...oldVal,\n        [k]: ({ id: k, value: v } as unknown) as Kural,\n      }),\n      {}\n    ) as Record<number, Kural>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n        kurals: kuralsMap,\n      },\n    });\n  };\n};\n","import React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n} from '@material-ui/core';\nimport { DragIndicator } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  getUserTransliterators,\n  Transliterator,\n  User,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { applyPreference } from 'src/state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  subList: {\n    '&.dragging-over': {\n      backgroundColor: 'var(--app-secondary-bg-color)',\n    },\n  },\n  subHeader: {\n    textAlign: 'left',\n    lineHeight: '1.5em',\n    color: 'var(--app-secondary-color)',\n  },\n  subListItem: {\n    '& .drag-indicator': {\n      color: 'var(--app-color)',\n    },\n    '&.is-dragging': {\n      backgroundColor: 'var(--app-secondary-color)',\n      color: 'white',\n      '& .drag-indicator': {\n        color: 'white',\n      },\n    },\n  },\n  subListItemText: {\n    fontSize: '0.8em',\n    fontWeight: 'bold',\n  },\n}));\n\ntype RankTransliteratorSettingProps = {\n  user: User;\n  className?: string;\n};\n\nenum TransliteratorSectionType {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n}\ntype TransliteratorSectionMapType = Record<\n  TransliteratorSectionType,\n  Transliterator[]\n>;\n\nconst TransliteratorLabel: Record<TransliteratorSectionType, string> = {\n  active: 'Active',\n  inactive: 'InActive',\n};\n\nconst toUserLikedTranslitsMap = (\n  user: User,\n  transliterators: Record<number, Transliterator>\n): TransliteratorSectionMapType => {\n  const [activeList, inActiveList] = getUserTransliterators(\n    user,\n    transliterators\n  );\n  return { active: activeList, inactive: inActiveList };\n};\n\nexport const RankTransliteratorSetting: React.FC<RankTransliteratorSettingProps> = (\n  props: RankTransliteratorSettingProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const transliterators = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const [userTransLits, setUserTransLits] = React.useState(\n    toUserLikedTranslitsMap(props.user, transliterators)\n  );\n  React.useEffect(() => {\n    setUserTransLits(toUserLikedTranslitsMap(props.user, transliterators));\n  }, [props.user, transliterators]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    if (!destination) {\n      return;\n    }\n    let updateState = false;\n    const reorderedTransliterors = JSON.parse(\n      JSON.stringify(userTransLits)\n    ) as TransliteratorSectionMapType;\n    const srcList =\n      reorderedTransliterors[source.droppableId as TransliteratorSectionType];\n    if (\n      srcList.length <= 1 &&\n      source.droppableId === TransliteratorSectionType.ACTIVE &&\n      destination.droppableId === TransliteratorSectionType.INACTIVE\n    ) {\n      // Note: Don't allow active transliterators to go empty.\n      return;\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n      const destList =\n        reorderedTransliterors[\n          destination.droppableId as TransliteratorSectionType\n        ];\n      destList.splice(destination.index, 0, srcList[source.index]);\n      srcList.splice(source.index, 1);\n      updateState = true;\n    } else if (source.index !== destination.index) {\n      srcList.splice(destination.index, 0, ...srcList.splice(source.index, 1));\n      updateState = true;\n    }\n    if (updateState) {\n      const userPreference = {\n        ...props.user.preference,\n        transilterators: reorderedTransliterors.active.map((t) => t.id),\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {Object.entries(userTransLits).map(([key, list]) => (\n        <Droppable droppableId={key} key={key}>\n          {(provided, snapshot) => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={clsx(\n                classes.subList,\n                snapshot.isDraggingOver && 'dragging-over'\n              )}\n              subheader={\n                <ListSubheader component='div' className={classes.subHeader}>\n                  {TransliteratorLabel[key as TransliteratorSectionType]}\n                </ListSubheader>\n              }>\n              {list.map((tItem, index) => (\n                <Draggable\n                  key={tItem.id}\n                  draggableId={tItem.id.toString()}\n                  index={index}>\n                  {(provided, snapshot) => (\n                    <ListItem\n                      className={clsx(\n                        classes.subListItem,\n                        snapshot.isDragging && 'is-dragging'\n                      )}\n                      style={provided.draggableProps.style}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}>\n                      <ListItemIcon>\n                        <DragIndicator className='drag-indicator' />\n                      </ListItemIcon>\n                      <ListItemText\n                        disableTypography\n                        primary={tItem.name}\n                        className={classes.subListItemText}\n                      />\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      ))}\n    </DragDropContext>\n  );\n};\n","import React from 'react';\n\nimport { Card, CardContent, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { CommonComponentProps } from '../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: 'var(--app-bg-color)',\n  },\n  colorItemContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, auto)',\n    gridGap: '1em',\n    padding: theme.spacing(1),\n    '&:last-child': {\n      paddingBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport type SettingsPickerContainerProps = Partial<\n  React.PropsWithChildren<CommonComponentProps>\n> & {\n  cardContentStyle?: React.CSSProperties;\n};\n\nexport const SettingsPickerContainer: React.FC<SettingsPickerContainerProps> = (\n  props: SettingsPickerContainerProps\n) => {\n  const classes = useStyles();\n  return (\n    <Card elevation={0} className={clsx(classes.root, props.className)}>\n      <CardContent\n        className={clsx(classes.colorItemContainer)}\n        style={props.cardContentStyle}>\n        {props.children}\n      </CardContent>\n    </Card>\n  );\n};\n","import React from 'react';\n\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Radio,\n} from '@material-ui/core';\nimport { Check } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore, useFirestoreConnect } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\nimport { applyPreference, DEFAULT_BACKGROUND } from 'src/state/settings';\n\nimport {\n  User,\n  COLLECTION_NAME_MAP,\n  updateUserPreference,\n  BackgroundColorItem,\n} from '../../../lib/api';\nimport { CommonComponentProps } from '../../components';\nimport { SettingsPickerContainer } from './SettingsPickerContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  colorItem: {\n    width: '90%',\n    borderRadius: 10,\n    justifySelf: 'center',\n    border: '2px solid var(--app-color)',\n    '& .radio': { color: 'var(--app-color)' },\n    '&.item1': {\n      color: 'rgb(0,0,0)',\n    },\n    '&.item2': { color: 'white' },\n    '&.item3': { color: 'white' },\n    '& .item': {\n      padding: 0,\n    },\n    '& .text': {\n      color: 'inherit',\n    },\n  },\n  itemIcon: {\n    minWidth: 'none',\n  },\n}));\n\ninterface ColorItemProps {\n  color: string;\n  label: string;\n  isSelected?: boolean;\n  onSelect?: () => void;\n  className?: string;\n}\n\nconst BackgroundOption: React.FC<ColorItemProps> = ({\n  isSelected = false,\n  ...props\n}: ColorItemProps) => {\n  const classes = useStyles();\n  const [itemSelected, setItemSelection] = React.useState(isSelected);\n  React.useEffect(() => {\n    setItemSelection(isSelected);\n  }, [isSelected]);\n  const onItemSelection = () => {\n    setItemSelection(true);\n    props.onSelect && props.onSelect();\n  };\n  return (\n    <div\n      className={clsx(classes.colorItem, props.className)}\n      style={{ backgroundColor: props.color }}\n      onClick={onItemSelection}>\n      <ListItem component='div' classes={{ root: 'item' }}>\n        <ListItemIcon className={classes.itemIcon}>\n          <Radio\n            checkedIcon={<Check />}\n            checked={itemSelected}\n            classes={{ root: 'radio' }}\n          />\n        </ListItemIcon>\n        <ListItemText classes={{ root: 'text' }} primary={props.label} />\n      </ListItem>\n    </div>\n  );\n};\n\nexport interface BackgroundPickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const BackgroundPicker: React.FC<BackgroundPickerProps> = (\n  props: BackgroundPickerProps\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useFirestoreConnect([COLLECTION_NAME_MAP.DISPLAY]);\n  const firestore = useFirestore();\n  const DISPLAY_CONFIG = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.DISPLAY]\n  );\n  const USER_BG_COLOR = props.user.preference.display.background;\n  const getColors = (): BackgroundColorItem[] => {\n    const BG_COLORS = [\n      ...(DISPLAY_CONFIG && DISPLAY_CONFIG.CONFIG\n        ? (DISPLAY_CONFIG.CONFIG.background as BackgroundColorItem[])\n        : DEFAULT_BACKGROUND),\n    ];\n    return BG_COLORS;\n  };\n  const updateUserDisplayColor = (item: BackgroundColorItem) => {\n    const userPreference = {\n      ...props.user.preference,\n      display: {\n        ...props.user.preference.display,\n        background: item,\n      },\n    };\n    dispatch(applyPreference(userPreference));\n    updateUserPreference(firestore, {\n      ...props.user,\n      preference: userPreference,\n    });\n  };\n  return (\n    <SettingsPickerContainer\n      cardContentStyle={{\n        gridTemplateRows: 'repeat(3, auto)',\n        gridTemplateColumns: 'unset',\n      }}>\n      {getColors().map((item: BackgroundColorItem, i: number) => {\n        return (\n          <BackgroundOption\n            key={i}\n            color={item.color}\n            label={item.label}\n            className={`item${i + 1}`}\n            isSelected={USER_BG_COLOR.color === item.color}\n            onSelect={() => updateUserDisplayColor(item)}\n          />\n        );\n      })}\n    </SettingsPickerContainer>\n  );\n};\n\nexport default BackgroundPicker;\n","import React from 'react';\n\nimport { Card, CardContent, makeStyles } from '@material-ui/core';\nimport {\n  Check,\n  Favorite,\n  Grade,\n  SvgIconComponent,\n  Whatshot,\n} from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore, useFirestoreConnect } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\nimport { applyPreference, DEFAULT_COLORS } from 'src/state/settings';\n\nimport {\n  User,\n  COLLECTION_NAME_MAP,\n  updateUserPreference,\n} from '../../../lib/api';\nimport { CommonComponentProps } from './../../components';\nimport { SettingsPickerContainer } from './SettingsPickerContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  colorItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    '& .circle': {\n      height: '2.5rem',\n      width: '2.5rem',\n      borderRadius: '50%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      '& svg': {\n        color: 'white',\n      },\n    },\n    '& .icon': {\n      marginTop: '0.5em',\n    },\n  },\n}));\n\nconst ICON_MAP: SvgIconComponent[] = [Favorite, Grade, Whatshot];\n\ninterface ColorItemProps {\n  color: string;\n  icon: SvgIconComponent;\n  isSelected?: boolean;\n  onSelect?: () => void;\n}\n\nconst ColorItem: React.FC<ColorItemProps> = ({\n  isSelected = false,\n  ...props\n}: ColorItemProps) => {\n  const classes = useStyles();\n  const [itemSelected, setItemSelection] = React.useState(isSelected);\n  React.useEffect(() => {\n    setItemSelection(isSelected);\n  }, [isSelected]);\n  const onItemSelection = () => {\n    setItemSelection(!itemSelected);\n    props.onSelect && props.onSelect();\n  };\n  return (\n    <div className={classes.colorItem}>\n      <div\n        className='circle'\n        style={{ backgroundColor: props.color }}\n        onClick={onItemSelection}>\n        {itemSelected && <Check />}\n      </div>\n      <div className='icon'>\n        {<props.icon style={{ color: props.color }} />}\n      </div>\n    </div>\n  );\n};\n\nexport interface ColorPickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const ColorPicker: React.FC<ColorPickerProps> = (\n  props: ColorPickerProps\n) => {\n  const dispatch = useDispatch();\n  useFirestoreConnect([COLLECTION_NAME_MAP.DISPLAY]);\n  const firestore = useFirestore();\n  const DISPLAY_CONFIG = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.DISPLAY]\n  );\n  const USER_COLOR = props.user.preference.display.color;\n  const getColors = (): string[] => {\n    const COLORS = [\n      ...(DISPLAY_CONFIG && DISPLAY_CONFIG.CONFIG\n        ? DISPLAY_CONFIG.CONFIG.colors\n        : DEFAULT_COLORS),\n    ];\n    if (USER_COLOR && COLORS.indexOf(USER_COLOR) === -1) {\n      COLORS.splice(0, 1, USER_COLOR);\n    }\n    return COLORS;\n  };\n  const updateUserDisplayColor = (color: string) => {\n    const userPreference = {\n      ...props.user.preference,\n      display: {\n        ...props.user.preference.display,\n        color,\n      },\n    };\n    dispatch(applyPreference(userPreference));\n    updateUserPreference(firestore, {\n      ...props.user,\n      preference: userPreference,\n    });\n  };\n  return (\n    <SettingsPickerContainer>\n      {getColors().map((c: string, i: number) => {\n        return (\n          <ColorItem\n            key={i}\n            color={c}\n            icon={ICON_MAP[i]}\n            isSelected={USER_COLOR === c}\n            onSelect={() => updateUserDisplayColor(c)}\n          />\n        );\n      })}\n    </SettingsPickerContainer>\n  );\n};\n","import * as React from 'react';\n\nimport { Slider, SliderTypeMap, withStyles } from '@material-ui/core';\nimport { DefaultComponentProps } from '@material-ui/core/OverridableComponent';\n\nexport type DiscreteSliderProps = Partial<DefaultComponentProps<SliderTypeMap>>;\n\nconst StyledSlider = withStyles({\n  root: {\n    height: 8,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    marginTop: '-7px',\n    backgroundColor: 'currentColor',\n    '&:focus, &:hover, &$active': {\n      boxShadow:\n        'rgba(136, 153, 166, 0.2) 0px 0px 7px, rgba(136, 153, 166, 0.15) 0px 1px 3px 1px',\n    },\n  },\n  active: {},\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n  mark: {\n    width: 16,\n    height: 16,\n    borderRadius: '50%',\n    marginLeft: '-6px',\n    opacity: 0.8,\n    marginTop: '-5px',\n    '& ::after': {\n      top: '-15px',\n      left: '-15px',\n      right: '-15px',\n      bottom: '-15px',\n      content: '\"',\n      position: 'absolute',\n      borderRadius: '50%',\n      border: '1px solid',\n    },\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\nexport const DiscreteSlider: React.FC<DiscreteSliderProps> = (props) => {\n  return (\n    <StyledSlider\n      aria-labelledby='discrete-slider'\n      valueLabelDisplay='auto'\n      {...props}\n    />\n  );\n};\n\nexport default DiscreteSlider;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  FONT_SIZE_MAP,\n  User,\n  FontSizeType,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { applyPreference, ANONYOMOUS_USER } from 'src/state/settings';\n\nimport { CommonComponentProps } from '../../components';\nimport { DiscreteSlider } from './../../components/common/DiscreteSlider';\n\nconst useStyles = makeStyles((theme) => ({\n  sliderWrapper: {\n    display: 'flex',\n    marginLeft: theme.spacing(3),\n    alignItems: 'center',\n  },\n  sliderRoot: {\n    width: '80%',\n  },\n}));\n\nexport interface FontSizePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const FontSizePicker: React.FC<FontSizePickerProps> = (\n  props: FontSizePickerProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const fontSize =\n    FONT_SIZE_MAP[\n      props.user.preference.fontSizeType ||\n        ANONYOMOUS_USER.preference.fontSizeType\n    ];\n  const marks = Object.entries(FONT_SIZE_MAP).map(([, v]) => ({\n    value: v,\n  }));\n  const onFontChange = (\n    _: React.ChangeEvent<unknown>,\n    value: number | number[]\n  ) => {\n    if (typeof value === 'number') {\n      const fontType = Object.keys(FONT_SIZE_MAP).find(\n        (type) => FONT_SIZE_MAP[type as FontSizeType] === value\n      );\n      const userPreference = {\n        ...props.user.preference,\n        fontSizeType: fontType!! as FontSizeType,\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <div\n      className={clsx(\n        props.className && props.className + '-wrapper',\n        classes.sliderWrapper\n      )}>\n      <DiscreteSlider\n        classes={{ root: clsx(classes.sliderRoot, 'is-app-color') }}\n        {...props}\n        aria-label='font-size-picker'\n        value={fontSize}\n        valueLabelDisplay={'off'}\n        step={null}\n        marks={marks}\n        min={FONT_SIZE_MAP.TINY}\n        max={FONT_SIZE_MAP.BIG}\n        onChange={onFontChange}\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  Checkbox,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport { COLLECTION_NAME_MAP, User } from 'src/lib/api';\nimport { useUserPreference } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport { CommonComponentProps } from '../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  languageItem: {},\n  languageItemText: {},\n  itemCheckbox: {\n    padding: 0,\n  },\n}));\n\nexport interface LanguagePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const LanguagePicker: React.FC<LanguagePickerProps> = (\n  props: LanguagePickerProps\n) => {\n  const classes = useStyles();\n  const [updateUserPref] = useUserPreference();\n  useFirestoreConnect([COLLECTION_NAME_MAP.LANGUAGE]);\n  const {\n    primary: PRIMARY_LANG,\n    secondary: SECONDARY_LANGS,\n  } = props.user.preference.language;\n  const languageMap = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.LANGUAGE]\n  );\n  const getOrderedLangIds = React.useCallback(\n    () => (): Array<string> => {\n      if (!languageMap) {\n        return [];\n      }\n      const sortedIds = Object.keys(languageMap)\n        .map((l) => l.toLocaleLowerCase())\n        .sort();\n      // Remove Primary lang\n      sortedIds.splice(sortedIds.indexOf(PRIMARY_LANG.toLocaleLowerCase()), 1);\n      // Insert Primary lang at top\n      sortedIds.splice(0, 0, PRIMARY_LANG.toLocaleLowerCase());\n      return sortedIds;\n    },\n    [PRIMARY_LANG, languageMap]\n  );\n  const [orderedLangIds, setOrderdLangIds] = React.useState<Array<string>>([]);\n\n  React.useEffect(() => {\n    setOrderdLangIds(getOrderedLangIds());\n  }, [getOrderedLangIds, languageMap]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    if (!destination) {\n      return;\n    }\n    if (source.index !== destination.index) {\n      const reordered = [...orderedLangIds];\n      reordered.splice(\n        destination.index,\n        0,\n        ...reordered.splice(source.index, 1)\n      );\n      setOrderdLangIds(reordered);\n      if (PRIMARY_LANG !== reordered[0]) {\n        const secLangs = props.user.preference.language.secondary;\n        if (secLangs.indexOf(reordered[0]) !== -1) {\n          secLangs.splice(secLangs.indexOf(reordered[0]), 1);\n        }\n        if (secLangs.indexOf(PRIMARY_LANG) === -1) {\n          secLangs.push(PRIMARY_LANG);\n        }\n        const userPreference = {\n          ...props.user.preference,\n          language: {\n            ...props.user.preference.language,\n            primary: reordered[0],\n            secondary: secLangs,\n          },\n        };\n        updateUserPref(userPreference);\n      }\n    }\n  };\n\n  const isLangActive = (langId: string) => {\n    return PRIMARY_LANG === langId || SECONDARY_LANGS.indexOf(langId) !== -1;\n  };\n  const toggleLang = (langId: string) => {\n    let userPrimaryLang = props.user.preference.language.primary;\n    let userSecLangs = props.user.preference.language.secondary;\n\n    if (langId === userPrimaryLang && userSecLangs.length) {\n      userPrimaryLang = userSecLangs[0];\n      userSecLangs.splice(0, 1);\n    } else if (userSecLangs.indexOf(langId) !== -1) {\n      userSecLangs.splice(userSecLangs.indexOf(langId), 1);\n    } else if (langId !== userPrimaryLang) {\n      userSecLangs = [...userSecLangs, langId];\n    }\n    const userPreference = {\n      ...props.user.preference,\n      language: {\n        primary: userPrimaryLang,\n        secondary: userSecLangs,\n      },\n    };\n    updateUserPref(userPreference);\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId={'language'} key={'language'}>\n        {(provided, snapshot) => (\n          <List\n            className={clsx(\n              props.className && props.className + '-wrapper',\n              classes.root,\n              snapshot.isDraggingOver && 'dragging-over'\n            )}\n            {...provided.droppableProps}\n            ref={provided.innerRef}>\n            {orderedLangIds.map((langId, index) => (\n              <Draggable key={langId} draggableId={langId} index={index}>\n                {(provided, snapshot) => (\n                  <ListItem\n                    onClick={() => toggleLang(langId)}\n                    className={clsx(\n                      classes.languageItem,\n                      snapshot.isDragging && 'is-dragging'\n                    )}\n                    style={provided.draggableProps.style}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}>\n                    <ListItemIcon>\n                      <Checkbox\n                        className={clsx(classes.itemCheckbox, 'is-app-color')}\n                        checked={isLangActive(langId)}\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      disableTypography\n                      primary={languageMap[langId].value}\n                      className={classes.languageItemText}\n                    />\n                  </ListItem>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </List>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import React, { FC, PropsWithChildren } from 'react';\n\nimport {\n  Collapse,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { AnimatedExpandedIcon } from './../../components/common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  itemLabel: {\n    fontSize: '1em',\n  },\n  itemChild: {\n    padding: theme.spacing(1),\n  },\n  listItemIcon: {\n    '& svg': {\n      color: 'var(--app-color)',\n    },\n  },\n}));\n\ntype SettingItemProps = PropsWithChildren<{\n  label: string;\n  className?: string;\n  isOpen?: boolean;\n  showExpandIcon?: boolean;\n  icon?: React.ReactNode;\n  suffix?: React.ReactNode;\n  divider?: boolean;\n}>;\n\nexport const SettingItem: FC<SettingItemProps> = ({\n  label,\n  className,\n  isOpen = false,\n  showExpandIcon = true,\n  children,\n  ...props\n}: SettingItemProps) => {\n  const classes = useStyles();\n  const [isItemExpanded, toggleItem] = React.useState(isOpen);\n  return (\n    <>\n      <ListItem\n        button\n        className={clsx(className, classes.root)}\n        onClick={(): void => toggleItem(!isItemExpanded)}>\n        {props.icon}\n        <ListItemText\n          classes={{ primary: classes.itemLabel }}\n          primary={label}\n        />\n        {props.suffix}\n        {showExpandIcon && (\n          <ListItemIcon classes={{ root: classes.listItemIcon }}>\n            <AnimatedExpandedIcon isExpanded={isItemExpanded} />\n          </ListItemIcon>\n        )}\n      </ListItem>\n      <Collapse\n        classes={{ container: classes.itemChild }}\n        in={isItemExpanded}\n        timeout='auto'\n        unmountOnExit>\n        {children}\n      </Collapse>\n      {props.divider && <Divider variant='middle' />}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, List, ListItemIcon } from '@material-ui/core';\nimport {\n  Colorize,\n  FormatSize,\n  Language,\n  Palette,\n  People,\n} from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { User } from 'src/lib/api';\nimport { useIdbKeyStore } from 'src/lib/hooks';\n\nimport { AppState } from '../../../state/reducers';\nimport { BackgroundPicker } from './BackgroundPicker';\nimport { ColorPicker } from './ColorPicker';\nimport { FontSizePicker } from './FontSizePicker';\nimport { LanguagePicker } from './LanguagePicker';\nimport { RankTransliteratorSetting } from './RankTransliteratorSetting';\nimport { SettingItem } from './SettingItem';\n\nexport const IDB_USER_PROFILE = 'IDB_USER_PROFILE';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  fontSizePicker: {\n    // padding: theme.spacing(1),\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n  TRANSLITERATOR_PICK: 'Transliterators',\n  LANGUAGE_PICK: 'Language',\n  COLOR_PICK: 'Color',\n  BACKGROUND_PICK: 'Background',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst MenuItemIcon: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}: React.PropsWithChildren<unknown>) => {\n  return (\n    <ListItemIcon classes={{ root: 'is-app-color' }}>{children}</ListItemIcon>\n  );\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const user = useSelector((st: AppState) => st.user);\n  const [, setUserToLS] = useIdbKeyStore<User>(IDB_USER_PROFILE, user);\n  React.useEffect(() => {\n    setUserToLS(user);\n  }, [setUserToLS, user]);\n  debug('renders Settings');\n  return (\n    <div className={props.className}>\n      <List>\n        <SettingItem\n          label={SettingsLabel.LANGUAGE_PICK}\n          icon={\n            <MenuItemIcon>\n              <Language />\n            </MenuItemIcon>\n          }>\n          <LanguagePicker user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.TRANSLITERATOR_PICK}\n          divider={true}\n          icon={\n            <MenuItemIcon>\n              <People />\n            </MenuItemIcon>\n          }>\n          <RankTransliteratorSetting user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.FONT_SIZE}\n          icon={\n            <MenuItemIcon>\n              <FormatSize />\n            </MenuItemIcon>\n          }>\n          <FontSizePicker user={user} className={classes.fontSizePicker} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.COLOR_PICK}\n          icon={\n            <MenuItemIcon>\n              <Palette />\n            </MenuItemIcon>\n          }>\n          <ColorPicker user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.BACKGROUND_PICK}\n          divider={true}\n          icon={\n            <MenuItemIcon>\n              <Colorize />\n            </MenuItemIcon>\n          }>\n          <BackgroundPicker user={user} />\n        </SettingItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { getUserTransliterators, isCategoryValidErr, Kural } from '../api';\nimport { getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  const { primary: PRIMARY_LANG } = user.preference.language;\n  const TRANSLITERATORS = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  const [userPreferedTranslits] = getUserTransliterators(user, TRANSLITERATORS);\n\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      if (typeof kuralInput === 'number') {\n        isCategoryValidErr('kural', kuralInput);\n        setKural(KURALS[kuralInput]);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, PRIMARY_LANG, KURALS]);\n  return [kural, kuralDetail, userPreferedTranslits];\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralIdsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category?: RootCategory,\n  id?: number,\n  resultCategory?: Category\n) => [BaseType[], (id: number) => BaseType[], (id: number) => BaseType[]];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (id && category && resultCategory) {\n    if (category === resultCategory) {\n      throw new Error('Bad input');\n    }\n    isCategoryValidErr(category, id);\n  }\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  const getLiteraturesBySection = React.useCallback(\n    (sectionId: number): BaseType[] => {\n      const { literature: LITERATURE_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('section', sectionId);\n      return fillRange(INDEX_MAP!!.section[sectionId].litIndex).map(\n        (k) => LITERATURE_MAP[k]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  const getChaptersFromLiterature = React.useCallback(\n    (litId: number): BaseType[] => {\n      const { chapter: CHAPTER_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('literature', litId);\n      return fillRange(INDEX_MAP!!.litChapMap[litId]).map(\n        (c) => CHAPTER_MAP[c]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  React.useEffect(() => {\n    if (id && category === 'chapter' && resultCategory === 'kural') {\n      setResult(getKuralIdsOfChapter(id).map((kId) => KURAL_INDEX.kurals[kId]));\n    }\n  }, [KURAL_INDEX.kurals, category, id, resultCategory]);\n\n  React.useEffect(() => {\n    if (!result.length && id && resultCategory !== 'kural') {\n      const { index: INDEX_MAP } = KURAL_INDEX;\n      if (INDEX_MAP) {\n        if (category === 'literature' && resultCategory === 'chapter') {\n          setResult(getChaptersFromLiterature(id));\n        } else if (category === 'section' && resultCategory === 'literature') {\n          setResult(getLiteraturesBySection(id));\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    id,\n    KURAL_INDEX,\n    getLiteraturesBySection,\n    getChaptersFromLiterature,\n  ]);\n\n  return [result, getLiteraturesBySection, getChaptersFromLiterature];\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  CATEGORY_COLORS,\n  UserFavourite,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: UserFavourite[]\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const isFavourite = (category: Category, id: number) => {\n    return favourites\n      .filter((it) => it.category === category)\n      .map((it) => it.id)\n      .includes(id);\n  };\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: ROUTE_CONSTANTS.LIST_CATEGORY,\n      color: CATEGORY_COLORS.default,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section.id}`,\n      color: CATEGORY_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section!!.id}/${\n        categories.literature.id\n      }`,\n      color: CATEGORY_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: isFavourite('chapter', categories.chapter.id),\n      type: 'chapter',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter.id}`,\n      color: CATEGORY_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: isFavourite('kural', categories.kural.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter!!.id}/${categories.kural.id}`,\n      color: CATEGORY_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.user);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section`,\n      exact: true,\n    });\n    const literatureRoute = matchPath<{ literature: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section/:literature`,\n      exact: true,\n    });\n    const chapterRoute = matchPath<{ chapter: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n      exact: true,\n    });\n    const kuralRoute = matchPath<{ kural: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n      exact: true,\n    });\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    log.debug('route path values => ', JSON.stringify(newFilter));\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    log.debug('detect route => ', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites = user.favorites;\n      const favIndex = favorites.findIndex(\n        (it) => it.category === route.type && it.id === route.id\n      );\n      if (shouldAddToList && favIndex === -1) {\n        favorites = [\n          ...favorites,\n          { id: route.id, datetime: new Date(), category: route.type },\n        ];\n      } else {\n        favorites.splice(favIndex, 1);\n      }\n      dispatch(\n        updateUserFSAsync(firestore, {\n          ...user,\n          favorites,\n        })\n      );\n    }\n  };\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { SearchResult, SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport {\n  appendSearchResults,\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const { literature, section, chapter } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword);\n  };\n\n  const addResults = (searchTypes: SearchTypes[], keyword: string): void => {\n    searchTypes.forEach(async (type) => {\n      const items: SearchResult[] = [];\n      switch (type) {\n        case 'ByKuralNo':\n          const kuralNo = parseInt(keyword);\n          if (isCategoryValid('kural', kuralNo)) {\n            items.push({\n              type,\n              keyword,\n              category: 'kural',\n              item: KURALS[kuralNo],\n            });\n          }\n          break;\n        case 'ByChapterNo':\n          const chapterNo = parseInt(keyword);\n          if (isCategoryValid('chapter', chapterNo)) {\n            items.push({\n              type,\n              keyword,\n              item: chapter[parseInt(keyword)],\n              category: 'chapter',\n            });\n          }\n          break;\n        case 'ByLiteratureNo':\n          const literatureNo = parseInt(keyword);\n          if (isCategoryValid('literature', literatureNo)) {\n            items.push({\n              type,\n              keyword,\n              item: literature[parseInt(keyword)],\n              category: 'literature',\n            });\n          }\n          break;\n        case 'BySectionNo':\n          const sectionNo = parseInt(keyword);\n          if (isCategoryValid('section', sectionNo)) {\n            items.push({\n              type,\n              keyword,\n              item: section[parseInt(keyword)],\n              category: 'section',\n            });\n          }\n          break;\n      }\n      if (items.length) {\n        dispatch(appendSearchResults(items));\n      }\n    });\n  };\n\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import * as React from 'react';\n\nimport { set, get } from 'idb-keyval';\nimport { debug } from 'loglevel';\n\nexport const useIdbKeyStore = <T,>(\n  key: string,\n  defaultValue: T\n): [T, (value: T) => void] => {\n  const [item, setItem] = React.useState<T>(defaultValue);\n  React.useEffect(() => {\n    get(key).then((it) => {\n      if (it) {\n        setItem(JSON.parse(it as string) as T);\n      }\n    });\n  }, [key]);\n  const setValue = (value: T) => {\n    setItem(value);\n    set(key, JSON.stringify(value)).then(() => {\n      debug(`indexdb value of key:${key} got changed`);\n    });\n  };\n  return [item, setValue];\n};\n","import { useDispatch } from 'react-redux';\n\nimport { UserPreference } from '../api';\nimport { applyPreference } from './../../state/settings';\n\nexport const useUserPreference = (): [\n  /* User ,*/ (pref: UserPreference) => void\n] => {\n  const dispatch = useDispatch();\n  //   const user = useSelector((st: AppState) => st.user);\n\n  const updateUserPreference = (userPref: UserPreference) => {\n    dispatch(applyPreference(userPref));\n    // TODO: IGNORE FS update until i18n support\n    /* updateUserPreference(firestore, {\n            ...props.user,\n            preference: userPreference,\n          }); */\n  };\n  return [/* user */ updateUserPreference];\n};\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { debug } from 'loglevel';\n\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'center',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {/* {renderLeftIcon()} */}\n            Kural\n            <div className={classes.actionsGroup}>{props.actions}</div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\nexport default MyAppBar;\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  showDivider?: boolean;\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={props.showDivider}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { BaseType, findCategoryRouteMapString } from '../../../lib/api';\nimport { useBaseItem, useNavigation } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport ListView from '../common/ListView';\n\nconst useStyles = makeStyles((theme) => ({\n  chapFavorites: {\n    padding: 0,\n    '& li': {\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport interface ChapterFavListProps {\n  chapterIds: number[];\n}\n\nexport const ChapterFavList: React.FC<ChapterFavListProps> = (\n  props: ChapterFavListProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [getChapter] = useBaseItem('chapter');\n  const [navigateTo] = useNavigation();\n\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n\n  return (\n    <>\n      {props.chapterIds.length && (\n        <ListView\n          className={classes.chapFavorites}\n          items={\n            props.chapterIds\n              .sort()\n              .map((ch) => getChapter(ch))\n              .filter((ch) => ch !== null) as BaseType[]\n          }\n          onItemSelected={onChapterSelected}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { List, ListSubheader, makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport {\n  BaseType,\n  findCategoryRouteMapString,\n  findChapterNoFromKuralNo,\n} from '../../../lib/api';\nimport { useBaseItem, useNavigation } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport KuralCard from './../kural/KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  kural: {\n    padding: `0 0 0 ${theme.spacing(1)}px`,\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport interface KuralFavListProps {\n  kuralIds: number[];\n}\n\nexport const KuralFavList: React.FC<KuralFavListProps> = (\n  props: KuralFavListProps\n) => {\n  const classes = useStyles();\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [getChapter] = useBaseItem('chapter');\n  const [navigateTo] = useNavigation();\n  const [chapterKuralMap, setchapterKuralMap] = React.useState<\n    Record<number, BaseType[]>\n  >({});\n\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n\n  const onKuralSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          kural: item.id,\n        })}`\n      )();\n    }\n  };\n\n  React.useEffect(() => {\n    const chapMap = props.kuralIds.reduce((chapMap, kId) => {\n      const chap = findChapterNoFromKuralNo(kId);\n      if (KURALS[kId] !== undefined) {\n        return {\n          ...chapMap,\n          [chap]: [...(chapMap[chap] || []), KURALS[kId]],\n        };\n      }\n      return chapMap;\n    }, {} as Record<number, BaseType[]>);\n    setchapterKuralMap(chapMap);\n  }, [props.kuralIds, KURALS]);\n\n  return (\n    <>\n      {Object.keys(chapterKuralMap).map((chapId) => {\n        const chapterInfo = getChapter(parseInt(chapId));\n        return (\n          <List\n            component='div'\n            className='sub-list'\n            key={chapId}\n            disablePadding>\n            {chapterInfo && (\n              <ListSubheader\n                className='sub-header'\n                disableSticky\n                onClick={(): void => onChapterSelected(chapterInfo)}>\n                {chapterInfo.value}\n              </ListSubheader>\n            )}\n\n            {chapterKuralMap[parseInt(chapId)].map((item: BaseType) => (\n              <KuralCard\n                className={classes.kural}\n                key={item.id}\n                kural={item}\n                onClick={onKuralSelected}\n              />\n            ))}\n          </List>\n        );\n      })}\n    </>\n  );\n};\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { useIdbKeyStore } from 'src/lib/hooks';\n\nimport { AppState } from '../../../state';\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\nimport { ChapterFavList } from './chapter-fav-list';\nimport { KuralFavList } from './kural-fav-list';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  collapsableGroup: {},\n  list: {\n    '& .sub-header': {\n      textAlign: 'left',\n      color: 'brown',\n      lineHeight: '2rem',\n      padding: `0px 0 0 ${theme.spacing(0.5)}px`,\n    },\n  },\n  listItemTitle: {\n    '& .toggle-icon-container': {\n      marginLeft: theme.spacing(1.5),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n  favCount: {\n    fontSize: '0.8rem',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expanded?: boolean;\n};\n\nconst IDB_FAV_TOGGLE_STATE = 'IDB_FAV_TOGGLE';\ntype VisibilityState = {\n  kural: boolean;\n  chapter: boolean;\n};\n\nexport const FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const classes = useStyles();\n  const favorites = useSelector((st: AppState) => st.user.favorites);\n  const filterFav = (category: 'kural' | 'chapter') =>\n    (favorites || [])\n      .filter((it) => it.category === category)\n      .map((it) => it.id);\n  const KURAL_IDS = filterFav('kural');\n  const CHAPTER_IDS = filterFav('chapter');\n  const [visiblity, setVisiblity] = useIdbKeyStore<VisibilityState>(\n    IDB_FAV_TOGGLE_STATE,\n    props.expanded\n      ? { kural: true, chapter: true }\n      : { kural: false, chapter: false }\n  );\n\n  const noRecordsFound = <h1>None Found</h1>;\n\n  const GroupTitleMaker = (\n    isVisible: boolean,\n    onClick: () => void,\n    title: React.ReactNode,\n    favCount: React.ReactNode,\n    collapseContent?: React.ReactNode\n  ) => (\n    <>\n      <ListItem\n        selected={isVisible}\n        className={classes.listItemTitle}\n        onClick={onClick}>\n        <ListItemText inset={true} primary={title} />\n        {!isVisible && <span className={classes.favCount}>{favCount}</span>}\n        <div className={`toggle-icon-container`}>\n          <AnimatedExpandedIcon isExpanded={isVisible} />\n        </div>\n      </ListItem>\n      <Collapse\n        in={isVisible}\n        style={{ paddingBottom: isVisible ? 8 : 0 }}\n        className={classes.collapsableGroup}\n        timeout='auto'>\n        {collapseContent || noRecordsFound}\n      </Collapse>\n    </>\n  );\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        {GroupTitleMaker(\n          visiblity.kural,\n          () => {\n            setVisiblity({ ...visiblity, kural: !visiblity.kural });\n          },\n          'Kurals',\n          KURAL_IDS.length ? KURAL_IDS.length : null,\n          KURAL_IDS.length && <KuralFavList kuralIds={KURAL_IDS} />\n        )}\n        {GroupTitleMaker(\n          visiblity.chapter,\n          () => {\n            setVisiblity({ ...visiblity, chapter: !visiblity.chapter });\n          },\n          'Chapters',\n          CHAPTER_IDS.length ? CHAPTER_IDS.length : null,\n          CHAPTER_IDS.length && <ChapterFavList chapterIds={CHAPTER_IDS} />\n        )}\n      </List>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\nimport MyAppBar from 'src/views/components/common/MyAppBar';\n\nimport { FavoritesViewer } from '../../components/favourite-viewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(0.5),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n    background: 'inherit',\n    color: 'inherit',\n  },\n}));\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <MyAppBar />\n      <div className={classes.root}>\n        <Card variant='outlined' className={classes.favoriteCard}>\n          {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n          <CardHeader title='Favorites' className='card-header' />\n          <CardContent className='card-content'>\n            <FavoritesViewer expanded={false} />\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    background: 'inherit',\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n    background: 'inherit',\n  },\n  actionItem: {\n    color: 'inherit',\n    '&.selected': {\n      color: 'var(--app-secondary-color)',\n    },\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n              classes={{ selected: 'selected' }}\n              className={classes.actionItem}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { Search, Settings } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  {\n    icon: <Search />,\n    route: '/search',\n    label: 'Search',\n  },\n  {\n    icon: <Settings />,\n    route: '/settings',\n    label: 'Settings',\n  },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React, { Suspense } from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      {/* TODO: spinner */}\n      <Suspense fallback={<div>Loading...</div>}>\n        {renderRoutes(props.route?.routes)}\n      </Suspense>\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { RouteConfig, RouteConfigComponentProps } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport { isCategoryValid } from './lib/api';\nimport Home from './views/pages/home';\nimport Main from './views/pages/main/main';\n\nconst SettingsViewer = React.lazy(() => import('./views/pages/settings'));\nconst KuralDetailViewer = React.lazy(\n  () => import('./views/components/kural/KuralDetailViewer')\n);\nconst Search = React.lazy(() => import('./views/pages/search/search'));\nconst ListCategoryViewer = React.lazy(() => import('./views/pages/list'));\nconst CategoryViewerContainer = React.lazy(\n  () => import('./views/components/category-viewer/category-viewer-container')\n);\nconst KuralListSwipeable = React.lazy(\n  () => import('./views/components/kural/KuralsByChapterViewer')\n);\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  LIST_CATEGORY: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListCategoryViewer,\n        routes: [\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST_CATEGORY}*`,\n            // eslint-disable-next-line react/display-name\n            render: ({ match }: RouteConfigComponentProps): React.ReactNode => {\n              const route = match.url.replace(ROUTE_CONSTANTS.LIST, '');\n              const ROUTE_REGEX = /^(\\/\\d+)?(\\/\\d+)?$/;\n              if (ROUTE_REGEX.test(route)) {\n                const [section, literature] = [\n                  route.replace(ROUTE_REGEX, '$1').replace('/', ''),\n                  route.replace(ROUTE_REGEX, '$2').replace('/', ''),\n                ];\n                if (\n                  (section === '' && literature === '') ||\n                  (section.length > 0 &&\n                    isCategoryValid('section', parseInt(section))) ||\n                  (literature.length > 0 &&\n                    isCategoryValid('literature', parseInt(literature)))\n                ) {\n                  return <CategoryViewerContainer />;\n                }\n              }\n              return <Redirect to={`${ROUTE_CONSTANTS.LIST}/1/1/1`} />;\n            },\n          },\n        ],\n      },\n\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => (\n          <Redirect to={ROUTE_CONSTANTS.ROOT} />\n        ),\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport isEqual from 'lodash.isequal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { FONT_SIZE_MAP, User } from './lib/api';\nimport { useIdbKeyStore } from './lib/hooks';\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\nimport { IDB_USER_PROFILE } from './views/pages/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst injectUserStyles = (user: User) => {\n  const { fontSizeType, display } = user.preference;\n  const fontFamily = (): string => {\n    const lang = user.preference.language.primary;\n    switch (lang) {\n      case 'ta':\n        return 'Mukta Malar';\n      default:\n        return 'var(--default-font-family)';\n    }\n  };\n  const bodyStyles = document.body.style;\n  bodyStyles.setProperty('--text-size', `${FONT_SIZE_MAP[fontSizeType]}px`);\n  bodyStyles.setProperty('--app-color', display.color);\n  // TODO: determine secondary color by app-color\n  bodyStyles.setProperty('--app-secondary-color', 'green');\n  bodyStyles.setProperty('--app-bg-color', display.background.color);\n  bodyStyles.setProperty('--app-secondary-bg-color', 'lightblue');\n  bodyStyles.setProperty('--app-font-family', fontFamily());\n};\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const [lsUser] = useIdbKeyStore<User | null>(IDB_USER_PROFILE, null);\n  const remoteUser = useSelector((st: AppState) => st.user);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n\n  React.useEffect(() => {\n    lsUser && injectUserStyles(lsUser);\n  }, [lsUser]);\n  React.useEffect(() => {\n    if (!isEqual(lsUser, remoteUser)) {\n      injectUserStyles(remoteUser);\n    }\n  }, [lsUser, remoteUser]);\n  return (\n    <div\n      className={classes.root}\n      style={{\n        fontSize: 'var(--text-size)',\n        color: 'var(--app-color)',\n        backgroundColor: 'var(--app-bg-color)',\n      }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  user: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\n\nimport { AppStore } from './state';\n// import 'firebase/auth';\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; \n<FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","const reportWebVitals = (onPerfEntry?: (...args: unknown[]) => void): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\nconst sortSearchResults = (items: SearchResult[]) => {\n  const SortValueMap: Record<Category, number> = {\n    kural: 1,\n    chapter: 2,\n    literature: 3,\n    section: 4,\n  };\n  return items.sort(\n    (a, b) => SortValueMap[a.category] - SortValueMap[b.category]\n  );\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults([...state.results, ...action.payload]),\n    };\n  } else if (action.type === 'SetSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults(action.payload as SearchResult[]),\n    };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","export type IndexMapType = {\n  section: {\n    [key: number]: {\n      litIndex: [number, number];\n      chapIndex: [number, number];\n    };\n  };\n  litChapMap: { [key: number]: [number, number] };\n};\n\nexport type Transliterator = {\n  id: number;\n  name: string;\n  lang: string;\n  rank?: number;\n};\n\ntype BaseType = {\n  value: string;\n  id: number;\n};\n\ntype Kural = BaseType;\ntype Section = BaseType;\ntype Literature = BaseType;\ntype Chapter = BaseType;\n\ntype Category = 'section' | 'chapter' | 'literature' | 'kural';\ntype RootCategory = Exclude<Category, 'kural'>;\ntype CategoryBaseTypeMap = Record<Category, BaseType>;\n\ntype KuralMixin = {\n  kural: Kural;\n  section: Section;\n  literature: Literature;\n  chapter: Chapter;\n};\n\ntype SearchResult = {\n  type: SearchTypes;\n  item: BaseType;\n  category: Category;\n  keyword: string;\n};\n\ntype SectionSearchType = 'BySectionNo' | 'BySectionContains';\ntype LiteratureSearchType = 'ByLiteratureNo' | 'ByLiteratureContains';\ntype ChapterSearchType = 'ByChapterNo' | 'ByChapterContains';\ntype KuralSearchType =\n  | 'ByKuralNo'\n  | 'ByKuralContains'\n  | 'ByKuralStartsWith'\n  | 'ByKuralEndsWith';\ntype KuralDetailSearchType = 'ByKuralDetailContains';\ntype SearchTypes =\n  | KuralSearchType\n  | SectionSearchType\n  | LiteratureSearchType\n  | ChapterSearchType\n  | KuralDetailSearchType;\n\nexport type KuralDetail = Record<string, string>;\nexport type {\n  BaseType,\n  Kural,\n  Section,\n  Literature,\n  Chapter,\n  KuralMixin,\n  Category,\n  RootCategory,\n  CategoryBaseTypeMap,\n  SearchResult,\n  SearchTypes,\n};\n\nexport type SearchCategoryTypes = Category | 'detail' | 'all';\n\nexport enum FontSizeType {\n  TINY = 'TINY',\n  SMALL = 'SMALL',\n  MEDIUM = 'MEDIUM',\n  LARGE = 'LARGE',\n  BIG = 'BIG',\n}\nexport type BackgroundColorItem = { label: string; color: string };\nexport type AppDisplay = {\n  color: string;\n  background: BackgroundColorItem;\n};\nexport type UserPreference = {\n  display: AppDisplay;\n  language: {\n    primary: string;\n    secondary: string[];\n  };\n  fontSizeType: FontSizeType;\n  transilterators?: number[];\n};\n\nexport type UserFavourite = {\n  category: Exclude<Category, 'section' | 'literature'>;\n  datetime: Date;\n  id: number;\n};\n\nexport type User = {\n  id: string;\n  favorites: UserFavourite[];\n  preference: UserPreference;\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\nimport { Category } from './types';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n\nexport const CATEGORY_COLORS: Record<Category | 'default', string> = {\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n  default: 'blueviolet',\n};\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  FontSizeType,\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n\nexport const FONT_SIZE_MAP: Record<FontSizeType, number> = {\n  BIG: 24,\n  LARGE: 21,\n  MEDIUM: 18,\n  SMALL: 15,\n  TINY: 12,\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { isCategoryValidErr, COLLECTION_NAME_MAP, KuralDetail } from './';\n\nexport const getKurals = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Record<number, string>> => {\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(lang)\n    .get();\n  return (kuralSnapshotRef.data() || {}) as Record<number, string>;\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralIdsOfChapter = (chapter: number): number[] => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return kuralRangeIds;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  const transliteratorSnapRef = await firestore\n    .collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n    .get();\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ANONYOMOUS_USER } from 'src/state/settings';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  if (user.id !== ANONYOMOUS_USER.id) {\n    await firestore\n      .collection(COLLECTION_NAME_MAP.USER)\n      .doc(`${user.id}`)\n      .set(user);\n  }\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { getCategoryIds } from './category';\nimport { findChapterNoFromKuralNo } from './common';\nimport { Category, IndexMapType, RootCategory } from './types';\n\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\nexport type CategoryIdMapPartial = Partial<Record<Category, number>>;\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\nexport const findCategoryRouteMap = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): CategoryIdMapPartial => {\n  const { kural, chapter, literature, section } = filter;\n  const KURALS_CHAPTER = kural ? findChapterNoFromKuralNo(kural) : chapter;\n  return {\n    ...rootCategoryFinder(INDEX_MAP, {\n      chapter: KURALS_CHAPTER,\n      literature,\n      section,\n    }),\n    ...(kural ? { kural } : {}),\n  };\n};\n\nexport const convertCategoryRouteMapToString = (\n  filter: CategoryIdMapPartial\n): string => {\n  return (['section', 'literature', 'chapter', 'kural'] as Category[])\n    .filter((k) => filter[k as Category] !== undefined)\n    .map((k) => filter[k as Category])\n    .join('/');\n};\n\nexport const findCategoryRouteMapString = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): string => {\n  return convertCategoryRouteMapToString(\n    findCategoryRouteMap(INDEX_MAP, filter)\n  );\n};\n","import { Transliterator, User } from './types';\n\nexport const getUserPreferedLanguages = (user: User): string[] => {\n  const { primary, secondary } = user.preference.language;\n  return [primary, ...secondary];\n};\n\nexport const findTransliteratorsOfLanguage = (\n  language: string[],\n  tMap: Record<number, Transliterator>\n): Record<number, Transliterator> => {\n  if (!language.length) {\n    return tMap;\n  }\n  return Object.entries(tMap)\n    .filter(([id, transliterator]) =>\n      language.some((lang) => lang === transliterator.lang)\n    )\n    .reduce((state, [key, value]) => ({ ...state, [key]: value }), {});\n};\n\nexport type UserTransliteratorMap = [Transliterator[], Transliterator[]];\n\ntype getUserTransliteratorsType = (\n  u: User,\n  tMap: Record<number, Transliterator>\n) => UserTransliteratorMap;\nexport const getUserTransliterators: getUserTransliteratorsType = (\n  user,\n  transliteratorsMap\n) => {\n  const result: UserTransliteratorMap = [[], []];\n  const userLangs = getUserPreferedLanguages(user);\n  const userTMap = findTransliteratorsOfLanguage(userLangs, transliteratorsMap);\n  const userLikedTransliterators = user.preference?.transilterators || [];\n  if (userLikedTransliterators.length) {\n    const allowedTransliteratorIds = Object.keys(userTMap).map((t) =>\n      parseInt(t)\n    );\n    result[0] = userLikedTransliterators\n      .filter((t) => allowedTransliteratorIds.includes(t))\n      .map((t) => userTMap[t]);\n    result[1] = allowedTransliteratorIds\n      .filter((t) => !userLikedTransliterators.includes(t))\n      .map((t) => userTMap[t]);\n  } else {\n    result[0] = Object.values(userTMap);\n  }\n  return result;\n};\n","import { Category, SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  DISPLAY: 'DISPLAY_CONFIG',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport const ITEMS_COUNT_MAP: Record<Category, number> = {\n  kural: 1330,\n  chapter: 133,\n  literature: 13,\n  section: 3,\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\nexport * from './route';\nexport * from './user';\n"],"sourceRoot":""}