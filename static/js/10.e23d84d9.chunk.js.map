{"version":3,"sources":["views/components/kural/KuralSearch.tsx","views/pages/search/SearchChips.tsx","views/pages/search/search.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","alignItems","maxWidth","border","borderRadius","borderColor","fade","palette","grey","padding","color","primary","main","height","searchicon","cursor","clearIcon","input","flex","width","light","KuralSearch","props","debug","classes","inputRef","React","useRef","useKuralSearch","setSearchKey","debounced","useDebouncedCallback","value","useState","keyword","setKeyword","focus","setFocus","useEffect","callback","className","clsx","onClick","current","querySelector","InputBase","autoFocus","ref","placeholder","inputProps","onChange","e","text","target","onFocus","onSearchTap","onBlur","Fade","in","trim","length","searchFilter","paddingTop","spacing","paddingBottom","textAlign","margin","fontSize","minWidth","breakpoints","up","paddingLeft","SearchChips","filters","setFilters","search","useSelector","st","dispatch","useDispatch","hasStartsWith","filter","f","startsWith","filterOptions","label","SearchCategoryLabelMap","all","type","isShow","Set","results","map","r","size","section","literature","chapter","kural","detail","isSelected","userSelections","i","Chip","icon","Check","style","backgroundColor","CATEGORY_COLORS","setUserSelection","setAllUserSelections","marginTop","searchbar","flexGrow","kuralSearchItem","borderBottom","searchItem","paddingRight","searchItemAvatar","marginRight","SearchResultItem","result","component","innerContent","item","ListItem","Avatar","category","charAt","toUpperCase","id","Search","INDEX_MAP","kuralIndexMap","index","getOnClickRoute","useCallback","route","ROUTE_CONSTANTS","LIST_CATEGORY","findCategoryRouteMapString","useNavigation","navigateTo","List","isResultOfType","KuralCard","componentType","renderItem"],"mappings":"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","file":"static/js/10.e23d84d9.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\n// const SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: 'var(--app-color)',\n        '& .search-icon, & .searchbar': {\n          color: 'var(--app-color)',\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n      cursor: 'pointer',\n    },\n    clearIcon: {\n      cursor: 'pointer',\n      color: 'var(--app-color)',\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const [focus, setFocus] = React.useState(false);\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon\n        onClick={() => {\n          inputRef.current?.querySelector('input')?.focus();\n        }}\n        className={clsx(classes.searchicon, 'search-icon')}\n      />\n      <InputBase\n        autoFocus\n        ref={inputRef}\n        className={`searchbar ${classes.input}`}\n        placeholder='Search 43, agara'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          setFocus(true);\n          props.onSearchTap && props.onSearchTap();\n        }}\n        onBlur={() => setFocus(false)}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          className={classes.clearIcon}\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { Check } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setAllUserSelections, setUserSelection } from '../../../state/search';\nimport {\n  CATEGORY_COLORS,\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n} from './../../../lib/api';\nimport { AppState } from './../../../state';\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '&.highlight': {\n        '& svg': {\n          width: '0.7rem',\n          [theme.breakpoints.up('sm')]: {\n            width: '1.5rem',\n          },\n        },\n        '& .label': {\n          paddingLeft: theme.spacing(0.5),\n        },\n      },\n    },\n  },\n}));\n\nexport const SearchChips: React.FC<SearchChipsProps> = (\n  props: SearchChipsProps\n) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            {...(isSelected(f.type) ? { icon: <Check /> } : {})}\n            size='small'\n            className={clsx('search-chip', isSelected(f.type) && 'highlight')}\n            label={f.label}\n            color={'primary'}\n            classes={{ label: 'label' }}\n            style={{\n              backgroundColor:\n                CATEGORY_COLORS[\n                  f.type === 'all' || f.type === 'detail' ? 'default' : f.type\n                ],\n            }}\n            // variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport {\n  isResultOfType,\n  SearchResult,\n  CATEGORY_COLORS,\n  Category,\n  findCategoryRouteMapString,\n} from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state/reducers';\nimport KuralCard from 'src/views/components/kural/KuralCard';\nimport KuralSearch from 'src/views/components/kural/KuralSearch';\n\nimport { SearchChips } from './SearchChips';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  searchbar: {\n    flexGrow: 1,\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n  searchItem: {\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(0),\n    cursor: 'pointer',\n  },\n  searchItemAvatar: {\n    width: '2rem',\n    height: '2rem',\n    textAlign: 'center',\n    fontSize: '1rem',\n    marginRight: '0.5rem',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchResultItemProps = {\n  component?: React.ReactNode;\n  result: SearchResult;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  result,\n  label,\n  onClick,\n  component,\n}: SearchResultItemProps) => {\n  const classes = useStyles();\n  const innerContent = component ? component : <div>{result.item.value}</div>;\n  return (\n    <ListItem\n      key={`${label}${result.item.id}`}\n      onClick={onClick}\n      className={classes.searchItem}>\n      <Avatar\n        className={classes.searchItemAvatar}\n        style={{ backgroundColor: CATEGORY_COLORS[result.category] }}>\n        {label.charAt(0).toUpperCase()}\n      </Avatar>\n      {innerContent}\n    </ListItem>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const getOnClickRoute = React.useCallback(\n    (category: Category, id: number) => {\n      let route = ROUTE_CONSTANTS.LIST_CATEGORY;\n      if (INDEX_MAP) {\n        route += `/${findCategoryRouteMapString(INDEX_MAP, {\n          [category]: id,\n        })}`;\n      }\n      return route;\n    },\n    [INDEX_MAP]\n  );\n  const [navigateTo] = useNavigation();\n  const renderItem = (\n    item: SearchResult,\n    index: number\n  ): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <SearchResultItem\n          key={index}\n          result={item}\n          label='k'\n          onClick={navigateTo(getOnClickRoute('kural', item.item.id))}\n          component={\n            <KuralCard\n              componentType='span'\n              key={item.item.id}\n              kural={item.item}\n              className={classes.kuralSearchItem}\n            />\n          }\n        />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='ch'\n          onClick={navigateTo(getOnClickRoute('chapter', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='lit'\n          onClick={navigateTo(getOnClickRoute('literature', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='sec'\n          onClick={navigateTo(getOnClickRoute('section', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <KuralSearch className={classes.searchbar} />\n      <SearchChips />\n      <List>{search.results.map((item, i) => renderItem(item, i))}</List>\n    </div>\n  );\n};\n\nexport default Search;\n"],"sourceRoot":""}