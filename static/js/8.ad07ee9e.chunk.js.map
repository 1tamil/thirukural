{"version":3,"sources":["views/components/category-viewer/category-picker.tsx","views/components/category-viewer/category-list-item.tsx","views/components/category-viewer/category-viewer.tsx","views/components/category-viewer/category-viewer-container.tsx"],"names":["useStyles","makeStyles","theme","categoryFilterRoot","borderColor","categoryFilter","fontSize","lineHeight","paddingTop","paddingBottom","CATEGORY_ITEMS","CategoryPicker","props","classes","React","useState","length","setCategoryFilter","useEffect","onSelect","Select","variant","native","select","className","clsx","value","onChange","e","target","map","it","i","toUpperCase","listItem","cursor","position","borderRadius","spacing","WebkitTapHighlightColor","border","paddingLeft","color","palette","secondary","main","listIcon","display","justifyContent","alignItems","TreeListItem","level","hasNodes","isOpen","label","toggleNode","focused","onClick","active","ListItem","ev","ListItemText","disableTypography","primary","AnimatedExpandedIcon","isExpanded","treeMenuContainer","outlineStyle","list","CategoryViewer","debug","items","List","key","itemProps","categoryRoot","padding","filterContainer","textAlign","CategoryViewerContainer","history","useHistory","category","setCategory","TREE_DATA","setTreeData","useSelector","st","kuralIndexMap","SECTIONS","section","LITERATURES","literature","CHAPTERS","chapter","INDEX_MAP","index","useSubCategory","getLiteraturesBySection","getChaptersByLiterature","ChaptersOfLiterature","useCallback","secNo","litNo","ch","chIndex","id","toString","path","LiteraturesOfSection","lit","litIndex","nodes","chapterQueryParam","URLSearchParams","location","search","get","routeKey","pathname","replace","RegExp","ROUTE_CONSTANTS","LIST_CATEGORY","result","Object","values","s","sIndex","l","lIndex","getSectionNoByLiteratureNo","getLiteratureNoFromChapterNo","initialActiveKey","initialFocusKey","initialOpenNodes","split","substring","indexOf","getInitialOpenNodes","onClickItem","item","newRoute","lastItemSeparator","lastIndexOf","literatureRoute","currentRoute","push","data","hasSearch"],"mappings":"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","file":"static/js/8.ad07ee9e.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles, Select } from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { RootCategory } from './../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  categoryFilterRoot: {\n    '&:hover fieldset': {\n      borderColor: 'var(--app-color) !important',\n    },\n  },\n  categoryFilter: {\n    fontSize: '0.6rem',\n    lineHeight: '0.6rem',\n    paddingTop: 3,\n    paddingBottom: 3,\n  },\n}));\n\ntype CategoryPickerProps = {\n  className?: string;\n  onSelect?: (category: RootCategory) => void;\n};\n\nconst CATEGORY_ITEMS: RootCategory[] = ['section', 'literature', 'chapter'];\n\nexport const CategoryPicker: React.FC<CategoryPickerProps> = (\n  props: CategoryPickerProps\n) => {\n  const classes = useStyles();\n  const [categoryFilter, setCategoryFilter] = React.useState<RootCategory>(\n    CATEGORY_ITEMS[CATEGORY_ITEMS.length - 1]\n  );\n  React.useEffect(() => {\n    props.onSelect && props.onSelect(categoryFilter);\n  }, [categoryFilter, props]);\n  return (\n    <Select\n      variant='outlined'\n      native\n      classes={{\n        select: classes.categoryFilter,\n      }}\n      className={clsx(classes.categoryFilterRoot, props.className)}\n      value={categoryFilter}\n      onChange={(e) => setCategoryFilter(e.target.value as RootCategory)}>\n      {CATEGORY_ITEMS.map((it, i) => (\n        <option key={i} value={it}>\n          {/* TODO: */}\n          {it.toUpperCase()}\n        </option>\n      ))}\n    </Select>\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { TreeMenuItem } from 'react-simple-tree-menu';\n\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: 'var(--app-color)',\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport const TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n  onClick,\n  active,\n  ...props\n}: TreeMenuItem) => {\n  const classes = useStyles();\n\n  const toggleCategory = (ev: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    hasNodes && toggleNode && toggleNode();\n    onClick(ev);\n  };\n  return (\n    <ListItem\n      onClick={toggleCategory}\n      className={`${classes.listItem} level-${level} ${focused && 'on-focus'} ${\n        active && 'is-active'\n      }`}>\n      <ListItemText disableTypography primary={label}></ListItemText>\n      {hasNodes && (\n        <div className={classes.listIcon}>\n          <AnimatedExpandedIcon isExpanded={isOpen} />\n        </div>\n      )}\n    </ListItem>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport TreeMenu, { TreeMenuProps } from 'react-simple-tree-menu';\n\nimport { TreeListItem } from './category-list-item';\n\nconst useStyles = makeStyles((theme) => ({\n  treeMenuContainer: {\n    '&>div': {\n      outlineStyle: 'none',\n    },\n  },\n  list: {},\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n} & TreeMenuProps;\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = ({\n  className,\n  ...props\n}: CategoryViewerProps) => {\n  const classes = useStyles();\n  debug('CategoryViewer renders');\n  return (\n    <div className={classes.treeMenuContainer}>\n      <TreeMenu {...props}>\n        {({ items }) => (\n          <List className={classes.list}>\n            {items.map(({ key, ...itemProps }) => (\n              <TreeListItem key={key} {...itemProps} />\n            ))}\n          </List>\n        )}\n      </TreeMenu>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TreeNodeInArray, Item } from 'react-simple-tree-menu';\nimport {\n  RootCategory,\n  getSectionNoByLiteratureNo,\n  getLiteratureNoFromChapterNo,\n} from 'src/lib/api';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport { CategoryPicker } from './category-picker';\nimport { CategoryViewer } from './category-viewer';\n\nconst useStyles = makeStyles((theme) => ({\n  categoryRoot: {\n    padding: theme.spacing(1),\n  },\n  filterContainer: {\n    textAlign: 'left',\n  },\n}));\n\ntype CategoryViewerContainerProps = {\n  className?: string;\n};\n\nexport const CategoryViewerContainer: React.FC<CategoryViewerContainerProps> = (\n  props: CategoryViewerContainerProps\n) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [category, setCategory] = React.useState<RootCategory>('chapter');\n  const [TREE_DATA, setTreeData] = React.useState<TreeNodeInArray[]>([]);\n  const {\n    section: SECTIONS,\n    literature: LITERATURES,\n    chapter: CHAPTERS,\n    index: INDEX_MAP,\n  } = useSelector((st: AppState) => st.kuralIndexMap);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n  const ChaptersOfLiterature = React.useCallback(\n    (secNo: number, litNo: number): TreeNodeInArray[] =>\n      getChaptersByLiterature(litNo).map((ch, chIndex) => ({\n        key: ch.id.toString(),\n        label: ch.value,\n        index: chIndex,\n        path: `${secNo}/${litNo}/${ch.id}`,\n      })),\n    [getChaptersByLiterature]\n  );\n  const LiteraturesOfSection = React.useCallback(\n    (secNo: number): TreeNodeInArray[] =>\n      getLiteraturesBySection(secNo).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        path: `${secNo}/${lit.id}`,\n        nodes: ChaptersOfLiterature(secNo, lit.id),\n      })),\n    [ChaptersOfLiterature, getLiteraturesBySection]\n  );\n  const queryParams = new URLSearchParams(history.location.search);\n  const chapterQueryParam = queryParams.get('chapter');\n  const routeKey = history.location.pathname.replace(\n    // eslint-disable-next-line no-useless-escape\n    new RegExp(`${ROUTE_CONSTANTS.LIST_CATEGORY}(\\/)?`),\n    ''\n  );\n  const getInitialOpenNodes = () => {\n    const nodes = routeKey\n      .split('/')\n      .map((it) => routeKey.substring(0, routeKey.indexOf(it) + it.length));\n    if (nodes.length === 2 && nodes[0] === nodes[1]) {\n      nodes[1] = `${nodes[0]}/${nodes[1]}`;\n    }\n    return nodes;\n  };\n\n  React.useEffect(() => {\n    let result: TreeNodeInArray[] = [];\n    switch (category) {\n      case 'section':\n        result = Object.values(SECTIONS).map((s, sIndex) => ({\n          key: s.id.toString(),\n          label: s.value,\n          index: sIndex,\n          path: `${s.id}`,\n          nodes: LiteraturesOfSection(s.id),\n        }));\n        break;\n      case 'literature':\n        result = Object.values(LITERATURES).map((l, lIndex) => {\n          const secNo = getSectionNoByLiteratureNo(INDEX_MAP!!, l.id);\n          return {\n            key: l.id.toString(),\n            label: l.value,\n            index: lIndex,\n            path: `${secNo}/${l.id}`,\n            nodes: ChaptersOfLiterature(secNo, l.id),\n          };\n        });\n        break;\n      case 'chapter':\n        result = Object.values(CHAPTERS).map((ch, chIndex) => {\n          const litNo = getLiteratureNoFromChapterNo(INDEX_MAP!!, ch.id);\n          const secNo = getSectionNoByLiteratureNo(INDEX_MAP!!, litNo);\n          return {\n            key: ch.id.toString(),\n            label: ch.value,\n            index: chIndex,\n            path: `${secNo}/${litNo}/${ch.id}`,\n          };\n        });\n        break;\n    }\n    setTreeData(result);\n  }, [\n    LiteraturesOfSection,\n    category,\n    SECTIONS,\n    LITERATURES,\n    CHAPTERS,\n    ChaptersOfLiterature,\n    INDEX_MAP,\n  ]);\n\n  const onItemClick = (item: Item) => {\n    const newRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${item.path}`;\n    if (!item.hasNodes) {\n      const lastItemSeparator = item.key.lastIndexOf('/');\n      const chapter = item.key.substring(lastItemSeparator + 1);\n      const literatureRoute = item.key.substring(0, lastItemSeparator);\n      const currentRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${literatureRoute}?chapter=${chapter}`;\n      history.replace(currentRoute);\n      history.push(newRoute);\n    } else {\n      history.replace(newRoute);\n    }\n  };\n  return (\n    <div className={clsx(classes.categoryRoot, props.className)}>\n      <div className={classes.filterContainer}>\n        <CategoryPicker onSelect={setCategory} />\n      </div>\n      <CategoryViewer\n        initialActiveKey={routeKey}\n        initialFocusKey={\n          chapterQueryParam ? `${routeKey}/${chapterQueryParam}` : routeKey\n        }\n        initialOpenNodes={getInitialOpenNodes()}\n        onClickItem={onItemClick}\n        data={TREE_DATA}\n        hasSearch={false}\n      />\n    </div>\n  );\n};\n\nexport default CategoryViewerContainer;\n"],"sourceRoot":""}