{"version":3,"sources":["state/kuralIndex/index.ts","lib/api/category.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","lib/hooks/useCategory.tsx","views/components/kural/CategoryViewer.tsx","lib/hooks/useFavouriteDetector.tsx","views/components/common/ListView.tsx","views/components/kural/ChapterViewer.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/components/kural/LiteratureViewer.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/home.tsx","views/components/kural/RouteViewer.tsx","lib/hooks/useLongPress.tsx","views/pages/list/list.tsx","views/components/kural/KuralSearch.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","state/title/index.ts","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","views/pages/search/SearchChips.tsx","views/pages/search/search.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx","lib/api/index.ts","lib/api/firestore.ts","state/settings/index.ts"],"names":["getLiteratureNoFromChapterNo","INDEX_MAP","chapterNo","isCategoryValidErr","Number","Object","keys","litChapMap","find","litId","isItemInRange","getSectionNoByLiteratureNo","literatureNo","section","map","secId","litIndex","getCategoryIds","category","categoryId","result","literature","chapter","CATEGORY_COLORS","kural","default","getKuralIndex","firestore","a","firestoreGetCacheFirst","collection","COLLECTION_NAME_MAP","indexSnapshot","getDocData","key","docs","doc","id","data","getAllBaseItems","lang","collectionKey","sectionSnapshot","value","getAllSections","getAllChapter","getAllLiterature","findChapterNoFromKuralNo","kuralNo","Math","ceil","isResultOfType","type","resType","startsWith","getKural","kId","KURAL","get","kuralSnapshotRef","getKuralDetail","KURAL_DETAIL","snapshot","getKuralByIds","ids","kuralsRef","where","firebase","FieldPath","documentId","toString","sort","b","getKuralsOfChapter","startKuralNo","kuralRangeIds","Array","from","i","getAllTransliterators","TRANSLITERATOR","transliteratorSnapRef","getUserPreferences","userId","USER","limit","empty","Error","userDocRef","updateUserPreference","user","set","item","range","fillRange","out","push","isCategoryValid","toBaseTypeMap","list","reduce","oldVal","defaultState","transliterator","index","KuralIndexReducer","state","action","payload","thunkInitKuralIndexMapAndUserPref","dispatch","primary","preference","language","kuralIndex","sectionMap","literatureMap","chapterMap","transliteratorMap","t1","setUser","useNavigation","history","useHistory","route","useSubCategory","resultCategory","useFirestore","React","useState","setResult","PRIMARY_LANG","useSelector","st","preferences","KURAL_INDEX","kuralIndexMap","getLiteraturesBySection","useCallback","sectionId","k","getChaptersFromLiterature","c","useEffect","length","getRoutes","categories","favourites","routes","color","isFavourite","some","ch","useRoute","filter","inputFilter","setInputFilter","useDispatch","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","options","rootCategoryFinder","log","debug","sectionRoute","matchPath","literatureRoute","chapterRoute","kuralRoute","newFilter","params","undefined","JSON","stringify","listen","getRouteValue","output","input","favorites","itemIndex","indexOf","splice","updatedUserPref","updateUserFSAsync","status","keyword","results","filters","userSelections","detail","useKuralSearch","USER_LANG","addResults","searchTypes","forEach","items","parseInt","sectionNo","sortedResults","setSearchKeyword","types","isInteger","searchNumber","e","findSuitableSearchTypes","setSearchStatus","useCategory","navigateTo","useStyles","makeStyles","theme","favStyle","listItem","cursor","position","TreeListItem","level","hasNodes","isOpen","label","toggleNode","classes","focused","ListItem","className","style","paddingLeft","DEFAULT_PADDING","display","onClick","stopPropagation","ExpandMore","ChevronRight","root","gridTemplateColumns","idWrap","alignItems","palette","main","minWidth","opacity","textAlign","left","labelWrap","fontSize","spacing","ListView","props","List","divider","showDivider","onItemSelected","ChapterViewer","useParams","onItemSelection","flexDirection","userSelect","breakpoints","up","badgeContainer","background","height","lineHeight","borderRadius","justifyContent","padding","kuralWrapper","width","KuralCard","clsx","component","componentType","showBadge","dangerouslySetInnerHTML","__html","replace","transliteratorList","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","transliterators","setKural","kuralDetail","setKuralDetail","values","trans","t2","rank","t1r","t2r","useKuralDetail","transliteratorId","name","Chip","size","SwiperCore","use","Virtual","Keyboard","KuralDetailViewer","activeKuralNo","setActiveKuralNo","slideKuralIds","ITEMS_COUNT_MAP","newRoute","keyboard","grabCursor","initialSlide","spaceBetween","slidesPerView","allowSlideNext","virtual","onTransitionEnd","swiper","activeIndex","virtualIndex","renderSlide","kuralCard","ListKuralCard","openKuralDetail","kurals","ListKuralsOfChapter","LiteratureViewer","collapsableGroup","listItemTitle","marginLeft","listTitleBadge","chapFavorites","paddingRight","FavoritesViewer","itemNo","useBaseItem","getChapter","KURAL_IDS","CHAPTER_IDS","setKurals","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","onKuralSelected","then","chapterKuralMap","Map","it","chap","has","noRecordsFound","GroupTitleMaker","isVisible","title","badgeContent","selected","button","ListItemText","inset","Badge","badge","showZero","max","invisible","disablePadding","Collapse","in","timeout","chapterInfo","ListSubheader","disableSticky","marginTop","favoriteCard","margin","Home","Card","variant","CardHeader","CardContent","routeContainer","flexWrap","chipRoot","maxWidth","favoriteIcon","RouteChip","onLongPress","longPressEventHandlers","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","icon","backgroundColor","RouteViewer","toggleRouteFavourite","renderRight","ListPage","Container","disableGutters","renderRoutes","SEARCH_ROUTE","createStyles","border","borderColor","fade","grey","searchicon","clearIcon","flex","light","KuralSearch","inputRef","useRef","setSearchKey","debounced","useDebouncedCallback","setKeyword","path","isExact","isSearchRoute","focus","setFocus","current","querySelector","InputBase","ref","placeholder","inputProps","onChange","text","target","onFocus","onSearchTap","Fade","trim","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","toolbar","avatar","actionsGroup","searchbar","marginRight","flexGrow","iconButton","MyAppBar","AppBar","elevation","Toolbar","isHomeRoute","Avatar","Person","IconButton","goBack","KeyboardBackspace","actions","defalutTitle","appBar","bottom","top","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","currentRoute","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","initRoute","setRoute","Main","searchFilter","SearchChips","setFilters","search","hasStartsWith","f","filterOptions","SearchCategoryLabelMap","all","isShow","Set","r","isSelected","selection","kuralSearchItem","searchItem","searchItemAvatar","SearchResultItem","innerContent","charAt","toUpperCase","Search","renderItem","itemText","formControl","SettingsLabel","ROUTE_CONSTANTS","exact","fontSizeOptions","baseSize","count","offset","getFontSizeOptions","DEFAULT","FormControl","Select","applyPreference","assign","v","MenuItem","sections","getChaptersByLiterature","TREE_DATA","s","sIndex","nodes","lit","chIndex","hasSearch","itemProps","activeChapterNo","setActiveChapterNo","slideChapterIds","chId","to","App","settings","rootReducers","combineReducers","concat","PreferenceReducer","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","render","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER","source","pref","secondary"],"mappings":"0GAAA,gT,+HCUMA,EAA+B,SACnCC,EACAC,GAGA,OADAC,6BAAmB,UAAWD,GACvBE,OACLC,OAAOC,KAAKL,EAAUM,YAAYC,MAAK,SAACC,GAAD,OACrCC,wBAAcR,EAAWD,EAAUM,WAAWH,OAAOK,UAKrDE,EAA6B,SACjCV,EACAW,GACY,IAAD,EAEX,OADAT,6BAAmB,aAAcS,GAC1BR,OAAM,UACXC,OAAOC,KAAKL,EAAUY,SACnBC,KAAI,SAACC,GAAD,MAAoB,CACvBF,QAASE,EACTC,SAAUf,EAAUY,QAAQT,OAAOW,IAAQC,aAE5CR,MAAK,SAACM,GAAD,OAASJ,wBAAcE,EAAcE,EAAIE,oBANtC,aACX,EAK6DH,UAIpDI,EAAiB,SAC5BhB,EACAiB,EACAC,GAEAhB,6BAAmBe,EAAUC,GAC7B,IAAIC,EAA6C,eAC9CF,EAAWC,GAEd,OAAQD,GACN,IAAK,UACHE,EAAM,2BACDA,GADC,IAEJC,WAAYrB,EAA6BC,EAAWmB,EAAOE,WAE/D,IAAK,aACHF,EAAM,2BACDA,GADC,IAEJP,QAASF,EAA2BV,EAAWmB,EAAOC,cAK5D,OAAOD,GAGIG,EAAwD,CACnEV,QAAS,wBACTQ,WAAY,YACZC,QAAS,yBACTE,MAAO,UACPC,QAAS,e,yRCtDEC,EAAa,uCAAG,WAC3BC,GAD2B,qBAAAC,EAAA,sEAGCC,YAC1BF,EAAUG,WAAWC,sBAAoB9B,YAJhB,cAGrB+B,EAHqB,OAMrBC,EAAa,SACjBC,GADiB,OAKjBF,EAAcG,KAAK3B,MACjB,SAAC4B,GAAD,OAA0CA,EAAIC,KAAOH,MAZ9B,kBAcpB,CACLrB,QAAO,UAAEoB,EAAW,kBAAb,aAAE,EAAuBK,OAChC/B,WAAU,UAAE0B,EAAW,qBAAb,aAAE,EAA0BK,SAhBb,2CAAH,sDAoBbC,EAAe,uCAAG,WAC7BZ,EACAa,EACAC,GAH6B,eAAAb,EAAA,sEAKCC,YAC5BF,EAAUG,WAAWC,sBAAoBU,KANd,cAKvBC,EALuB,yBAQtBA,EAAgBP,KAAKrB,KAAI,SAACsB,GAAD,MAA2C,CACzEC,GAAIjC,OAAOgC,EAAIC,IACfM,MAAOP,EAAIE,OAAOE,QAVS,2CAAH,0DAcfI,EAAc,uCAAG,WAC5BjB,EACAa,GAF4B,SAAAZ,EAAA,sEAGCW,EAAgBZ,EAAWa,EAAM,WAHlC,mFAAH,wDAKdK,EAAa,uCAAG,WAC3BlB,EACAa,GAF2B,SAAAZ,EAAA,sEAGEW,EAAgBZ,EAAWa,EAAM,WAHnC,mFAAH,wDAKbM,EAAgB,uCAAG,WAC9BnB,EACAa,GAF8B,SAAAZ,EAAA,+EAIvBW,EAAgBZ,EAAWa,EAAM,eAJV,2CAAH,wDAOhBO,EAA2B,SAACC,GAAD,OACtCC,KAAKC,KAAKF,EAAU,KAETG,EAAiB,SAC5B/B,EACAgC,GAEA,IAAMC,EAAUjC,EAAOgC,KACvB,MAAa,YAATA,EACKC,EAAQC,WAAW,aAEf,UAATF,EACKC,EAAQC,WAAW,WAEf,WAATF,EACKC,EAAQC,WAAW,iBAEf,YAATF,EACKC,EAAQC,WAAW,aAEf,eAATF,GACKC,EAAQC,WAAW,kB,6NC1EjBC,EAAQ,uCAAG,WACtB5B,EACA6B,EACAhB,GAHsB,eAAAZ,EAAA,6DAKtBzB,6BAAmB,QAASqD,GALN,SAMS7B,EAC5BG,WAAWC,sBAAoB0B,OAC/BrB,IAF4B,UAErBoB,IACPE,MATmB,cAMhBC,EANgB,yBAWf,CAAEtB,GAAImB,EAAKb,MAAOgB,EAAiBrB,OAASE,KAX7B,2CAAH,0DAcRoB,EAAc,uCAAG,WAC5BjC,EACA6B,GAF4B,eAAA5B,EAAA,6DAI5BzB,6BAAmB,QAASqD,GAJA,SAKL7B,EACpBG,WAAWC,sBAAoB8B,cAC/BzB,IAFoB,UAEboB,IACPE,MARyB,cAKtBI,EALsB,yBASrBA,EAASxB,QATY,2CAAH,wDAYdyB,EAAa,uCAAG,WAC3BpC,EACAqC,EACAxB,GAH2B,mBAAAZ,EAAA,6DAKrBqC,EAAYtC,EAAUG,WAAWC,sBAAoB0B,OALhC,SAMJ5B,YACrBoC,EAAUC,MACRC,IAASxC,UAAUyC,UAAUC,aAC7B,KACAL,EAAIlD,KAAI,SAACuB,GAAD,OAAQA,EAAGiC,gBAVI,cAMrBR,EANqB,OAarB1C,EAAS0C,EAAS3B,KAAKrB,KAAI,SAACsB,GAAD,MAAU,CACzCC,GAAIjC,OAAOgC,EAAIC,IACfM,MAAOP,EAAIE,OAAOE,OAfO,kBAiBpBpB,EAAOmD,MAAK,SAAC3C,EAAG4C,GAAJ,OAAU5C,EAAES,GAAKmC,EAAEnC,OAjBX,2CAAH,0DAoBboC,EAAkB,uCAAG,WAChC9C,EACAL,EACAkB,GAHgC,iBAAAZ,EAAA,6DAKhCzB,6BAAmB,UAAWmB,GACxBoD,EAA+B,IAAfpD,EAAU,GAAU,EACpCqD,EAAgBC,MAAMC,KAAKD,MAAM,IAAItE,QAAQQ,KACjD,SAACgE,GAAD,OAAOJ,EAAeI,KARQ,kBAUzBf,EAAcpC,EAAWgD,EAAenC,IAVf,2CAAH,2D,sHCpDlBuC,EAAqB,uCAAG,WACnCpD,GADmC,eAAAC,EAAA,sEAICC,YAClCF,EAAUG,WAAWC,sBAAoBiD,iBALR,cAI7BC,EAJ6B,yBAO5BA,EAAsB9C,KAAKrB,KAAI,SAACsB,GAAD,oBACpCC,GAAIjC,OAAOgC,EAAIC,KACXD,EAAIE,YATyB,2CAAH,uD,oLCErB4C,EAAkB,uCAAG,WAChCvD,EACAwD,GAFgC,iBAAAvD,EAAA,sEAITC,YACrBF,EACGG,WAAWC,sBAAoBqD,MAC/BlB,MAAMC,IAASxC,UAAUyC,UAAUC,aAAc,KAAMc,GACvDE,MAAM,IARqB,YAI1BvB,EAJ0B,QAUnBwB,MAVmB,sBAWxB,IAAIC,MAAM,kBAXc,cAa1BC,EAAa1B,EAAS3B,KAAK,GAbD,+BAe9BE,GAAImD,EAAWnD,IACXmD,EAAWlD,SAhBe,2CAAH,wDAoBlBmD,EAAoB,uCAAG,WAClC9D,EACA+D,GAFkC,SAAA9D,EAAA,sEAI5BD,EACHG,WAAWC,sBAAoBqD,MAC/BhD,IAFG,UAEIsD,EAAKrD,KACZsD,IAAID,GAP2B,2CAAH,yD,8NCEpBhF,EAAgB,SAACkF,EAAcC,GAAf,OAC3BD,GAAQC,EAAM,IAAMD,GAAQC,EAAM,IAEvBC,EAAY,SAACD,GAExB,IADA,IAAME,EAAM,GACHjB,EAAIe,EAAM,GAAIf,GAAKe,EAAM,GAAIf,IACpCiB,EAAIC,KAAKlB,GAEX,OAAOiB,GAGIE,EAAkB,SAAC7C,EAAgBf,GAC9C,OAAQe,GACN,IAAK,UACH,OAzCqCvC,EAyCbwB,IAxCjB,GAAKxB,GAAW,EAyCzB,IAAK,aACH,OAzCwCQ,EAyCbgB,IAxCjB,GAAKhB,GAAc,GAyC/B,IAAK,UACH,OAzCqCC,EAyCbe,IAxCjB,GAAKf,GAAW,IAyCzB,IAAK,QACH,OAzCmC0B,EAyCbX,IAxCf,GAAKW,GAAW,KADW,IAACA,EAFE1B,EAFGD,EAFHR,GAmD9BV,EAAqB,SAACiD,EAAgBf,GACjD,IAAK4D,EAAgB7C,EAAMf,GACzB,MAAM,IAAIkD,MAAJ,UAAanC,EAAb,iBAA0Bf,EAA1B,gBAwBG6D,EAAgB,SAACC,GAC5B,OAAOA,EAAKC,QACV,SAACC,EAAQT,GAAT,mBAAC,eAAuBS,GAAxB,kBAAiCT,EAAKvD,GAAKuD,MAC3C,M,iCCjFJ,sCAAMU,EAA8B,CAClChF,QAAS,GACTT,QAAS,GACTQ,WAAY,GACZkF,eAAgB,GAChBC,MAAO,MAGIC,EAAoB,WAGZ,IAFnBC,EAEkB,uDAFKJ,EACvBK,EACkB,uCAClB,MAAoB,SAAhBA,EAAOvD,KACFuD,EAAOC,QAETF,I,kJCAIG,EAAoC,SAC/ClF,GAEA,8CAAO,WAAOmF,GAAP,2BAAAlF,EAAA,sEAGcsD,6BAAmBvD,EAAW,kBAH5C,cAGC+D,EAHD,OAIGqB,EAAYrB,EAAKsB,WAAWC,SAA5BF,QAJH,SAKoBrF,wBAAcC,GALlC,cAKCuF,EALD,YAOchB,gBAPd,UAOkCtD,yBAAejB,EAAWoF,GAP5D,2BAOCI,GAPD,mBAQiBjB,gBARjB,UASGpD,2BAAiBnB,EAAWoF,GAT/B,2BAQCK,GARD,mBAWclB,gBAXd,UAWkCrD,wBAAclB,EAAWoF,GAX3D,2BAWCM,GAXD,wBAY4BtC,gCAAsBpD,GAZlD,QAYC2F,EAZD,OAY8DlB,QACjE,SAACC,EAAQkB,GAAT,mBAAC,eAAqBlB,GAAtB,kBAA+BkB,EAAGlF,GAAKkF,MACvC,IAEFT,EAASU,YAAQ9B,IACjBoB,EAAS,CACP1D,KAAM,OACNwD,QAAS,CACP/F,QAASsG,EACT7F,QAAS+F,EACThG,WAAY+F,EACZZ,MAAOU,EACPX,eAAgBe,KAxBf,4CAAP,wD,oWChBWG,EAAmC,WAC9C,IAAMC,EAAUC,cAMhB,MAAO,CALY,SAACC,GAClB,OAAO,WACLF,EAAQ1B,KAAK4B,OCaNC,EAAqC,SAChD3G,EACAmB,EACAyF,GAEA,GAAIzF,GAAMnB,GAAY4G,EAAgB,CACpC,GAAI5G,IAAa4G,EACf,MAAM,IAAIvC,MAAM,aAElBpF,6BAAmBe,EAAUmB,GAG/B,IAAMV,EAAYoG,yBARf,EASyBC,IAAMC,SAAqB,IATpD,mBASI7G,EATJ,KASY8G,EATZ,KAUcC,EAAiBC,aAChC,SAACC,GAAD,OAAkBA,EAAGC,YAAYtB,WAAWC,YADtCF,QAGFwB,EAAcH,aAAY,SAACC,GAAD,OAAkBA,EAAGG,iBAE/CC,EAA0BT,IAAMU,aACpC,SAACC,GAEC,OADAxI,6BAAmB,UAAWwI,GACvB7C,oBAAUyC,EAAY/B,MAAQ3F,QAAQ8H,GAAW3H,UAAUF,KAChE,SAAC8H,GAAD,OAAOL,EAAYlH,WAAWuH,QAGlC,CAACL,EAAY/B,MAAO+B,EAAYlH,aAG5BwH,EAA4Bb,IAAMU,aACtC,SAACjI,GAEC,OADAN,6BAAmB,aAAcM,GAC1BqF,oBAAUyC,EAAY/B,MAAQjG,WAAWE,IAAQK,KACtD,SAACgI,GAAD,OAAOP,EAAYjH,QAAQwH,QAG/B,CAACP,EAAYjH,QAASiH,EAAY/B,QAoCpC,OAlCAwB,IAAMe,WAAU,WACd,IAAK3H,EAAO4H,QAAU3G,EACpB,GAAiB,YAAbnB,GAA6C,UAAnB4G,EAC5B,sBAAC,sBAAAlG,EAAA,kEACCsG,EADD,SACiBzD,6BAAmB9C,EAAWU,EAAI8F,GADnD,4EAAD,OAGK,CACiCI,EAA9BjH,QACR,GADsCiH,EAArB/B,MAEf,GAAiB,eAAbtF,GAAgD,YAAnB4G,EAC/BI,EAAUW,EAA0BxG,QAC/B,IACQ,YAAbnB,GACmB,eAAnB4G,EAIA,MAAM,IAAIvC,MAAM,0BAFhB2C,EAAUO,EAAwBpG,QAOzC,CACDjB,EAAO4H,OACP9H,EACA4G,EACAnG,EACAU,EACA8F,EACAI,EACAE,EACAI,IAGK,CAACzH,EAAQqH,EAAyBI,I,gBC9DrCI,EAGa,SAACC,EAAYC,GAE9B,IAAMC,EAAsB,CAC1B,CACE/G,GAAI,EACJM,MAAO,2BACPS,KAAM,MACNwE,MAAO,gBACPyB,MAAO9H,kBAAgBE,UAyC3B,OAtCIyH,EAAWrI,SACbuI,EAAOpD,KAAP,2BACKkD,EAAWrI,SADhB,IAEEuC,KAAM,UACNwE,MAAM,SAAD,OAAWsB,EAAWrI,QAAQwB,GAA9B,eACLgH,MAAO9H,kBAAgBV,WAGvBqI,EAAW7H,YACb+H,EAAOpD,KAAP,2BACKkD,EAAW7H,YADhB,IAEE+B,KAAM,aACNwE,MAAM,SAAD,OAAWsB,EAAW7H,WAAWgB,GAAjC,YACLgH,MAAO9H,kBAAgBF,cAGvB6H,EAAW5H,SACb8H,EAAOpD,KAAP,2BACKkD,EAAW5H,SADhB,IAEEgI,YAAaH,EAAW7H,QAAQiI,MAC9B,SAACC,GAAD,aAAQA,KAAE,UAAKN,EAAW5H,eAAhB,aAAK,EAAoBe,OAErCe,KAAM,UACNwE,MAAM,SAAD,OAAWsB,EAAW5H,QAAQe,GAA9B,UACLgH,MAAO9H,kBAAgBD,WAGvB4H,EAAW1H,OACb4H,EAAOpD,KAAP,2BACKkD,EAAW1H,OADhB,IAEE8H,YAAaH,EAAW3H,MAAM+H,MAAK,SAACX,GAAD,aAAOA,KAAC,UAAKM,EAAW1H,aAAhB,aAAK,EAAkBa,OAClEA,GAAI6G,EAAW1H,MAAMa,GACrBM,MAAM,mCAAD,OAAYuG,EAAW1H,MAAMa,IAClCe,KAAM,QACNwE,MAAM,eAAD,OAAiBsB,EAAW1H,MAAMa,IACvCgH,MAAO9H,kBAAgBC,SAGpB4H,GAoBIK,EAAyB,SAACC,GAAY,IAAD,EACWtB,aACzD,SAACC,GAAD,OAAkBA,EAAGG,iBADf3H,EADwC,EACxCA,QAASQ,EAD+B,EAC/BA,WAAYC,EADmB,EACnBA,QAAgBrB,EADG,EACVuG,MAGhCd,EAAO0C,aAAY,SAACC,GAAD,OAAkBA,EAAGC,eAJE,EAKVN,IAAMC,SAASyB,GALL,mBAKzCC,EALyC,KAK5BC,EAL4B,KAM1ClC,EAAUC,cACVhG,EAAYoG,yBACZjB,EAAW+C,cAR+B,EAShB7B,IAAMC,SAAmB,IATT,mBASzC6B,EATyC,KAS/BC,EAT+B,KAWhD/B,IAAMe,WAAU,WACdiB,EAAYtC,EAAQuC,SAASC,YAC5B,CAACxC,EAAQuC,SAASC,WAErBlC,IAAMe,WAAU,WACd,GAAI9I,EAAW,CAAC,IAELkK,EAILR,EAJFnI,MACS4I,EAGPT,EAHFrI,QACY+I,EAEVV,EAFFtI,WACSiJ,EACPX,EADF9I,QAEI0J,EAAiBJ,EACnBpH,mCAAyBoH,GACzBC,EACEhB,EAAM,2BA3CS,SACzBnJ,EACAuK,GAEA,IAAMtJ,EAAWb,OAAOC,KAAKkK,GAAShK,MACpC,SAACoI,GAAD,OAAe4B,EAAQ5B,MAEzB,OAAO3I,GAAaiB,EAEhBD,yBAAehB,EAAWiB,EAAUsJ,EAAQtJ,IAC5C,GAkCKuJ,CAAmBxK,EAAW,CAC/BqB,QAASiJ,EACTlJ,WAAYgJ,EACZxJ,QAASyJ,KAEPH,EAAW,CAAE3I,MAAO2I,GAAa,IAEvCO,IAAIC,MAAM,gBAAiBvB,GAC3BW,EAAYX,MAEb,CAACnJ,EAAW0J,IAEf,IAAMK,EAAc,SAACE,GACnB,IAAMU,EAAeC,YACnBX,EACA,6BAEIY,EAAkBD,YACtBX,EACA,6BAEIa,EAAeF,YACnBX,EACA,wBAEIc,EAAaH,YACjBX,EACA,sBAYIe,EAAY,CAChBpK,QAXc+J,EACZxK,OAAM,OAACwK,QAAD,IAACA,OAAD,EAACA,EAAcM,OAAOrK,cAC5BsK,EAUF9J,WATiByJ,EACf1K,OAAM,OAAC0K,QAAD,IAACA,OAAD,EAACA,EAAiBI,OAAO7J,iBAC/B8J,EAQF7J,QAPcyJ,EACZ3K,OAAM,OAAC2K,QAAD,IAACA,OAAD,EAACA,EAAcG,OAAO5J,cAC5B6J,EAMF3J,MALYwJ,EAAa5K,OAAM,OAAC4K,QAAD,IAACA,OAAD,EAACA,EAAYE,OAAO1J,YAAS2J,GAO9DT,IAAIC,MAAM,wBAAyBS,KAAKC,UAAUJ,IAClDrB,EAAeqB,IAGjBvD,EAAQ4D,QAAO,YAAmB,IAAhBpB,EAAe,EAAfA,SAChBQ,IAAIC,MAAM,mBAAoBT,GAC9BF,EAAYE,MAGd,IAAMqB,EAAmCvD,IAAMU,aAAY,WACzD,OAAOrI,OAAOC,KAAKwJ,GAAU1D,QAAO,SAACC,EAAQuC,GAC3C,IACI4C,EADEC,EAAQ7C,EAEd,OAAQ6C,GACN,IAAK,UACHD,EAAS3K,EAAQiJ,EAAS2B,IAC1B,MACF,IAAK,aACHD,EAASnK,EAAWyI,EAAS2B,IAC7B,MACF,IAAK,UACHD,EAASlK,EAAQwI,EAAS2B,IAC1B,MACF,IAAK,QAEHD,EAAS,CAAEnJ,GAAIyH,EAAS2B,GAAU9I,MAAO,IAG7C,OAAO,2BAAK0D,GAAZ,kBAAqBoF,EAAQD,MAC5B,MACF,CAAClK,EAASD,EAAYyI,EAAUjJ,IAwBnC,MAAO,CACLiJ,EACAb,EAAUsC,IAAiB7F,EAAKgG,WAxBL,SAAC9D,GAC5B,GAAmB,UAAfA,EAAMxE,MAAmC,YAAfwE,EAAMxE,KAAoB,CACtD,IACIsI,EACJ,IAFyB9D,EAAM0B,YAG7BoC,EAAS,sBAAOhG,EAAKgG,UAAU9D,EAAMxE,OAA5B,CAAmCwE,EAAMvF,SAC7C,CACL,IAAMsJ,EAAYjG,EAAKgG,UAAU9D,EAAMxE,MAAMwI,QAAQhE,EAAMvF,KAC3DqJ,EAAYhG,EAAKgG,UAAU9D,EAAMxE,OACvByI,OAAOF,EAAW,GAE9B,IAAMG,EAAqB,2BACtBpG,GADsB,IAEzBgG,UAAU,2BACLhG,EAAKgG,WADD,kBAEN9D,EAAMxE,KAAOsI,MAGlB5E,EAASiF,YAAkBpK,EAAWmK,QCzHtCxF,EAA4B,CAChC0F,QAAQ,EACRC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,eAAgB,CACd9K,SAAS,EACTE,OAAO,EACPX,SAAS,EACTQ,YAAY,EACZgL,QAAQ,IChFCC,EAAqC,WAChD,IAAMxF,EAAW+C,cACXlI,EAAYoG,yBACZwE,EAAYnE,aAChB,SAACC,GAAD,OAAkBA,EAAGC,YAAYtB,WAAWC,YAJQ,EAMbmB,aACvC,SAACC,GAAD,OAAkBA,EAAGG,iBADfnH,EAN8C,EAM9CA,WAAYR,EANkC,EAMlCA,QAASS,EANyB,EAMzBA,QAWvBkL,EAAa,SAACC,EAA4BR,GAC9CQ,EAAYC,QAAZ,uCAAoB,WAAOtJ,GAAP,2BAAAxB,EAAA,sDACZ+K,EAAwB,GADZ,KAEVvJ,EAFU,OAGX,cAHW,OAmBX,gBAnBW,QA8BX,mBA9BW,QAyCX,gBAzCW,2BAIRJ,EAAU4J,SAASX,IACrBhG,0BAAgB,QAASjD,GALf,iCAMOO,mBACjB5B,EACAiL,SAASX,GACTM,EAAUxF,SATA,OAMNnB,EANM,OAWZ+G,EAAM3G,KAAK,CACT5C,OACA6I,UACA/K,SAAU,QACV0E,SAfU,mDAoBR1F,EAAY0M,SAASX,GACvBhG,0BAAgB,UAAW/F,IAC7ByM,EAAM3G,KAAK,CACT5C,OACA6I,UACArG,KAAMtE,EAAQsL,SAASX,IACvB/K,SAAU,YA1BA,oCA+BRN,EAAegM,SAASX,GAC1BhG,0BAAgB,aAAcrF,IAChC+L,EAAM3G,KAAK,CACT5C,OACA6I,UACArG,KAAMvE,EAAWuL,SAASX,IAC1B/K,SAAU,eArCA,oCA0CR2L,EAAYD,SAASX,GACvBhG,0BAAgB,UAAW4G,IAC7BF,EAAM3G,KAAK,CACT5C,OACA6I,UACArG,KAAM/E,EAAQ+L,SAASX,IACvB/K,SAAU,YAhDA,6BAqDdyL,EAAM3D,OAAS,IAGX8D,EAAgBH,EAAMpI,MAAK,SAAC3C,EAAG4C,GACnC,OAAQ5C,EAAEV,UACR,IAAK,QACH,MAAsB,UAAfsD,EAAEtD,SAAuB,GAAK,EACvC,IAAK,UACH,MAAsB,YAAfsD,EAAEtD,SAAyB,GAAK,EACzC,IAAK,aACH,MAAsB,eAAfsD,EAAEtD,SAA4B,GAAK,EAC5C,IAAK,UACH,MAAsB,YAAfsD,EAAEtD,SAAyB,GAAK,MAG7C4F,EDnDC,CAAE1D,KAAM,mBAAoBwD,QCmDAkG,KApEb,4CAApB,wDA4EF,MAAO,CArFc,SAACb,GACpBnF,ED+C4B,SAACmF,GAC/B,MAAO,CAAE7I,KAAM,mBAAoBwD,QAASqF,GChDjCc,CAAiBd,IAC1B,IAAMQ,EA1BsB,SAACR,GAC/B,IAAMe,EAAuB,GAC7B,IACE,GAAI5M,OAAO6M,UAAUL,SAASX,IAAW,CACvC,IAAMiB,EAAeN,SAASX,GAC9BhG,0BAAgB,QAASiH,IAAiBF,EAAMhH,KAAK,aACrDC,0BAAgB,UAAWiH,IAAiBF,EAAMhH,KAAK,eACvDC,0BAAgB,aAAciH,IAC5BF,EAAMhH,KAAK,kBACbC,0BAAgB,UAAWiH,IAAiBF,EAAMhH,KAAK,gBAEzD,MAAOmH,IACT,OAAOH,EAceI,CAAwBnB,GAC5CnF,ED0CK,CAAE1D,KAAM,mBAAoBwD,QC1CP6F,IAC1B3F,EDiBK,CAAE1D,KAAM,mBAAoBwD,QAAS,KChB1C4F,EAAWC,EAAaR,IA6EL,SAACD,GACpBlF,EDnE2B,SAACkF,GAAD,MAA6C,CAC1E5I,KAAM,kBACNwD,QAASoF,GCiEEqB,CAAgBrB,OCpHhBsB,EAA+B,SAAClK,EAAMlB,GAAS,IAAD,EACpCuF,IAAd8F,EADkD,oBAE5C,QAATnK,GACF6C,0BAAgB7C,EAAMlB,GAexB,OAbuB,SAAC0D,GACtB,OAAQxC,GACN,IAAK,MACHmK,EAAW,SAAD,OAAU3H,EAAKvD,GAAf,eAAVkL,GACA,MACF,IAAK,UACHA,EAAW,SAAD,OAAU3H,EAAKvD,GAAf,YAAVkL,GACA,MACF,IAAK,aACHA,EAAW,SAAD,OAAU3H,EAAKvD,GAAf,UAAVkL,M,SCXFC,G,cCHYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRtE,MAAO,8BDCOoE,aAAW,SAACC,GAAD,MAAY,CACvCvH,KAAM,GACNyH,SAAU,CACRC,OAAQ,UACRC,SAAU,iBAaRC,EAAuC,SAAC,GAOzB,IAAD,IANlBC,aAMkB,MANV,EAMU,EALlBC,EAKkB,EALlBA,SACAC,EAIkB,EAJlBA,OACAC,EAGkB,EAHlBA,MACAC,EAEkB,EAFlBA,WAGMC,GADY,EADlBC,QAEgBd,KAChB,OACE,eAACe,EAAA,EAAD,CACEC,UAAS,UAAKH,EAAQT,SAAb,kBAA+BI,GACxCS,MAAO,CACLC,YAAaC,GAhBD,GAgB+BX,GAH/C,UAOGC,GACC,qBACEQ,MAAO,CAAEG,QAAS,gBAClBC,QAAS,SAAC1B,GACRc,GAAYG,GAAcA,IAC1BjB,EAAE2B,mBAJN,SAMGZ,EAAS,cAACa,EAAA,EAAD,IAAiB,cAACC,EAAA,EAAD,MAG9Bb,M,kBElDDX,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAM,GACNrB,SAAU,CACRC,OAAQ,UACRe,QAAS,OACTM,oBAAqB,YAEvBC,OAAQ,CACNP,QAAS,OACTQ,WAAY,SAEZ/F,MAAOqE,EAAM2B,QAAQtI,QAAQuI,KAC7B,WAAY,CACVC,SAAU,MACVC,QAAS,GACTC,UAAW,UAEb,QAAS,CACP3B,SAAU,WACV4B,KAAM,SAGVC,UAAW,CACTC,SAAU,QACVlB,YAAahB,EAAMmC,QAAQ,GAC3BxG,MAAO,iBAgCIyG,EArB2B,SAACC,GACzC,IAAM1B,EAAUb,IAChB,OACE,cAACwC,EAAA,EAAD,CAAMxB,UAAWuB,EAAMvB,UAAvB,SACGuB,EAAMpD,MAAM7L,KAAI,SAAC8E,GAAD,OACf,eAAC2I,EAAA,EAAD,CACEF,QAAS,CAAEY,KAAMZ,EAAQT,UACzBqC,QAASF,EAAMG,YAEfrB,QAAS,kBAAYkB,EAAMI,eAAevK,IAJ5C,UAKE,sBAAK4I,UAAWH,EAAQc,OAAxB,UACE,+BAAOvJ,EAAKvD,KACZ,cAAC,IAAD,OAEF,qBAAKmM,UAAWH,EAAQsB,UAAxB,SAAoC/J,EAAKjD,UANpCiD,EAAKvD,UCvBL+N,EAjBqC,SAClDL,GACI,IACI1O,EAAegP,cAAfhP,WADL,EAEawG,EAAe,aAAczH,OAAOiB,GAAa,WAA1DsL,EAFJ,oBAGG2D,EAAkBhD,EAAY,aAAclN,OAAOiB,IACzD,OACE,mCACE,cAAC,EAAD,CACEmN,UAAWuB,EAAMvB,UACjB7B,MAAOA,EACPwD,eAAgB,SAACvK,GAAD,OAAgB0K,EAAgB1K,S,sECflD4H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCE,SAAS,aACPgB,QAAS,OACT2B,cAAe,SACfC,WAAY,OACZpB,WAAY,SACX1B,EAAM+C,YAAYC,GAAG,MAAQ,CAC5B7C,OAAQ,YAGZ8C,eAAgB,CACdC,WAAYlD,EAAM2B,QAAQtI,QAAQuI,KAClCjG,MAAO,QACPwH,OAAQ,MACRjB,SAAU,QACVkB,WAAY,QACZC,aAAc,MACdnC,QAAS,OACToC,eAAgB,SAChB5B,WAAY,SACZ6B,QAAS,UACT1B,SAAU,OAEZ2B,aAAc,CACZC,MAAO,YAoCIC,GArB6B,SAACrB,GAC3C,IAAM1B,EAAUb,KAEhB,OACE,eAACe,EAAA,EAAD,CACEC,UAAWuB,EAAMvB,UACjBH,QAAS,CAAEY,KAAMoC,YAAKhD,EAAQT,WAC9B0D,UAAWvB,EAAMwB,eAAiB,KAHpC,UAIGxB,EAAMyB,WACL,qBAAKhD,UAAWH,EAAQsC,eAAxB,SAAyCZ,EAAMvO,MAAMa,KAEvD,qBACEwM,QAAS,kBAAYkB,EAAMlB,SAAWkB,EAAMlB,QAAQkB,EAAMvO,QAC1DgN,UAAWH,EAAQ6C,aACnBO,wBAAyB,CACvBC,OAAQ3B,EAAMvO,MAAMmB,MAAMgP,QAAQ,KAAM,eCrD5CnE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkE,mBAAoB,CAClB/D,OAAQ,OACR2C,WAAY,OACZS,QAASvD,EAAMmC,QAAQ,GACvB,wBAAyB,CACvBgC,aAAcnE,EAAMmC,QAAQ,KAGhCrO,MAAO,CACLyP,QAASvD,EAAMmC,QAAQ,GACvBiC,aAAc,QACdzI,MAAO,QACP0I,WAAY,IACZ,iBAAkB,CAChBnD,QAAS,SAGboD,gBAAiB,CACff,QAAS,EACTV,cAAe,SACfnB,WAAY,WAEZ,yBAA0B,CACxBQ,SAAU,QACViB,OAAQ,SAEV,aAAc,CACZjB,SAAU,QACVqC,WAAYvE,EAAMmC,QAAQ,IAC1BqC,cAAexE,EAAMmC,QAAQ,IAC7BJ,UAAW,UACX0C,sBAAuB,QACvBC,iBAAkB,OAClBC,cAAe,QA4CNC,GAlCiC,SAACvC,GAC/C,IAAM1B,EAAUb,KAD2D,ECvC3B,SAAC+E,GACjD,IAAM5Q,EAAYoG,yBAD8C,EAS5DK,aAAY,SAACC,GAAD,OAAkBA,KAJhBtB,EAL8C,EAG9DuB,YACEtB,WACEC,SAAYF,QAGiByL,EAR6B,EAQ9DhK,cAAiBjC,eAR6C,EAUtCyB,WAA6B,MAVS,mBAUzDxG,EAVyD,KAUlDiR,EAVkD,OAW1BzK,WACpC,MAZ8D,mBAWzD0K,EAXyD,KAW5CC,EAX4C,KAgChE,OAlBA3K,aAAgB,WACd,sBAAC,sBAAApG,EAAA,yDAE2B,kBAAf2Q,EAFZ,6BAGGE,EAHH,SAGkBlP,mBAAS5B,EAAW4Q,EAAYxL,GAHlD,8CAIG4L,EAJH,SAIwB/O,yBAAejC,EAAW4Q,GAJlD,iEAMGE,EAASF,GANZ,KAOGI,EAPH,UAOwB/O,yBAAejC,EAAW4Q,EAAWlQ,IAP7D,8EAAD,KAUC,CAACV,EAAW4Q,EAAYxL,IAOpB,CAACvF,EAAOkR,EANmBrS,OAAOuS,OAAOJ,GAC7C9I,QAAO,SAACmJ,GAAD,OAAWA,EAAMrQ,OAASuE,KACjCxC,MAAK,SAACgD,EAAIuL,GAAQ,IAAD,EACG,CAACvL,EAAGwL,KAAMD,EAAGC,MAAzBC,EADS,KACJC,EADI,KAEhB,OAAOD,GAAOC,EAAMD,EAAMC,EAAMD,GAAO,EAAI,MDWDE,CAAenD,EAAMvO,OAFQ,mBAEpEA,EAFoE,KAE7DkR,EAF6D,KAEhDF,EAFgD,KAG3E,OACE,qCACGhR,GACC,cAAC,GAAD,CACEA,MAAOA,EACPgN,UAAWH,EAAQ7M,MACnB+P,cAAc,QAElB,cAACvB,EAAA,EAAD,yBACExB,UAAWuB,EAAMvB,UACjBH,QAAS,CAAEY,KAAMZ,EAAQuD,qBACrB7B,GAHN,aAIG2C,GACCF,EAAgB1R,KAAI,gBAAOqS,EAAP,EAAG9Q,GAAsB+Q,EAAzB,EAAyBA,KAAzB,OAClB,eAAC7E,EAAA,EAAD,CAEEC,UAAWH,EAAQ2D,gBAFrB,UAGE,cAACqB,EAAA,EAAD,CACEC,KAAK,QACLnF,MAAOiF,EACP/J,MAAO,UACPmF,UAAW,wBAEb,qBAAKA,UAAW,UAAhB,SAA4BkE,EAAYS,OARnCA,aE3DnBI,IAAWC,IAAI,CAACC,IAASC,MAMzB,IA0CeC,GA1C6C,SAC1D5D,GAEA,IAAMrI,EAAUC,cACVuD,EAASmF,cACTrN,EAAU4J,SAAS1B,EAAO1J,OAH7B,EAIuCwG,IAAMC,SAASjF,GAJtD,mBAII4Q,EAJJ,KAImBC,EAJnB,KAKGC,EAAgBlP,MAAMC,KAAKD,MAAMmP,kBAAgBvS,OAAOlB,QAAQQ,KACpE,SAACgE,GAAD,OAAOA,EAAI,KAcb,OANAkD,IAAMe,WAAU,WACd,IAAMiL,EAAQ,sBAAkBJ,GAChCjJ,gBAAM,uBAAwBqJ,GAC9BtM,EAAQiK,QAAQqC,KACf,CAACJ,EAAelM,IAEdzB,0BAAgB,QAASjD,GAI5B,cAAC,IAAD,CACEiR,UAAU,EACVC,YAAY,EACZC,aAAcnR,EAAU,EACxBoR,aAAc,GACdC,cAAe,EACfC,eAAgBR,EAAcA,EAAc9K,OAAS,KAAO4K,EAC5DW,SAAO,EACPC,gBAAiB,SAACC,GAChBZ,EAAiBY,EAAOC,YAAc,IAT1C,SAWGZ,EAAchT,KAAI,SAAC0C,EAAKgD,GAAN,OA3BH,SAAChD,EAAagD,GAAd,OAClB,cAAC,IAAD,CAAuBmO,aAAcnO,EAArC,SACE,cAAC,GAAD,CAAahF,MAAOgC,KADJA,GA0BmBoR,CAAYpR,EAAKgD,QAd/C,MC/BLgH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCvH,KAAM,CACJ8K,QAASvD,EAAMmC,QAAQ,GACvBoC,WAAY,MACZ,wBAAyB,CACvBJ,aAAcnE,EAAMmC,QAAQ,KAGhCgF,UAAW,CACT5D,QAAS,OAQA6D,GAA8C,SACzD/E,GAEA,IAAM1B,EAAUb,KADb,EAEkB/F,IAAd8F,EAFJ,oBAGGwH,EAAkB,SAACvT,GAAD,OACtB+L,EAAW,eAAD,OAAgB/L,EAAMa,IAAhCkL,IACF,OACE,cAACyC,EAAA,EAAD,CAAMxB,UAAWH,EAAQlI,KAAzB,SACG4J,EAAMiF,OAAOlU,KAAI,SAAC8H,EAAG9D,GAAJ,OAChB,cAAC,GAAD,CACE0M,WAAW,EACXhD,UAAWH,EAAQwG,UAEnBrT,MAAOoH,EACPiG,QAASkG,GAFJnM,EAAEvG,UC7BJ4S,GAA0D,SACrElF,GACI,IAAD,EACclI,EAAe,UAAWkI,EAAM7P,UAAW,SAArD8U,EADJ,oBAEH,OAAO,cAAC,GAAD,CAAeA,OAAQA,KCFhCzB,IAAWC,IAAI,CAACC,IAASC,MAMlB,ICUQwB,GAjB2C,SACxDnF,GACI,IACIlP,EAAYwP,cAAZxP,QADL,EAEagH,EAAe,UAAWzH,OAAOS,GAAU,cAApD8L,EAFJ,oBAGG2D,EAAkBhD,EAAY,UAAWlN,OAAOS,IACtD,OACE,mCACE,cAAC,EAAD,CACE2N,UAAWuB,EAAMvB,UACjB7B,MAAOA,EACPwD,eAAgB,SAACvK,GAAD,OAAgB0K,EAAgB1K,S,gHCGlD4H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAM,GAINkG,iBAAkB,GAGlBhP,KAAM,CACJ,gBAAiB,CACfsJ,UAAW,OACXpG,MAAO,QACPyH,WAAY,OACZG,QAAQ,WAAD,OAAavD,EAAMmC,QAAQ,IAA3B,QAGXuF,cAAe,CACb,uBAAwB,CACtBvE,OAAQ,UAEV,mBAAoB,CAClBwE,WAAY3H,EAAMmC,QAAQ,OAG9ByF,eAAgB,CACd9F,QAAS,GACTI,SAAU,SACViB,OAAQ,OACRM,MAAO,QAET3P,MAAO,CACLyP,QAAQ,SAAD,OAAWvD,EAAMmC,QAAQ,GAAzB,MACP,qBAAsB,CACpBgC,aAAcnE,EAAMmC,QAAQ,KAGhC0F,cAAe,CACbtE,QAAS,EACT,OAAQ,CACNvC,YAAahB,EAAMmC,QAAQ,IAC3B2F,aAAc9H,EAAMmC,QAAQ,UA4JnB4F,GAlJyC,SACtD1F,GACI,IAAD,MC9DmC,SAAC7O,GAAc,IAAD,EACJkH,aAC9C,SAACC,GAAD,OAAkBA,EAAGG,iBADHmE,EADgC,EAC3CzL,GAAyBjB,EADkB,EACzBuG,MAM3B,MAAO,CAHsB,SAACkP,GAAD,OAAY/I,EAAM+I,IAAW,MACb,SAACvU,GAAD,OAC3CF,yBAAehB,EAAaiB,EAAUC,KDyDnBwU,CAAY,WAA1BC,EADJ,oBAEGjU,EAAYoG,yBAFf,EAMCK,aAAY,SAACC,GAAD,OAAkBA,EAAGC,eANlC,IAIDoD,UAAoBmK,EAJnB,EAIYrU,MAA2BsU,EAJvC,EAI8BxU,QAC/B0F,EALC,EAKDA,WALC,EAOyBgB,IAAMC,SAAkB,IAPjD,mBAOI+M,EAPJ,KAOYe,EAPZ,OAQuC/N,IAAMC,SAAN,UACxC8H,EAAMiG,cADkC,UARvC,mBAQIC,EARJ,KAQoBC,EARpB,OAW2ClO,IAAMC,SAAN,UAC5C8H,EAAMiG,cADsC,UAX3C,mBAWIG,EAXJ,KAWsBC,EAXtB,OAckB3O,IAAd8F,EAdJ,oBAeGc,EAAUb,KACV6I,EAAoB,SAACzQ,GACzB2H,EAAW,SAAD,OAAU3H,EAAKvD,GAAf,UAAVkL,IAEI+I,EAAkB,SAAC1Q,GACvB2H,EAAW,eAAD,OAAgB3H,EAAKvD,IAA/BkL,IAEFvF,IAAMe,WAAU,WACV8M,EAAU7M,OAAS,GACrBjF,wBAAcpC,EAAWkU,EAAW7O,EAAWC,SAASF,SAASwP,MAC/D,SAACvB,GACCe,EAAUf,QAIf,CAACrT,EAAWkU,EAAW7O,EAAWC,SAASF,UAC9C,IAAMyP,EAAkB,IAAIC,IAAwB,IACpDzB,EAAOtI,SAAQ,SAACgK,GACd,IAAMC,EAAO5T,mCAAyB2T,EAAGrU,IACxCmU,EAAgBI,IAAID,GAEjBH,EAAgB7Q,IAAIgR,EAApB,sBAA+BH,EAAgB9S,IAAIiT,IAAS,IAA5D,CAAiED,KADjEF,EAAgB7Q,IAAIgR,EAAM,CAACD,OAGjC,IAAMG,EAAiB,4CAEjBC,EAAkB,SACtBC,EACAlI,EACAmI,EACAC,GAJsB,OAMtB,eAAC1I,EAAA,EAAD,CACE2I,SAAUH,EACVvI,UAAWH,EAAQ+G,cACnB+B,QAAM,EACNtI,QAASA,EAJX,UAKE,cAACuI,GAAA,EAAD,CAAcC,OAAO,EAAMtQ,QAASiQ,IACpC,cAACM,GAAA,EAAD,CACEL,aAAcA,EACd5I,QAAS,CAAEkJ,MAAOlJ,EAAQiH,gBAC1BjM,MAAM,YACNmO,UAAU,EACVC,IAAK,GACLC,UAAWX,EANb,SAOE,qBAAKvI,UAAU,wBAEjB,qBAAKA,UAAU,gBAAf,SACGuI,EAAY,cAAC,KAAD,IAAiB,cAAC,KAAD,UAIpC,OACE,qBAAKvI,UAAW6C,YAAKtB,EAAMvB,UAAWH,EAAQY,MAA9C,SACE,eAACe,EAAA,EAAD,CAAMxB,UAAWH,EAAQlI,KAAMwR,gBAAc,EAA7C,UACGb,EACCb,GACA,WACEC,GAAiBD,KAEnB,SACAJ,EAAU7M,QAEZ,eAAC4O,GAAA,EAAD,CACEC,GAAI5B,EACJxH,MAAO,CAAEyD,cAAe+D,EAAiB,EAAI,GAC7CzH,UAAWH,EAAQ8G,iBACnB2C,QAAQ,OAJV,UAKGtB,EAAgBlD,KAAO,GACtB1O,MAAMC,KAAK2R,EAAgBlW,QAAQQ,KAAI,SAAC8H,GAAO,IAAD,EACtCmP,EAAcnC,EAAWhN,GAC/B,OACE,eAACoH,EAAA,EAAD,CACEsB,UAAU,MACV9C,UAAU,WAEVmJ,gBAAc,EAJhB,UAKGI,GACC,cAACC,GAAA,EAAD,CACExJ,UAAU,aACVyJ,eAAa,EACbpJ,QAAS,kBAAYwH,EAAkB0B,IAHzC,SAIGA,EAAYpV,QAVnB,UAcG6T,EAAgB9S,IAAIkF,UAdvB,aAcG,EAAwB9H,KAAI,SAAC8E,GAAD,OAC3B,cAAC,GAAD,CACE4I,UAAWH,EAAQ7M,MAEnBA,MAAOoE,EACPiJ,QAASyH,GAFJ1Q,EAAKvD,SAdTuG,MAsBa,IAAzB4N,EAAgBlD,MAAcuD,KAEhCC,EACCX,GACA,WACEC,GAAmBD,KAErB,WACAL,EAAY9M,QAEd,eAAC4O,GAAA,EAAD,CACEC,GAAI1B,EACJ1H,MAAO,CAAEyD,cAAeiE,EAAmB,EAAI,GAC/C3H,UAAWH,EAAQ8G,iBACnB2C,QAAQ,OAJV,UAKGhC,EAAY9M,OAAS,GACpB,cAAC,EAAD,CACEwF,UAAWH,EAAQkH,cACnB5I,MACEmJ,EAAYvR,OACTzD,KAAI,SAAC0I,GAAD,OAAQoM,EAAWpM,MACvBE,QAAO,SAACF,GAAD,OAAe,OAAPA,KAEpB2G,eAAgBkG,IAGI,IAAvBP,EAAY9M,QAAgB6N,WEhNjCrJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAM,CACJiJ,UAAWxK,EAAMmC,QAAQ,GACzB,iBAAkB,CAChBoB,QAASvD,EAAMmC,QAAQ,IAEzB,kBAAmB,CACjBoB,QAASvD,EAAMmC,QAAQ,MAG3BsI,aAAc,CACZC,OAAQ1K,EAAMmC,QAAQ,QA8BXwI,GAhBQ,WACrB,IAAMhK,EAAUb,KAChB,OACE,qBAAKgB,UAAWH,EAAQY,KAAxB,SACE,eAACqJ,GAAA,EAAD,CAAMC,QAAQ,WAAW/J,UAAWH,EAAQ8J,aAA5C,UAEE,cAACK,GAAA,EAAD,CAAYxB,MAAM,YAAYxI,UAAU,gBACxC,cAACiK,GAAA,EAAD,CAAajK,UAAU,eAAvB,SACE,cAAC,GAAD,CAAiBwH,QAAQ,Y,oBC3B7BxI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgL,eAAgB,CACd9J,QAAS,QAEXK,KAAM,CACJL,QAAS,OACT2B,cAAe,MACfS,eAAgB,QAChB5B,WAAY,SACZuJ,SAAU,QAEZC,SAAS,aACP3H,QAAS,YACTrB,SAAU,SACViB,OAAQ,SACRuH,OAAO,KAAD,OAAO1K,EAAMmC,QAAQ,IAArB,cAAiCnC,EAAMmC,QAAQ,IAA/C,SACLnC,EAAM+C,YAAYC,GAAG,MAAQ,CAC5BmI,SAAU,MAGdC,aAAc,CACZ3H,MAAO,OACPN,OAAQ,OACRuH,OAAQ,OAmBNW,GAAsC,SAAC,GAGtB,IAFrBnR,EAEoB,EAFpBA,MACAoR,EACoB,EADpBA,YAEM3K,EAAUb,KADI,EAEC/F,IAAd8F,EAFa,oBAGd0L,EC/CsC,SAACC,GAAwB,IAAdC,EAAa,uDAAR,IAAQ,EACxBlR,oBAAS,GADe,mBAC7DmR,EAD6D,KAC7CC,EAD6C,KAGpEtQ,qBAAU,WACR,IAAIuQ,EAMJ,OALIF,EACFE,EAAUC,OAAOC,WAAWN,EAAUC,GAEtCM,aAAaH,GAER,WACLG,aAAaH,MAEd,CAACJ,EAAUC,EAAIC,IAElB,IAAMM,EAAQhR,uBAAY,WACxB2Q,GAAkB,KACjB,IACGM,EAAOjR,uBAAY,WACvB2Q,GAAkB,KACjB,IAEH,MAAO,CACLO,YAAaF,EACbG,UAAWF,EACXG,aAAcH,EACdI,aAAcL,EACdM,WAAYL,GDoBiBM,EAAa,WAC1CjB,GAAeA,EAAYpR,MAG7B,OACE,cAACyL,EAAA,EAAD,uCACOzL,EAAM0B,YACP,CAAE4Q,KAAM,cAAC,KAAD,CAAU1L,UAAWH,EAAQyK,gBACrC,IACAG,GAJN,IAKE3F,KAAK,QACLnF,MAAOvG,EAAMjF,MACb0G,MAAO,UACPwF,QAAS,WACPjH,EAAMA,OAAS2F,EAAW3F,EAAMA,MAAjB2F,IAEjBkB,MAAO,CAAE0L,gBAAiBvS,EAAMyB,OAChCgF,QAAS,CAAEY,KAAMZ,EAAQuK,cAwBhBwB,GAnBiC,SAACrK,GAC/C,IAAM1B,EAAUb,KAD2D,EAElC/D,EAAS,IAFyB,mBAElEL,EAFkE,KAE1DiR,EAF0D,KAG3E,OACE,sBAAK7L,UAAW6C,YAAKhD,EAAQqK,eAAgB3I,EAAMvB,WAAnD,UACE,qBAAKA,UAAWH,EAAQY,KAAxB,SACG7F,EAAOtI,KAAI,SAAC8E,EAAMY,GAAP,OACV,cAAC,GAAD,CACEoB,MAAOhC,EAEPoT,YAAa,SAACpR,GAAD,OAAsByS,EAAqBzS,KADnDpB,QAKVuJ,EAAMuK,gBE1FP9M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAM,GACN7F,OAAQ,CACN6H,QAASvD,EAAMmC,QAAQ,QAiBZ0K,GAZiB,SAACxK,GAC/B,IAAM1B,EAAUb,KAChB,OACE,qCACE,cAACgN,GAAA,EAAD,CAAWC,gBAAc,EAACjM,UAAWH,EAAQjF,OAA7C,SACE,cAAC,GAAD,MAEF,qBAAKoF,UAAWH,EAAQY,KAAxB,SAA+ByL,YAAa3K,EAAMnI,MAAMwB,c,uJCFxDuR,GAAe,UAEfnN,GAAYC,aAAW,SAACC,GAAD,OAC3BkN,aAAa,CACX3L,KAAM,CACJL,QAAS,OACTQ,WAAY,SACZyJ,SAAU,IACVgC,OAAQ,YACR9J,aAAc,OACd+J,YAAaC,aAAKrN,EAAM2B,QAAQ2L,KAAK,KAAM,IAC3C/J,QAAS,cACT5H,MAAOqE,EAAM2B,QAAQtI,QAAQuI,KAC7BuB,OAAQ,SACR,UAAW,CACTiK,YAAapN,EAAM2B,QAAQtI,QAAQuI,KACnC,+BAAgC,CAC9BjG,MAAOqE,EAAM2B,QAAQtI,QAAQuI,QAInC2L,WAAY,CACV5R,MAAO0R,aAAKrN,EAAM2B,QAAQ2L,KAAK,KAAM,IACrCnN,OAAQ,WAEVqN,UAAW,CACTrN,OAAQ,WAEVpC,MAAO,CACL0P,KAAM,EACNlK,QAAS,UACTE,MAAO,OACP9H,MAAOqE,EAAM2B,QAAQtI,QAAQqU,YA+EpBC,GArEiC,SAACtL,GAC/CpF,gBAAM,eACN,IAAM0D,EAAUb,KACV9F,EAAUC,cACV2T,EAAWtT,IAAMuT,OAAuB,MAJ6B,EAKpDjP,IAAhBkP,EALoE,oBAMrEC,EAAYC,cAAqB,SAAC/Y,GACtC6Y,EAAa7Y,KACZ,KARwE,EAS7CqF,IAAMC,SAAS,IAT8B,mBASpEgE,EAToE,KAS3D0P,EAT2D,OAcjD3T,IAAMC,SAHV,wBACpB,UAAA4C,YAAUnD,EAAQuC,SAASC,SAAU,CAAE0R,KAAMjB,YAA7C,eAA8DkB,WAC9D,EACuCC,IAdkC,mBAcpEC,EAdoE,KAc7DC,EAd6D,KAgB3EhU,IAAMe,WAAU,WACd0S,EAAUvC,SAASjN,KAClB,CAACwP,EAAWxP,IAEfvE,EAAQ4D,QAAO,YAAkB,EAAfpB,WACCyQ,IACfgB,EAAW,IACXK,GAAS,IAETA,GAAS,MASb,OACE,sBAAKxN,UAAW6C,YAAKhD,EAAQY,KAAMc,EAAMvB,UAAWuN,GAAS,SAA7D,UACE,cAAC,KAAD,CACElN,QAAS,WAAO,IAAD,IACb,UAAAyM,EAASW,eAAT,mBAAkBC,cAAc,gBAAhC,SAA0CH,SAE5CvN,UAAW6C,YAAKhD,EAAQ4M,WAAY,iBAEtC,cAACkB,GAAA,EAAD,CACEC,IAAKd,EACL9M,UAAS,oBAAeH,EAAQ5C,OAChC4Q,YAAY,mBACZC,WAAY,CAAE,aAAc,UAC5BC,SAAU,SAACpP,GACT,IAAMqP,EAAOrP,EAAEsP,OAAO9Z,MACtBgZ,EAAWa,IAEb7Z,MAAOsJ,EACPyQ,QAAS,WAvBThV,EAAQuC,SAASC,WAAayQ,KAChChQ,gBAAM,mBACNjD,EAAQ1B,KAAK2U,KAuBT5K,EAAM4M,aAAe5M,EAAM4M,iBAG/B,cAACC,GAAA,EAAD,CAAM/E,KA/CsD,IAA1B5L,EAAQ4Q,OAAO7T,QA+CjD,SACE,cAAC,KAAD,CACEwF,UAAWH,EAAQ6M,UACnBrM,QAAS,WACP8M,EAAW,a,oBCnGRmB,GAZmC,SAAC,GAGzB,IAFxBC,EAEuB,EAFvBA,SACAxD,EACuB,EADvBA,OAEMyD,EAAUC,aAAiB,CAAER,OAAQlD,EAASA,SAAWpO,IAC/D,OACE,cAAC+R,GAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOvF,IAAKmF,EAA5C,SACGD,KCNDvP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2P,QAAS,CACPpM,QAAS,EACTD,eAAgB,gBAElBsM,OAAQ,CACNjU,MAAO,QACPgM,WAAY3H,EAAMmC,QAAQ,GAC1BsK,gBAAiBzM,EAAM2B,QAAQtI,QAAQuI,MAEzCiO,aAAc,GACdC,UAAW,CACTnI,WAAY3H,EAAMmC,QAAQ,GAC1B4N,YAAa/P,EAAMmC,QAAQ,GAC3B6N,SAAU,GAEZC,WAAY,CACV1M,QAAS,MACT,QAAS,CACPrB,SAAU,aAkDDgO,GAzC2B,SAAC7N,GACzCpF,gBAAM,YACN,IAAM0D,EAAUb,KACV9F,EAAUC,cAehB,OACE,qCACE,cAAC,GAAD,yBAAcyV,UAAU,QAAWrN,GAAnC,aACE,cAAC8N,GAAA,EAAD,CAAQxU,MAAM,cAAcyU,UAAW,EAAvC,SACE,eAACC,GAAA,EAAD,CAASvP,UAAWH,EAAQgP,QAA5B,UAlBY,wBAClB,UAAAxS,YAAUnD,EAAQuC,SAASC,SAAU,CAAE0R,KAAM,aAA7C,eAAqDC,WAAW,EAExDmC,GAKN,cAACC,GAAA,EAAD,CAAQzP,UAAWH,EAAQiP,OAA3B,SACE,cAACY,GAAA,EAAD,MALF,cAACC,EAAA,EAAD,CAAY3P,UAAWH,EAAQsP,WAAY9O,QAASnH,EAAQ0W,OAA5D,SACE,cAACC,GAAA,EAAD,CAAmBhV,MAAM,cAerB,cAAC,GAAD,CAAamF,UAAWH,EAAQmP,YAChC,sBAAKhP,UAAWH,EAAQkP,aAAxB,UACGxN,EAAMuO,QACP,cAACH,EAAA,EAAD,CACE3P,UAAWH,EAAQsP,WACnB9O,QAAS,kBAAYnH,EAAQ1B,KAAK,cAFpC,SAGE,cAAC,KAAD,CAAUqD,MAAM,yBAM1B,cAAC0U,GAAA,EAAD,Q,0CCpDAQ,GAAe,a,oBCbf/Q,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAM,CACJyO,SAAU,GAEZc,OAAQ,CACNC,OAAQ,EACRC,IAAK,OACLC,UAAW,OACXC,UAAW,qCA0CAC,GA1BqD,SAClE9O,GAEA,IAAM1B,EAAUb,KAChB,OACE,sBAAKgB,UAAW6C,YAAKhD,EAAQY,KAAMc,EAAMvB,WAAzC,UACE,cAACqP,GAAA,EAAD,CAAQ/P,SAAS,QAAQzE,MAAM,UAAUmF,UAAWH,EAAQmQ,OAA5D,SACE,cAACM,GAAA,EAAD,CACEnc,MAAOoN,EAAMgP,aACbxC,SAAU,SAACyC,EAAGrc,GAAJ,OAA4BoN,EAAMwM,SAAS5Z,IACrD6L,UAAWH,EAAQY,KAHrB,SAIGc,EAAMpD,MAAM7L,KAAI,SAAC8E,EAAMY,GAAP,OACf,cAACyY,GAAA,EAAD,CACE9Q,MAAOvI,EAAKuI,MACZxL,MAAOiD,EAAKgC,MACZsS,KAAMtU,EAAKsU,MACN1T,UAKb,cAACuX,GAAA,EAAD,QC5CAvQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAM,OAIFiQ,GAAiB,CACrB,CACEhF,KAAM,cAAC,KAAD,IACNtS,MAAO,IACPuG,MAAO,QAET,CACE+L,KAAM,cAAC,KAAD,IACNtS,MAAO,QACPuG,MAAO,SAgEIgR,GA7CuC,SACpDpP,GAEA,IAAMqP,EAAWC,YAAc,KACzBC,EAAWD,YAAc,UACzBpV,EAAWsV,cACXzY,EAAW+C,cAEX2V,EAAYxX,IAAMU,aACtB,kBACU,OAAR0W,QAAQ,IAARA,OAAA,EAAAA,EAAUvD,SACNqD,GAAe,GAAGtX,OACV,OAAR0X,QAAQ,IAARA,OAAA,EAAAA,EAAUzD,SACVqD,GAAe,GAAGtX,MAClBqC,EAASC,WACf,CAACkV,EAAUE,EAAUrV,EAASC,WAb7B,EAeuBlC,IAAMC,SAASuX,KAftC,mBAeI5X,EAfJ,KAeW6X,EAfX,KAgBHzX,IAAMe,WAAU,WACd0W,EAASD,OACR,CAACA,EAAWvV,IACf,IAAMoE,EAAUb,KAnBb,EAoBkB/F,IAAd8F,EApBJ,oBAiCH,OACE,cAAC,GAAD,CACEZ,MAAOuS,GACPH,aAAcnX,EACd2U,SAhBgB,SAAC3U,GAGnB,GAFA6X,EAAS7X,GACT2F,EAAW3F,EAAX2F,GACI2R,GAAe,GAAGtX,QAAUA,EAC9Bd,EFlDG,CAAE1D,KAAM,qBEmDN,CAAC,IAAD,EACC+K,EAAK,UAAG+Q,GAAe1e,MAAK,SAACkW,GAAD,OAAQA,EAAG9O,QAAUA,YAA5C,aAAG,EAAiDuG,MAC3DA,GACFrH,EFnEC,CACL1D,KAAM,WACNwD,QEiEsBuH,MASpBK,UAAWH,EAAQY,QClEVyQ,GAZmC,SAChD3P,GACI,IAAD,EACH,OACE,qCACE,cAAC,GAAD,IACC2K,YAAY,UAAC3K,EAAMnI,aAAP,aAAC,EAAawB,QAC3B,cAAC,GAAD,QCMAoE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiS,aAAc,CACZ1N,WAAYvE,EAAMmC,QAAQ,GAC1BqC,cAAexE,EAAMmC,QAAQ,GAC7BJ,UAAW,QACX,iBAAkB,CAChBoB,OAAQ,MACRuH,OAAQ,cACRxI,SAAU,QACVL,SAAU,OACV,QAAQ,aACN4B,MAAO,OACPN,OAAQ,QACPnD,EAAM+C,YAAYC,GAAG,MAAQ,CAC5BS,MAAO,SACPN,OAAQ,iBAOL+O,GAA0C,SACrD7P,GAEA,IAAM1B,EAAUb,KADb,EAE2BxF,IAAMC,SAAwB,IAFzD,mBAEIkE,EAFJ,KAEa0T,EAFb,KAGGC,EAAS1X,aAAY,SAACC,GAAD,OAAkBA,EAAGyX,UAC1ChZ,EAAW+C,cACjB7B,IAAMe,WAAU,WACd,IAAMgX,EAAgB,SAAC9T,GAAD,OACpB6T,EAAO3T,QAAQzC,QAAO,SAACsW,GAAD,OAAOA,EAAE1c,WAAW2I,MAAUjD,OAAS,GACzDiX,EAA+B,CACnC,CACE9R,MAAO+R,yBAAuBC,IAC9B/c,KAAM,MACNgd,OAAQ,IAAIC,IAAIP,EAAO5T,QAAQpL,KAAI,SAACwf,GAAD,OAAOA,EAAEld,SAAOkQ,KAAO,GAE5D,CACEnF,MAAO+R,yBAAuBrf,QAC9BuC,KAAM,UACNgd,OAAQL,EAAc,cAExB,CACE5R,MAAO+R,yBAAuB7e,WAC9B+B,KAAM,aACNgd,OAAQL,EAAc,iBAExB,CACE5R,MAAO+R,yBAAuB5e,QAC9B8B,KAAM,UACNgd,OAAQL,EAAc,cAExB,CACE5R,MAAO+R,yBAAuB1e,MAC9B4B,KAAM,QACNgd,OAAQL,EAAc,YAExB,CACE5R,MAAO+R,yBAAuB7T,OAC9BjJ,KAAM,SACNgd,OAAQL,EAAc,mBAG1BF,EAAWI,KACV,CAACH,IACJ,IAAMS,EAAa,SAACnd,GAClB,MAAa,QAATA,EAEA0c,EAAO1T,eAAP,SACA0T,EAAO1T,eAAP,YACA0T,EAAO1T,eAAP,SACA0T,EAAO1T,eAAP,OACA0T,EAAO1T,eAAP,OAGK0T,EAAO1T,eAAehJ,IAWjC,OACE,qBAAKoL,UAAWH,EAAQsR,aAAxB,SACGxT,EACEzC,QAAO,SAACsW,GAAD,OAAOA,EAAEI,UAChBtf,KAAI,SAACkf,EAAGlb,GAAJ,OACH,cAACuO,EAAA,EAAD,CAEEC,KAAK,QACL9E,UAAU,cACVL,MAAO6R,EAAE7R,MACT9E,MAAO,UACPoF,MAAO,CACL0L,gBACE5Y,kBACa,QAAXye,EAAE5c,MAA6B,WAAX4c,EAAE5c,KAAoB,UAAY4c,EAAE5c,OAG9DmV,QAASgI,EAAWP,EAAE5c,MAAQ,UAAY,WAC1CyL,QAAS,SAAC1B,GAAD,OAzBH,SAAC/J,G5BrBiB,IANlClC,EACAsf,E4B4BI1Z,EADW,QAAT1D,G5B5BNlC,E4B6B8BkC,E5B5B9Bod,G4B4BqCV,EAAO1T,eAAehJ,G5B1BpD,CAAEA,KAAM,mBAAoBwD,QAAS,CAAC1F,EAAUsf,KAMhD,CAAEpd,KAAM,sBAAuBwD,S4BsBH2Z,EAAW,SAqBd1R,CAAQmR,EAAE5c,QAZ3B0B,SCrGX0I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAM,CACJiJ,UAAWxK,EAAMmC,QAAQ,GACzBoB,QAASvD,EAAMmC,QAAQ,IAEzB4Q,gBAAiB,CACfrI,OAAQ,EACRnH,QAAS,EACTa,aAAc,QAEhB4O,WAAY,CACVhS,YAAahB,EAAMmC,QAAQ,GAC3B2F,aAAc9H,EAAMmC,QAAQ,GAC5BhC,OAAQ,WAEV8S,iBAAkB,CAChBxP,MAAO,OACPN,OAAQ,OACRpB,UAAW,SACXG,SAAU,OACV6N,YAAa,cAcXmD,GAAoD,SAAC,GAK7B,IAJ5Bxf,EAI2B,EAJ3BA,OACA+M,EAG2B,EAH3BA,MACAU,EAE2B,EAF3BA,QACAyC,EAC2B,EAD3BA,UAEMjD,EAAUb,KACVqT,EAAevP,GAAwB,8BAAMlQ,EAAOwE,KAAKjD,QAC/D,OACE,eAAC4L,EAAA,EAAD,CAEEM,QAASA,EACTL,UAAWH,EAAQqS,WAHrB,UAIE,cAACzC,GAAA,EAAD,CACEzP,UAAWH,EAAQsS,iBACnBlS,MAAO,CAAE0L,gBAAiB5Y,kBAAgBH,EAAOF,WAFnD,SAGGiN,EAAM2S,OAAO,GAAGC,gBAElBF,IATH,UACU1S,GADV,OACkB/M,EAAOwE,KAAKvD,MAqFnB2e,GAxEuB,SAACjR,GACrC,IAAM1B,EAAUb,KACVsS,EAAS1X,aAAY,SAACC,GAAD,OAAkBA,EAAGyX,UAFY,EAGvCrY,IAAd8F,EAHqD,oBAgE5D,OACE,sBAAKiB,UAAW6C,YAAKtB,EAAMvB,UAAWH,EAAQY,MAA9C,UACE,cAAC,GAAD,IACA,cAACe,EAAA,EAAD,UAAO8P,EAAO5T,QAAQpL,KAAI,SAAC8E,EAAMd,GAAP,OA/DX,SACjBc,EACAY,GAEA,OAAIrD,yBAAeyC,EAAM,UAAYka,EAAO1T,eAAe5K,MAEvD,cAAC,GAAD,CAEEJ,OAAQwE,EACRuI,MAAM,IACNU,QAAStB,EAAW,eAAD,OAAgB3H,EAAKA,KAAKvD,KAC7CiP,UACE,cAAC,GAAD,CACEC,cAAc,OAEd/P,MAAOoE,EAAKA,KACZ4I,UAAWH,EAAQoS,iBAFd7a,EAAKA,KAAKvD,KAPdmE,GAePrD,yBAAeyC,EAAM,YAAcka,EAAO1T,eAAe9K,QAEzD,cAAC,GAAD,CAEE6M,MAAM,KACNU,QAAStB,EAAW,SAAD,OAAU3H,EAAKA,KAAKvD,GAApB,WACnBjB,OAAQwE,GAHHY,GAQTrD,yBAAeyC,EAAM,eACrBka,EAAO1T,eAAe/K,WAGpB,cAAC,GAAD,CAEE8M,MAAM,MACNU,QAAStB,EAAW,SAAD,OAAU3H,EAAKA,KAAKvD,GAApB,aACnBjB,OAAQwE,GAHHY,GAOPrD,yBAAeyC,EAAM,YAAcka,EAAO1T,eAAevL,QAEzD,cAAC,GAAD,CAEEsN,MAAM,MACNU,QAAStB,EAAW,SAAD,OAAU3H,EAAKA,KAAKvD,GAApB,gBACnBjB,OAAQwE,GAHHY,GAUJ,KAKkCya,CAAWrb,EAAMd,Y,8BCxHxD0I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAM,GACNrJ,KAAM,GACNsb,SAAU,CACRtR,SAAU,OAEZuR,YAAa,CACX/I,OAAQ1K,EAAMmC,QAAQ,GACtBN,SAAU,SAIR6R,GACO,YCZAC,GACL,IAOKjY,GAAwB,CACnC,CACEwS,KAAMyF,GACN/P,UAAWoO,GACXtW,OAAQ,CACN,CACEwS,KAXE,UAYFtK,UAAW0P,GACXM,OAAO,GAOT,CACE1F,KAnBI,YAoBJtK,UDSkC,SAACvB,GACzC,IAAM1B,EAAUb,KACV1G,EAAW+C,cACT7C,EAAeoB,aAAY,SAACC,GAAD,OAAkBA,EAAGC,eAAhDtB,WACFua,EAnBmB,SACzBC,EACAC,GAKA,IAHc,IADdC,EACa,uDADJ,EAEHtgB,EAAS,GACXkS,EAAOkO,EACJC,EAAQ,GACbrgB,EAAO4E,KAAKsN,GACZA,GAAcoO,EACdD,IAEF,OAAOrgB,EAOgCugB,CACrCC,IAAQ5a,WAAW4I,SAAW,EAC9B,IAMF,OACE,qBAAKpB,UAAWuB,EAAMvB,UAAtB,SACE,cAACwB,EAAA,EAAD,UACE,eAACzB,EAAA,EAAD,CAAUC,UAAWH,EAAQzI,KAA7B,UACE,cAACwR,GAAA,EAAD,CACE/I,QAAS,CAAEtH,QAASsH,EAAQ6S,UAC5Bna,QAASqa,KAEX,cAACS,GAAA,EAAD,CAAarT,UAAWH,EAAQ8S,YAAhC,SACE,cAACW,GAAA,EAAD,CACEnf,MAAOqE,EAAW4I,SAClB2M,SAAU,SAACpP,GAAD,OAfAyC,EAe0BzC,EAAEsP,OAAO9Z,WAdvDmE,EAASib,YAAgB1hB,OAAO2hB,OAAOhb,EAAY,CAAE4I,eADlC,IAACA,GAaZ,SAGG2R,EAAgBzgB,KAAI,SAACmhB,GAAD,OACnB,cAACC,GAAA,EAAD,CAAkBvf,MAAOsf,EAAzB,SACGA,GADYA,kBCjCvBX,OAAO,GAET,CACE1F,KA3BA,QA4BAtK,UAAWiJ,GACXnR,OAAQ,CACN,CACEwS,KAAM,gBAENtK,U5BUiD,SAC3DvB,GAEA,IAAM1B,EAAUb,IACV2U,EAAW/Z,aAAY,SAACC,GAAD,OAAkBA,EAAGG,cAAc3H,WAF7D,EAG0DgH,IAH1D,mBAGMY,EAHN,KAG+B2Z,EAH/B,KAKGC,EAA+BhiB,OAAOuS,OAAOuP,GAAUrhB,KAC3D,SAACwhB,EAAGC,GAAJ,MAAgB,CACdrgB,IAAKogB,EAAEjgB,GAAGiC,WACV6J,MAAOmU,EAAE3f,MACT6D,MAAO+b,EACPC,MAAO/Z,EAAwB6Z,EAAEjgB,IAAIvB,KAAI,SAAC2hB,EAAKzhB,GAAN,MAAoB,CAC3DkB,IAAKugB,EAAIpgB,GAAGiC,WACZ6J,MAAOsU,EAAI9f,MACX6D,MAAOxF,EACPwhB,MAAOJ,EAAwBK,EAAIpgB,IAAIvB,KAAI,SAAC0I,EAAIkZ,GAAL,MAAkB,CAC3DxgB,IAAKsH,EAAGnH,GAAGiC,WACX6J,MAAO3E,EAAG7G,MACV6D,MAAOkc,cAMf,OACE,cAAC,IAAD,CAAUpgB,KAAM+f,EAAWM,WAAW,EAAtC,SACG,gBAAGhW,EAAH,EAAGA,MAAH,OACC,cAACqD,EAAA,EAAD,CAAMxB,UAAWH,EAAQlI,KAAzB,SACGwG,EAAM7L,KAAI,gBAAGoB,EAAH,EAAGA,IAAQ0gB,EAAX,8BACT,cAAC,EAAD,eAA4BA,GAAT1gB,Y4BvCnBof,OAAO,GAET,CACE1F,KAAM,4BACNtK,UAAW4D,GACXoM,OAAO,GAET,CACE1F,KAAM,4BACNtK,UAAWlB,EACXkR,OAAO,GAET,CACE1F,KAAM,uBACNtK,UlBjDyD,SACnEvB,GACI,IACIzO,EAAY+O,cAAZ/O,QACFpB,EAAY0M,SAAStL,GACrBoG,EAAUC,cAHb,EAI2CK,IAAMC,SAAS/H,GAJ1D,mBAII2iB,EAJJ,KAIqBC,EAJrB,KAKGC,EAAkBne,MAAMC,KAAKD,MAAMmP,kBAAgBzS,SAAShB,QAAQQ,KACxE,SAACgE,GAAD,OAAOA,EAAI,KAEbkD,IAAMe,WAAU,WACd,IAAMiL,EAAQ,gBAAY6O,EAAZ,UACdlY,gBAAM,uBAAwBqJ,GAC9BtM,EAAQiK,QAAQqC,KACf,CAAC6O,EAAiBnb,IAMrB,OACE,qBAAK8G,UAAWuB,EAAMvB,UAAtB,SACE,cAAC,IAAD,CACEyF,UAAU,EACVC,YAAY,EACZC,aAAcjU,EAAY,EAC1BkU,aAAc,GACdC,cAAe,EACfC,eACEyO,EAAgBA,EAAgB/Z,OAAS,KAAO6Z,EAElDtO,SAAO,EACPC,gBAAiB,SAACC,GAChBqO,EAAmBrO,EAAOC,YAAc,IAX5C,SAaGqO,EAAgBjiB,KAAI,SAACkiB,EAAMxc,GAAP,OApBP,SAACwc,EAAcxc,GAAf,OAClB,cAAC,IAAD,CAAwBmO,aAAcnO,EAAtC,SACE,cAAC,GAAD,CAAqBtG,UAAW8iB,KADhBA,GAmBwBpO,CAAYoO,EAAMxc,WkBepD8a,OAAO,GAET,CACE1F,KAAM,qBACNtK,UAAWqC,GACX2N,OAAO,GAET,CACE1F,KAAM,SAENtK,UAAW,kBACT,cAAC,IAAD,CAAU2R,GAAG,mBAEf3B,OAAO,KAIb,CACE1F,KAAMyF,GACNC,OAAO,EACPhQ,UAAW+G,IAEb,CACEuD,KAAM,KAENtK,UAAW,kBAA0B,cAAC,IAAD,CAAU2R,GAAG,W,UCjFpDzV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuB,KAAK,eACFvB,EAAM+C,YAAYC,GAAG,MAAQ,CAC5Bd,SAAU,YAsBDsT,GAjBO,WACpB,IAAM7U,EAAUb,KACV1G,EAAW+C,cACXlI,EAAYoG,yBACZob,EAAW/a,aAAY,SAACC,GAAD,OAAkBA,EAAGC,eAIlD,OAHAN,aAAgB,WACdlB,EAASD,6CAAkClF,MAC1C,CAACmF,EAAUnF,IAEZ,qBACE6M,UAAWH,EAAQY,KACnBR,MAAO,CAAEmB,SAAUuT,EAASnc,WAAW4I,UAFzC,SAGE,cAAC,IAAD,UAAS8K,YAAatR,S,0ECvBfga,GAAeC,2BAAgB,CAC1C7a,cAAe/B,qBACfuQ,MTc0B,WAGd,IAFZA,EAEW,uDAFHuH,GACR5X,EACW,uCACX,OAAQA,EAAOvD,MACb,IAAK,WACH,OAAOuD,EAAOC,QAChB,IAAK,cACH,OAAO2X,GAAa+E,OAAb,WAAwB3c,EAAOC,UACxC,IAAK,eACH,OAAO2X,GACT,QACE,OAAOvH,ISzBX8I,OjCyGgC,WAGf,IAFjBpZ,EAEgB,uDAFRJ,EACRK,EACgB,uCAChB,GAAoB,qBAAhBA,EAAOvD,MAA+BuD,EAAOC,UAAYF,EAAMuF,QACjE,OAAO,2BAAKvF,GAAZ,IAAmBuF,QAAStF,EAAOC,QAASsF,QAAS,KAChD,GAAoB,qBAAhBvF,EAAOvD,KAChB,OAAO,2BAAKsD,GAAZ,IAAmBwF,QAAQ,GAAD,mBAAMxF,EAAMwF,SAAZ,YAAwBvF,EAAOC,YACpD,GAAoB,qBAAhBD,EAAOvD,KAChB,OAAO,2BAAKsD,GAAZ,IAAmBwF,QAASvF,EAAOC,UAC9B,GAAoB,qBAAhBD,EAAOvD,KAChB,OAAO,2BAAKsD,GAAZ,IAAmByF,QAASxF,EAAOC,UAC9B,GAAoB,qBAAhBD,EAAOvD,KAA6B,CAAC,IAAD,EAClBuD,EAAOC,QADW,mBACtC1F,EADsC,KAC5B8K,EAD4B,KAE7C,OAAO,2BACFtF,GADL,IAEE0F,eAAe,2BACV1F,EAAM0F,gBADG,kBAEXlL,EAAW8K,MAGX,GAAoB,wBAAhBrF,EAAOvD,KAAgC,CAChD,IAAM4I,EAASrF,EAAOC,QACtB,OAAO,2BACFF,GADL,IAEE0F,eAAgB,CACd9K,QAAS0K,EACTxK,MAAOwK,EACPnL,QAASmL,EACT3K,WAAY2K,EACZK,OAAQL,KAGP,MAAoB,oBAAhBrF,EAAOvD,KACT,2BAAKsD,GAAZ,IAAmBsF,OAAQrF,EAAOC,UAE7BF,GiC5IP4B,YAAaib,IACbpf,SAAUqf,kBACV7hB,UAAW8hB,sBCRPC,GAAmBC,+BAAoB,CAC3CvQ,KAAK,GAAD,OAAKA,KAAL,aACJwQ,OAAO,IAEIC,GAAWC,uBACtBV,GACAM,GAAiBK,2BAAgBC,Q,qBCX7BC,GAAa,CAACD,MCUdE,IDRmBC,KAAeF,ICQU,SAAC,GAE1B,IADvBlH,EACsB,EADtBA,SAEA,OAAO,cAAC,IAAD,CAAUqH,MAAOP,GAAjB,SAA4B9G,M,GCGjCsH,giBARFC,G,GAAAA,kBACAC,G,GAAAA,sBACAC,G,GAAAA,iBACAC,G,GAAAA,qBACAC,G,GAAAA,yBACAC,G,GAAAA,8BACAC,G,GAAAA,oBACAC,G,GAAAA,yBAGF,WACE,KAEIP,IACAC,IACAC,IACAC,IAGF,MAAM,IAAIlf,MAAM,mBATpB,GAYA,IAAMuf,GAAkB,CACtBC,OAAQT,GACRU,UAAWP,GACXQ,YAAaT,GACbU,WAAYX,GACZY,cAAeT,GACfU,kBAAmBT,GACnBU,MAAOT,GACPU,cAAeT,IAEjB1gB,KAASohB,cAAcT,IACvB3gB,KACGxC,YACA6jB,kBAAkB,CAAEC,iBAAiB,IACrCC,OAAM,SAACC,GACW,kBAAbA,EAAIC,MACNlb,IAAImb,MAAM,uDAIT,IAAMC,GAAuD,CAClE3hB,cACA2C,SAAU+c,GAAS/c,SACnBif,mDACAC,OAAQ,CAAEC,YAAa,QAASC,wBAAwB,IC3CpDC,GAAcC,QACW,cAA7B7M,OAAOtP,SAASoc,UAEe,UAA7B9M,OAAOtP,SAASoc,UAEhB9M,OAAOtP,SAASoc,SAASC,MACvB,2DAmCN,SAASC,GAAgBC,EAAOR,GAC9BS,UAAUC,cACPC,SAASH,GACTjQ,MAAK,SAACqQ,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpgB,QACf+f,UAAUC,cAAcO,YAI1BC,QAAQxc,IACN,iHAKEsb,GAAUA,EAAOmB,UACnBnB,EAAOmB,SAASP,KAMlBM,QAAQxc,IAAI,sCAGRsb,GAAUA,EAAOoB,WACnBpB,EAAOoB,UAAUR,WAO5BlB,OAAM,SAACG,GACNqB,QAAQrB,MAAM,4CAA6CA,M,cCxFlDnY,GAJD2Z,aAAe,CAC3BxX,QAAS,ICcXnF,IAAI4c,SAAqC,UAEzCC,IAASC,OACP,cAAC,GAAD,UACE,cAAC,6BAAD,2BAAgC1B,IAAhC,aACE,cAAC2B,EAAA,EAAD,CAAe/Z,MAAOga,GAAtB,SACE,cAAC,GAAD,WAINC,SAASC,eAAe,SFJnB,SAAkB5B,GACvB,GAA6C,kBAAmBS,UAAW,CAGzE,GADkB,IAAIoB,IAAIxD,cAAwB9K,OAAOtP,SAAS6d,MACpDC,SAAWxO,OAAOtP,SAAS8d,OAIvC,OAGFxO,OAAOyO,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMnC,cAAN,sBAEP8B,KA6DV,SAAiCK,EAAOR,GAEtCiC,MAAMzB,EAAO,CACX0B,QAAS,CAAE,iBAAkB,YAE5B3R,MAAK,SAAC4R,GAEL,IAAMC,EAAcD,EAASD,QAAQxkB,IAAI,gBAEnB,MAApBykB,EAASnc,QACO,MAAfoc,IAA8D,IAAvCA,EAAYxc,QAAQ,cAG5C6a,UAAUC,cAAc2B,MAAM9R,MAAK,SAACqQ,GAClCA,EAAa0B,aAAa/R,MAAK,WAC7BgD,OAAOtP,SAASse,eAKpBhC,GAAgBC,EAAOR,MAG1BN,OAAM,WACLwB,QAAQxc,IACN,oEApFA8d,CAAwBhC,EAAOR,GAI/BS,UAAUC,cAAc2B,MAAM9R,MAAK,WACjC2Q,QAAQxc,IAAI,6DAId6b,GAAgBC,EAAOR,OElB/BU,I,+BC5BA,01DAAO,IAAM3kB,EAAsB,CACjC0B,MAAO,QACPuB,eAAgB,iBAChByjB,SAAU,WACV5kB,aAAc,eACduB,KAAM,OACNsjB,QAAS,UACTC,gBAAiB,kBACjBC,oBAAqB,sBACrBC,WAAY,aACZC,QAAS,UACT7oB,UAAW,aAGAigB,EAA8D,CACzEC,IAAK,yDACL7e,QAAS,mDACTE,MAAO,iCACPH,WAAY,2BACZR,QAAS,2BACTwL,OAAQ,sBAGG0H,EAA4C,CACvDvS,MAAO,KACPF,QAAS,IACTD,WAAY,GACZR,QAAS,I,gHC1BEgB,EAAsB,uCAAG,WACpCua,GADoC,eAAAxa,EAAA,+EASnBwa,EAAI1Y,IAAI,CAAEqlB,OAAQ,UATC,YASlC3nB,EATkC,QAUvBkE,MAVuB,sBAW1B,IAAIC,MAAM,8BAXgB,OAalCmF,IAAIC,MAAJ,sBAbkC,iEAenByR,EAAI1Y,IAAI,CAAEqlB,OAAQ,WAfC,QAelC3nB,EAfkC,wCAiB7BA,GAjB6B,yDAAH,uD,qPCWtB2K,EAAoB,SAC/BpK,EACA+D,GAEA,8CAAO,WAAOoB,GAAP,SAAAlF,EAAA,6DACLkF,EAASU,EAAQ9B,IADZ,SAECD,+BAAqB9D,EAAW+D,GAFjC,2CAAP,uDAMW8B,EAAU,SAAC9B,GAAD,MAAgC,CACrDtC,KAAM,UACNwD,QAASlB,IAGEqc,EAAkB,SAC7BiH,GAEA,MAAO,CACL5lB,KAAM,iBACNwD,QAASoiB,IAIApH,EAAgB,CAC3Bvf,GAAI,YACJqJ,UAAW,CACTlK,MAAO,GACPF,QAAS,IAEX0F,WAAY,CACVC,SAAU,CACRF,QAAS,KACTkiB,UAAW,IAEbrZ,SAAU,KAGD2T,EAAoB,WAGrB,IAFVJ,EAES,uDAFEvB,EACXjb,EACS,uCACT,OAAQA,EAAOvD,MACb,IAAK,UACH,OAAOuD,EAAOC,QAChB,IAAK,iBACH,OAAO,2BACFuc,GADL,IAEEnc,WAAW,2BAAMmc,EAASnc,YAAeL,EAAOC,WAEpD,QACE,OAAOuc,M","file":"static/js/main.a99c14d1.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\nimport { Category } from './types';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n\nexport const CATEGORY_COLORS: Record<Category | 'default', string> = {\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n  default: 'blueviolet',\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n  BaseType,\n} from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralByIds = async (\n  firestore: ExtendedFirestoreInstance,\n  ids: number[],\n  lang: string\n): Promise<BaseType[]> => {\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await firestoreGetCacheFirst(\n    kuralsRef.where(\n      firebase.firestore.FieldPath.documentId(),\n      'in',\n      ids.map((id) => id.toString())\n    )\n  );\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return getKuralByIds(firestore, kuralRangeIds, lang);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  // TODO: get only transliterators of user prefered language\n  const transliteratorSnapRef = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n  );\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { firestoreGetCacheFirst } from './firestore';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestoreGetCacheFirst(\n    firestore\n      .collection(COLLECTION_NAME_MAP.USER)\n      .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n      .limit(1)\n  );\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .doc(`${user.id}`)\n    .set(user);\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category?: RootCategory,\n  id?: number,\n  resultCategory?: Category\n) => [BaseType[], (id: number) => BaseType[], (id: number) => BaseType[]];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (id && category && resultCategory) {\n    if (category === resultCategory) {\n      throw new Error('Bad input');\n    }\n    isCategoryValidErr(category, id);\n  }\n\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primary: PRIMARY_LANG } = useSelector(\n    (st: AppState) => st.preferences.preference.language\n  );\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  const getLiteraturesBySection = React.useCallback(\n    (sectionId: number): BaseType[] => {\n      isCategoryValidErr('section', sectionId);\n      return fillRange(KURAL_INDEX.index!!.section[sectionId].litIndex).map(\n        (k) => KURAL_INDEX.literature[k]\n      );\n    },\n    [KURAL_INDEX.index, KURAL_INDEX.literature]\n  );\n\n  const getChaptersFromLiterature = React.useCallback(\n    (litId: number): BaseType[] => {\n      isCategoryValidErr('literature', litId);\n      return fillRange(KURAL_INDEX.index!!.litChapMap[litId]).map(\n        (c) => KURAL_INDEX.chapter[c]\n      );\n    },\n    [KURAL_INDEX.chapter, KURAL_INDEX.index]\n  );\n  React.useEffect(() => {\n    if (!result.length && id) {\n      if (category === 'chapter' && resultCategory === 'kural') {\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, PRIMARY_LANG));\n        })();\n      } else {\n        const { chapter, index: INDEX_MAP } = KURAL_INDEX;\n        if (INDEX_MAP) {\n          if (category === 'literature' && resultCategory === 'chapter') {\n            setResult(getChaptersFromLiterature(id));\n          } else if (\n            category === 'section' &&\n            resultCategory === 'literature'\n          ) {\n            setResult(getLiteraturesBySection(id));\n          } else {\n            throw new Error('category not supported');\n          }\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    firestore,\n    id,\n    PRIMARY_LANG,\n    KURAL_INDEX,\n    getLiteraturesBySection,\n    getChaptersFromLiterature,\n  ]);\n\n  return [result, getLiteraturesBySection, getChaptersFromLiterature];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  User,\n  CATEGORY_COLORS,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: Record<'kural' | 'chapter', number[]>\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: '/list/section',\n      color: CATEGORY_COLORS.default,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `/list/${categories.section.id}/literature`,\n      color: CATEGORY_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `/list/${categories.literature.id}/chapter`,\n      color: CATEGORY_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: favourites.chapter.some(\n        (ch) => ch === categories.chapter?.id\n      ),\n      type: 'chapter',\n      route: `/list/${categories.chapter.id}/kural`,\n      color: CATEGORY_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: favourites.kural.some((k) => k === categories.kural?.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `/list/kural/${categories.kural.id}`,\n      color: CATEGORY_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.preferences);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(\n      pathname,\n      '/list/:section/literature'\n    );\n    const literatureRoute = matchPath<{ literature: string }>(\n      pathname,\n      '/list/:literature/chapter'\n    );\n    const chapterRoute = matchPath<{ chapter: string }>(\n      pathname,\n      '/list/:chapter/kural'\n    );\n    const kuralRoute = matchPath<{ kural: string }>(\n      pathname,\n      '/list/kural/:kural'\n    );\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    log.debug('route path values => ', JSON.stringify(newFilter));\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    log.debug('detect route => ', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites: number[];\n      if (shouldAddToList) {\n        favorites = [...user.favorites[route.type], route.id];\n      } else {\n        const itemIndex = user.favorites[route.type].indexOf(route.id);\n        favorites = user.favorites[route.type];\n        favorites.splice(itemIndex, 1);\n      }\n      const updatedUserPref: User = {\n        ...user,\n        favorites: {\n          ...user.favorites,\n          [route.type]: favorites,\n        },\n      };\n      dispatch(updateUserFSAsync(firestore, updatedUserPref));\n    }\n  };\n  // TODO: direct access of http://localhost:3000/#/list/kural/631 doesn't show routes\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return { ...state, results: [...state.results, ...action.payload] };\n  } else if (action.type === 'SetSearchResults') {\n    return { ...state, results: action.payload as SearchResult[] };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { getKural, SearchResult, SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport {\n  appendSearchResults,\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const USER_LANG = useSelector(\n    (st: AppState) => st.preferences.preference.language\n  );\n  const { literature, section, chapter } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword);\n  };\n\n  const addResults = (searchTypes: SearchTypes[], keyword: string): void => {\n    searchTypes.forEach(async (type) => {\n      const items: SearchResult[] = [];\n      switch (type) {\n        case 'ByKuralNo':\n          const kuralNo = parseInt(keyword);\n          if (isCategoryValid('kural', kuralNo)) {\n            const item = await getKural(\n              firestore,\n              parseInt(keyword),\n              USER_LANG.primary\n            );\n            items.push({\n              type,\n              keyword,\n              category: 'kural',\n              item,\n            });\n          }\n          break;\n        case 'ByChapterNo':\n          const chapterNo = parseInt(keyword);\n          if (isCategoryValid('chapter', chapterNo)) {\n            items.push({\n              type,\n              keyword,\n              item: chapter[parseInt(keyword)],\n              category: 'chapter',\n            });\n          }\n          break;\n        case 'ByLiteratureNo':\n          const literatureNo = parseInt(keyword);\n          if (isCategoryValid('literature', literatureNo)) {\n            items.push({\n              type,\n              keyword,\n              item: literature[parseInt(keyword)],\n              category: 'literature',\n            });\n          }\n          break;\n        case 'BySectionNo':\n          const sectionNo = parseInt(keyword);\n          if (isCategoryValid('section', sectionNo)) {\n            items.push({\n              type,\n              keyword,\n              item: section[parseInt(keyword)],\n              category: 'section',\n            });\n          }\n          break;\n      }\n      if (items.length > 0) {\n        // eslint-disable-next-line array-callback-return\n        // TODO: results SORT\n        const sortedResults = items.sort((a, b) => {\n          switch (a.category) {\n            case 'kural':\n              return b.category === 'kural' ? 0 : -1;\n            case 'chapter':\n              return b.category === 'chapter' ? 0 : -1;\n            case 'literature':\n              return b.category === 'literature' ? 0 : -1;\n            case 'section':\n              return b.category === 'section' ? 0 : -1;\n          }\n        });\n        dispatch(appendSearchResults(sortedResults));\n      }\n    });\n  };\n\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","import { isCategoryValid, BaseType, Category } from 'src/lib/api';\n\nimport { useNavigation } from './useNavigation';\n\ntype SubCategoryListType = Exclude<Category, 'chapter' | 'kural'> | 'top';\n\ntype useCategoryType = (\n  type: SubCategoryListType,\n  key: number\n) => (item: BaseType) => void;\nexport const useCategory: useCategoryType = (type, key) => {\n  const [navigateTo] = useNavigation();\n  if (type !== 'top') {\n    isCategoryValid(type, key);\n  }\n  const onItemSelected = (item: BaseType): void => {\n    switch (type) {\n      case 'top':\n        navigateTo(`/list/${item.id}/literature`)();\n        break;\n      case 'section':\n        navigateTo(`/list/${item.id}/chapter`)();\n        break;\n      case 'literature':\n        navigateTo(`/list/${item.id}/kural`)();\n        break;\n    }\n  };\n  return onItemSelected;\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport { ChevronRight, ExpandMore } from '@material-ui/icons';\nimport { useSelector } from 'react-redux';\nimport TreeMenu, {\n  TreeNodeInArray,\n  TreeMenuItem,\n} from 'react-simple-tree-menu';\nimport { useSubCategory } from 'src/lib/hooks';\n\nimport { AppState } from './../../../state';\nconst useStyles = makeStyles((theme) => ({\n  list: {},\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n  },\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n};\n\nconst DEFAULT_PADDING = 16;\nconst ICON_SIZE = 8;\nconst LEVEL_SPACE = 16;\n\n// TODO: customize\nconst TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n}: TreeMenuItem) => {\n  const classes = useStyles();\n  return (\n    <ListItem\n      className={`${classes.listItem} level-${level}`}\n      style={{\n        paddingLeft: DEFAULT_PADDING + ICON_SIZE + level * LEVEL_SPACE,\n        // boxShadow: focused ? '0px 0px 5px 0px #222' : 'none',\n        // zIndex: focused ? 999 : 'unset',\n      }}>\n      {hasNodes && (\n        <div\n          style={{ display: 'inline-block' }}\n          onClick={(e) => {\n            hasNodes && toggleNode && toggleNode();\n            e.stopPropagation();\n          }}>\n          {isOpen ? <ExpandMore /> : <ChevronRight />}\n        </div>\n      )}\n      {label}\n    </ListItem>\n  );\n};\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = (\n  props: CategoryViewerProps\n) => {\n  const classes = useStyles();\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n\n  const TREE_DATA: TreeNodeInArray[] = Object.values(sections).map(\n    (s, sIndex) => ({\n      key: s.id.toString(),\n      label: s.value,\n      index: sIndex,\n      nodes: getLiteraturesBySection(s.id).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        nodes: getChaptersByLiterature(lit.id).map((ch, chIndex) => ({\n          key: ch.id.toString(),\n          label: ch.value,\n          index: chIndex,\n        })),\n      })),\n    })\n  );\n\n  return (\n    <TreeMenu data={TREE_DATA} hasSearch={false}>\n      {({ items }) => (\n        <List className={classes.list}>\n          {items.map(({ key, ...itemProps }) => (\n            <TreeListItem key={key} {...itemProps} />\n          ))}\n        </List>\n      )}\n    </TreeMenu>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { Category } from 'src/lib/api';\n\nimport { AppState } from '../../state/reducers';\nimport FavouriteToggle from '../../views/components/common/FavouriteToggle';\n\nconst useStyles = makeStyles((theme) => ({\n  favStyle: {\n    color: 'rgba(215, 22, 64, 0.8)',\n  },\n}));\n\nconst isFavourite = (\n  type: 'kural' | 'chapter',\n  itemNo: number,\n  items: number[]\n): boolean => {\n  // TODO:\n  return true;\n};\ntype ToggleFavourite = (favourite: boolean) => void;\ntype useKuralHeaderType = (\n  type: Exclude<Category, 'section' | 'literature'>,\n  path: string\n) => React.ReactNode;\nexport const useFavouriteDetector: useKuralHeaderType = (type, path) => {\n  const classes = useStyles();\n  const { [type]: FAVOURITE_ITEMS } = useSelector(\n    (st: AppState) => st.preferences.favorites\n  );\n  const { pathname } = useLocation();\n  const isRoute = matchPath<Record<string, string>>(pathname, path);\n  let element: React.ReactNode = null;\n  const setFavourite: ToggleFavourite = (flag: boolean) => {\n    // TODO:\n  };\n  if (isRoute?.isExact) {\n    element = (\n      <FavouriteToggle\n        className={classes.favStyle}\n        active={isFavourite(\n          type,\n          parseInt(isRoute.params[type]),\n          FAVOURITE_ITEMS\n        )}\n        handler={(isActive: boolean): Promise<boolean> => {\n          setFavourite(isActive);\n          return Promise.resolve(true);\n        }}\n      />\n    );\n  }\n  return element;\n};\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  showDivider?: boolean;\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={props.showDivider}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useCategory, useSubCategory } from '../../../lib/hooks';\nimport ListView from '../common/ListView';\n\ntype ChapterViewerProps = {\n  className?: string;\n};\n\nconst ChapterViewer: React.FC<ChapterViewerProps> = (\n  props: ChapterViewerProps\n) => {\n  const { literature } = useParams<{ literature: string }>();\n  const [items] = useSubCategory('literature', Number(literature), 'chapter');\n  const onItemSelection = useCategory('literature', Number(literature));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default ChapterViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    userSelect: 'none',\n    padding: theme.spacing(1),\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const {\n    preferences: {\n      preference: {\n        language: { primary },\n      },\n    },\n    kuralIndexMap: { transliterator: transliterators },\n  } = useSelector((st: AppState) => st);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, primary));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, primary]);\n  const filteredTransliteratorMap = Object.values(transliterators)\n    .filter((trans) => trans.lang === primary)\n    .sort((t1, t2) => {\n      const [t1r, t2r] = [t1.rank, t2.rank];\n      return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n    });\n  return [kural, kuralDetail, filteredTransliteratorMap];\n};\n","import React from 'react';\n\nimport { debug } from 'loglevel';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { isCategoryValid, ITEMS_COUNT_MAP } from 'src/lib/api';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport KuralDetail from './KuralDetail';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const history = useHistory();\n  const params = useParams<{ kural: string }>();\n  const kuralNo = parseInt(params.kural);\n  const [activeKuralNo, setActiveKuralNo] = React.useState(kuralNo);\n  const slideKuralIds = Array.from(Array(ITEMS_COUNT_MAP.kural).keys()).map(\n    (i) => i + 1\n  );\n  const renderSlide = (kId: number, index: number) => (\n    <SwiperSlide key={kId} virtualIndex={index}>\n      <KuralDetail kural={kId} />\n    </SwiperSlide>\n  );\n\n  React.useEffect(() => {\n    const newRoute = `/list/kural/${activeKuralNo}`;\n    debug('replace route to => ', newRoute);\n    history.replace(newRoute);\n  }, [activeKuralNo, history]);\n\n  if (!isCategoryValid('kural', kuralNo)) {\n    return null;\n  }\n  return (\n    <Swiper\n      keyboard={true}\n      grabCursor={true}\n      initialSlide={kuralNo - 1}\n      spaceBetween={10}\n      slidesPerView={1}\n      allowSlideNext={slideKuralIds[slideKuralIds.length - 1] !== activeKuralNo}\n      virtual\n      onTransitionEnd={(swiper) => {\n        setActiveKuralNo(swiper.activeIndex + 1);\n      }}>\n      {slideKuralIds.map((kId, index) => renderSlide(kId, index))}\n    </Swiper>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(`/list/kural/${kural.id}`)();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={k.id}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const [kurals] = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { debug } from 'loglevel';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { ITEMS_COUNT_MAP } from 'src/lib/api';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\n\nimport 'swiper/swiper.scss';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const { chapter } = useParams<{ chapter: string }>();\n  const chapterNo = parseInt(chapter);\n  const history = useHistory();\n  const [activeChapterNo, setActiveChapterNo] = React.useState(chapterNo);\n  const slideChapterIds = Array.from(Array(ITEMS_COUNT_MAP.chapter).keys()).map(\n    (i) => i + 1\n  );\n  React.useEffect(() => {\n    const newRoute = `/list/${activeChapterNo}/kural`;\n    debug('replace route to => ', newRoute);\n    history.replace(newRoute);\n  }, [activeChapterNo, history]);\n  const renderSlide = (chId: number, index: number) => (\n    <SwiperSlide key={chId} virtualIndex={index}>\n      <ListKuralsOfChapter chapterNo={chId} />\n    </SwiperSlide>\n  );\n  return (\n    <div className={props.className}>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={chapterNo - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideChapterIds[slideChapterIds.length - 1] !== activeChapterNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveChapterNo(swiper.activeIndex + 1);\n        }}>\n        {slideChapterIds.map((chId, index) => renderSlide(chId, index))}\n      </Swiper>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useCategory, useSubCategory } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\n\ntype LiteratureViewerProps = {\n  className?: string;\n};\n\nconst LiteratureViewer: React.FC<LiteratureViewerProps> = (\n  props: LiteratureViewerProps\n) => {\n  const { section } = useParams<{ section: string }>();\n  const [items] = useSubCategory('section', Number(section), 'literature');\n  const onItemSelection = useCategory('section', Number(section));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default LiteratureViewer;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n  Badge,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { findChapterNoFromKuralNo, getKuralByIds } from 'src/lib/api';\nimport { Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  collapsableGroup: {\n    // marginBottom: theme.spacing(1),\n  },\n  list: {\n    '& .sub-header': {\n      textAlign: 'left',\n      color: 'brown',\n      lineHeight: '2rem',\n      padding: `0px 0 0 ${theme.spacing(0.5)}px`,\n    },\n  },\n  listItemTitle: {\n    '& .badge-placeholder': {\n      height: '0.5rem',\n    },\n    '& .expand-toggle': {\n      marginLeft: theme.spacing(1.5),\n    },\n  },\n  listTitleBadge: {\n    opacity: 0.6,\n    fontSize: '0.6rem',\n    height: '130%',\n    width: '120%',\n  },\n  kural: {\n    padding: `0 0 0 ${theme.spacing(1)}px`,\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  chapFavorites: {\n    padding: 0,\n    '& li': {\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5),\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const firestore = useFirestore();\n  const {\n    favorites: { kural: KURAL_IDS, chapter: CHAPTER_IDS },\n    preference,\n  } = useSelector((st: AppState) => st.preferences);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  const onChapterSelected = (item: BaseType): void => {\n    navigateTo(`/list/${item.id}/kural`)();\n  };\n  const onKuralSelected = (item: BaseType): void => {\n    navigateTo(`/list/kural/${item.id}`)();\n  };\n  React.useEffect(() => {\n    if (KURAL_IDS.length > 0) {\n      getKuralByIds(firestore, KURAL_IDS, preference.language.primary).then(\n        (kurals) => {\n          setKurals(kurals);\n        }\n      );\n    }\n  }, [firestore, KURAL_IDS, preference.language.primary]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n\n  const GroupTitleMaker = (\n    isVisible: boolean,\n    onClick: () => void,\n    title: React.ReactNode,\n    badgeContent: React.ReactNode\n  ) => (\n    <ListItem\n      selected={isVisible}\n      className={classes.listItemTitle}\n      button\n      onClick={onClick}>\n      <ListItemText inset={true} primary={title} />\n      <Badge\n        badgeContent={badgeContent}\n        classes={{ badge: classes.listTitleBadge }}\n        color='secondary'\n        showZero={false}\n        max={10}\n        invisible={isVisible}>\n        <div className='badge-placeholder'></div>\n      </Badge>\n      <div className='expand-toggle'>\n        {isVisible ? <ExpandLess /> : <ExpandMore />}\n      </div>\n    </ListItem>\n  );\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        {GroupTitleMaker(\n          isKuralVisible,\n          () => {\n            setKuralVisible(!isKuralVisible);\n          },\n          'Kurals',\n          KURAL_IDS.length\n        )}\n        <Collapse\n          in={isKuralVisible}\n          style={{ paddingBottom: isKuralVisible ? 8 : 0 }}\n          className={classes.collapsableGroup}\n          timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard\n                      className={classes.kural}\n                      key={item.id}\n                      kural={item}\n                      onClick={onKuralSelected}\n                    />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        {GroupTitleMaker(\n          isChapterVisible,\n          () => {\n            setChapterVisible(!isChapterVisible);\n          },\n          'Chapters',\n          CHAPTER_IDS.length\n        )}\n        <Collapse\n          in={isChapterVisible}\n          style={{ paddingBottom: isChapterVisible ? 8 : 0 }}\n          className={classes.collapsableGroup}\n          timeout='auto'>\n          {CHAPTER_IDS.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={\n                CHAPTER_IDS.sort()\n                  .map((ch) => getChapter(ch))\n                  .filter((ch) => ch !== null) as BaseType[]\n              }\n              onItemSelected={onChapterSelected}\n            />\n          )}\n          {CHAPTER_IDS.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(0.5),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; */\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n      {/* <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n  favoriteIcon: {\n    width: '1rem',\n    height: '1rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { renderRoutes } from 'react-router-config';\nimport RouteViewer from 'src/views/components/kural/RouteViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ListPage: React.FC<any> = (props: any) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <div className={classes.root}>{renderRoutes(props.route.routes)}</div>\n    </>\n  );\n};\n\nexport default ListPage;\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n      cursor: 'pointer',\n    },\n    clearIcon: {\n      cursor: 'pointer',\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const history = useHistory();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const isSearchRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: SEARCH_ROUTE })?.isExact ||\n    false;\n  const [focus, setFocus] = React.useState(isSearchRoute());\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  history.listen(({ pathname }) => {\n    if (pathname !== SEARCH_ROUTE) {\n      setKeyword('');\n      setFocus(false);\n    } else {\n      setFocus(true);\n    }\n  });\n  const onSearchBarFocus = (): void => {\n    if (history.location.pathname !== SEARCH_ROUTE) {\n      debug('route -> search');\n      history.push(SEARCH_ROUTE);\n    }\n  };\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon\n        onClick={() => {\n          inputRef.current?.querySelector('input')?.focus();\n        }}\n        className={clsx(classes.searchicon, 'search-icon')}\n      />\n      <InputBase\n        ref={inputRef}\n        className={`searchbar ${classes.input}`}\n        placeholder='Search 43, agara'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          onSearchBarFocus();\n          props.onSearchTap && props.onSearchTap();\n        }}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          className={classes.clearIcon}\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardBackspace, Person, Settings } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\n\nimport KuralSearch from '../kural/KuralSearch';\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'space-around',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  const history = useHistory();\n  const isHomeRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: '/' })?.isExact || false;\n  const renderLeftIcon = (): React.ReactElement => {\n    return !isHomeRoute() ? (\n      <IconButton className={classes.iconButton} onClick={history.goBack}>\n        <KeyboardBackspace color='primary' />\n      </IconButton>\n    ) : (\n      <Avatar className={classes.avatar}>\n        <Person />\n      </Avatar>\n    );\n  };\n\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {renderLeftIcon()}\n            <KuralSearch className={classes.searchbar} />\n            <div className={classes.actionsGroup}>\n              {props.actions}\n              <IconButton\n                className={classes.iconButton}\n                onClick={(): void => history.push('/settings')}>\n                <Settings color='primary' />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default MyAppBar;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  // {\n  //   icon: <SearchIcon />,\n  //   route: '/search',\n  //   label: 'Search',\n  // },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  // {\n  //   icon: <SettingsIcon />,\n  //   route: '/settings',\n  //   label: 'Settings',\n  // },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      <MyAppBar />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setAllUserSelections, setUserSelection } from '../../../state/search';\nimport {\n  CATEGORY_COLORS,\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n} from './../../../lib/api';\nimport { AppState } from './../../../state';\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n}));\n\nexport const SearchChips: React.FC<SearchChipsProps> = (\n  props: SearchChipsProps\n) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            style={{\n              backgroundColor:\n                CATEGORY_COLORS[\n                  f.type === 'all' || f.type === 'detail' ? 'default' : f.type\n                ],\n            }}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { isResultOfType, SearchResult, CATEGORY_COLORS } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state/reducers';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nimport { SearchChips } from './SearchChips';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n  searchItem: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    cursor: 'pointer',\n  },\n  searchItemAvatar: {\n    width: '2rem',\n    height: '2rem',\n    textAlign: 'center',\n    fontSize: '1rem',\n    marginRight: '0.5rem',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchResultItemProps = {\n  component?: React.ReactNode;\n  result: SearchResult;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  result,\n  label,\n  onClick,\n  component,\n}: SearchResultItemProps) => {\n  const classes = useStyles();\n  const innerContent = component ? component : <div>{result.item.value}</div>;\n  return (\n    <ListItem\n      key={`${label}${result.item.id}`}\n      onClick={onClick}\n      className={classes.searchItem}>\n      <Avatar\n        className={classes.searchItemAvatar}\n        style={{ backgroundColor: CATEGORY_COLORS[result.category] }}>\n        {label.charAt(0).toUpperCase()}\n      </Avatar>\n      {innerContent}\n    </ListItem>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const [navigateTo] = useNavigation();\n  const renderItem = (\n    item: SearchResult,\n    index: number\n  ): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <SearchResultItem\n          key={index}\n          result={item}\n          label='k'\n          onClick={navigateTo(`/list/kural/${item.item.id}`)}\n          component={\n            <KuralCard\n              componentType='span'\n              key={item.item.id}\n              kural={item.item}\n              className={classes.kuralSearchItem}\n            />\n          }\n        />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='ch'\n          onClick={navigateTo(`/list/${item.item.id}/kural`)}\n          result={item}\n        />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='lit'\n          onClick={navigateTo(`/list/${item.item.id}/chapter`)}\n          result={item}\n        />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='sec'\n          onClick={navigateTo(`/list/${item.item.id}/literature`)}\n          result={item}\n        />\n      );\n    }\n    // if (isResultOfType(item, 'detail') && search.userSelections.detail) {\n    //   return <>detail: {item.item.value}</>;\n    // }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <SearchChips />\n      <List>{search.results.map((item, i) => renderItem(item, i))}</List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Select,\n  FormControl,\n  MenuItem,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport { applyPreference, DEFAULT } from '../../../state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {\n    fontSize: '1em',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst getFontSizeOptions = (\n  baseSize: number,\n  count: number,\n  offset = 2\n): number[] => {\n  const result = [];\n  let size = baseSize;\n  while (count > 0) {\n    result.push(size);\n    size = size + offset;\n    count--;\n  }\n  return result;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { preference } = useSelector((st: AppState) => st.preferences);\n  const fontSizeOptions: Array<number> = getFontSizeOptions(\n    DEFAULT.preference.fontSize - 4,\n    10\n  );\n  const onFontChange = (fontSize: number): void => {\n    dispatch(applyPreference(Object.assign(preference, { fontSize })));\n  };\n\n  return (\n    <div className={props.className}>\n      <List>\n        <ListItem className={classes.item}>\n          <ListItemText\n            classes={{ primary: classes.itemText }}\n            primary={SettingsLabel.FONT_SIZE}\n          />\n          <FormControl className={classes.formControl}>\n            <Select\n              value={preference.fontSize}\n              onChange={(e): void => onFontChange(e.target.value as number)}>\n              {fontSizeOptions.map((v) => (\n                <MenuItem key={v} value={v}>\n                  {v}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport { CategoryViewer } from './views/components/kural/CategoryViewer';\nimport ChapterViewer from './views/components/kural/ChapterViewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport LiteratureViewer from './views/components/kural/LiteratureViewer';\nimport SectionViewer from './views/components/kural/SectionViewer';\nimport Home from './views/pages/home/home';\nimport ListPage from './views/pages/list/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      /* {\n        path: ROUTE_CONSTANTS.FAVOURITE,\n        component: FavoritesViewer,\n        exact: true,\n      }, */\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListPage,\n        routes: [\n          {\n            path: '/list/section',\n            // component: SectionViewer,\n            component: CategoryViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:section/literature',\n            component: LiteratureViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:literature/chapter',\n            component: ChapterViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:chapter/kural',\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: '/list/kural/:kural',\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: '/list*',\n            // eslint-disable-next-line react/display-name\n            component: (): React.ReactElement => (\n              <Redirect to='/list/1/kural' />\n            ),\n            exact: true,\n          },\n        ],\n      },\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => <Redirect to='/' />,\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const settings = useSelector((st: AppState) => st.preferences);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div\n      className={classes.root}\n      style={{ fontSize: settings.preference.fontSize }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  preferences: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","import { Category, SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport const ITEMS_COUNT_MAP: Record<Category, number> = {\n  kural: 1330,\n  chapter: 133,\n  literature: 13,\n  section: 3,\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport { updateUserPreference, User, UserPreference } from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const DEFAULT: User = {\n  id: 'anonymous',\n  favorites: {\n    kural: [],\n    chapter: [],\n  },\n  preference: {\n    language: {\n      primary: 'TA',\n      secondary: [],\n    },\n    fontSize: 16,\n  },\n};\nexport const PreferenceReducer = (\n  settings = DEFAULT,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n"],"sourceRoot":""}