{"version":3,"sources":["views/components/category-viewer/category-picker.tsx","views/components/category-viewer/category-list-item.tsx","views/components/category-viewer/category-viewer.tsx","views/components/category-viewer/category-viewer-container.tsx"],"names":["useStyles","makeStyles","theme","categoryFilterRoot","borderColor","categoryFilter","fontSize","lineHeight","paddingTop","paddingBottom","CATEGORY_ITEMS","CategoryPicker","props","classes","Select","variant","native","select","className","clsx","value","onChange","e","onSelect","target","map","it","i","toUpperCase","listItem","cursor","position","borderRadius","spacing","WebkitTapHighlightColor","border","paddingLeft","color","palette","secondary","main","listIcon","display","justifyContent","alignItems","TreeListItem","level","hasNodes","isOpen","label","toggleNode","focused","onClick","active","ListItem","ev","ListItemText","disableTypography","primary","AnimatedExpandedIcon","isExpanded","treeMenuContainer","outlineStyle","list","CategoryViewer","debug","items","List","key","path","itemProps","categoryRoot","padding","filterContainer","textAlign","CategoryViewerContainer","history","useHistory","useIdbKeyStore","category","setCategory","React","useState","TREE_DATA","setTreeData","useSelector","st","kuralIndexMap","SECTIONS","section","LITERATURES","literature","CHAPTERS","chapter","INDEX_MAP","index","useSubCategory","getLiteraturesBySection","getChaptersByLiterature","ChaptersOfLiterature","useCallback","secNo","litNo","ch","chIndex","id","toString","LiteraturesOfSection","lit","litIndex","nodes","routeKey","location","pathname","replace","RegExp","ROUTE_CONSTANTS","LIST_CATEGORY","useEffect","length","log","result","Object","values","s","sIndex","l","lIndex","getSectionNoByLiteratureNo","getLiteratureNoFromChapterNo","initialActiveKey","initialFocusKey","initialOpenNodes","split","substring","indexOf","getInitialOpenNodes","onClickItem","item","currentRoute","LIST_DETAIL","push","data","hasSearch"],"mappings":"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","file":"static/js/8.322423e7.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles, Select } from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { RootCategory } from './../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  categoryFilterRoot: {\n    '&:hover fieldset': {\n      borderColor: 'var(--app-color) !important',\n    },\n  },\n  categoryFilter: {\n    fontSize: '0.6rem',\n    lineHeight: '0.6rem',\n    paddingTop: 3,\n    paddingBottom: 3,\n  },\n}));\n\ntype CategoryPickerProps = {\n  className?: string;\n  value: RootCategory;\n  onSelect?: (category: RootCategory) => void;\n};\n\nconst CATEGORY_ITEMS: RootCategory[] = ['section', 'literature', 'chapter'];\n\nexport const CategoryPicker: React.FC<CategoryPickerProps> = (\n  props: CategoryPickerProps\n) => {\n  const classes = useStyles();\n  return (\n    <Select\n      variant='outlined'\n      native\n      classes={{\n        select: classes.categoryFilter,\n      }}\n      className={clsx(classes.categoryFilterRoot, props.className)}\n      value={props.value}\n      onChange={(e) =>\n        props.onSelect && props.onSelect(e.target.value as RootCategory)\n      }>\n      {CATEGORY_ITEMS.map((it, i) => (\n        <option key={i} value={it}>\n          {/* TODO: */}\n          {it.toUpperCase()}\n        </option>\n      ))}\n    </Select>\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { TreeMenuItem } from 'react-simple-tree-menu';\n\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: 'var(--app-color)',\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport const TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n  onClick,\n  active,\n  ...props\n}: TreeMenuItem) => {\n  const classes = useStyles();\n\n  const toggleCategory = (ev: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    hasNodes && toggleNode && toggleNode();\n    onClick(ev);\n  };\n  return (\n    <ListItem\n      onClick={toggleCategory}\n      className={`${classes.listItem} level-${level} ${\n        focused ? 'on-focus' : ''\n      } ${active ? 'is-active' : ''}`}>\n      <ListItemText disableTypography primary={label}></ListItemText>\n      {hasNodes && (\n        <div className={classes.listIcon}>\n          <AnimatedExpandedIcon isExpanded={isOpen} />\n        </div>\n      )}\n    </ListItem>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport TreeMenu, { TreeMenuProps } from 'react-simple-tree-menu';\n\nimport { TreeListItem } from './category-list-item';\n\nconst useStyles = makeStyles((theme) => ({\n  treeMenuContainer: {\n    '&>div': {\n      outlineStyle: 'none',\n    },\n  },\n  list: {},\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n} & TreeMenuProps;\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = ({\n  className,\n  ...props\n}: CategoryViewerProps) => {\n  const classes = useStyles();\n  debug('CategoryViewer renders');\n  return (\n    <div className={classes.treeMenuContainer}>\n      <TreeMenu {...props}>\n        {({ items }) => (\n          <List className={classes.list}>\n            {items.map(({ key, path, ...itemProps }) => (\n              <TreeListItem key={path} {...itemProps} />\n            ))}\n          </List>\n        )}\n      </TreeMenu>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport log from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TreeNodeInArray, Item } from 'react-simple-tree-menu';\nimport {\n  RootCategory,\n  getSectionNoByLiteratureNo,\n  getLiteratureNoFromChapterNo,\n} from 'src/lib/api';\n\nimport { useIdbKeyStore, useSubCategory } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport { CategoryPicker } from './category-picker';\nimport { CategoryViewer } from './category-viewer';\n\nconst useStyles = makeStyles((theme) => ({\n  categoryRoot: {\n    padding: theme.spacing(1),\n  },\n  filterContainer: {\n    textAlign: 'left',\n  },\n}));\n\ntype CategoryViewerContainerProps = {\n  className?: string;\n};\n\nconst getRouteKey = (pathname: string) =>\n  // eslint-disable-next-line no-useless-escape\n  pathname.replace(new RegExp(`${ROUTE_CONSTANTS.LIST_CATEGORY}(\\/)?`), '');\n\nexport const CategoryViewerContainer: React.FC<CategoryViewerContainerProps> = (\n  props: CategoryViewerContainerProps\n) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [category, setCategory] = useIdbKeyStore<RootCategory>(\n    'cat-filter',\n    'chapter'\n  );\n  const [TREE_DATA, setTreeData] = React.useState<TreeNodeInArray[]>([]);\n  const {\n    section: SECTIONS,\n    literature: LITERATURES,\n    chapter: CHAPTERS,\n    index: INDEX_MAP,\n  } = useSelector((st: AppState) => st.kuralIndexMap);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n  const ChaptersOfLiterature = React.useCallback(\n    (secNo: number, litNo: number): TreeNodeInArray[] =>\n      getChaptersByLiterature(litNo).map((ch, chIndex) => ({\n        key: ch.id.toString(),\n        label: ch.value,\n        index: chIndex,\n        path: `${secNo}/${litNo}/${ch.id}`,\n      })),\n    [getChaptersByLiterature]\n  );\n  const LiteraturesOfSection = React.useCallback(\n    (secNo: number): TreeNodeInArray[] =>\n      getLiteraturesBySection(secNo).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        path: `${secNo}/${lit.id}`,\n        nodes: ChaptersOfLiterature(secNo, lit.id),\n      })),\n    [ChaptersOfLiterature, getLiteraturesBySection]\n  );\n  const routeKey = getRouteKey(history.location.pathname);\n  const getInitialOpenNodes = () => {\n    const nodes = routeKey\n      .split('/')\n      .map((it) => routeKey.substring(0, routeKey.indexOf(it) + it.length));\n    if (nodes.length === 2 && nodes[0] === nodes[1]) {\n      nodes[1] = `${nodes[0]}/${nodes[1]}`;\n    }\n    return nodes;\n  };\n\n  React.useEffect(() => {\n    if (TREE_DATA.length) {\n      log.debug('category change: replace route =>', TREE_DATA[0].path);\n      // history.replace(`${ROUTE_CONSTANTS.LIST_CATEGORY}/${TREE_DATA[0].path}`);\n    }\n  }, [TREE_DATA, history]);\n\n  React.useEffect(() => {\n    let result: TreeNodeInArray[] = [];\n    switch (category) {\n      case 'section':\n        result = Object.values(SECTIONS).map((s, sIndex) => ({\n          key: s.id.toString(),\n          label: s.value,\n          index: sIndex,\n          path: `${s.id}`,\n          nodes: LiteraturesOfSection(s.id),\n        }));\n        break;\n      case 'literature':\n        result = Object.values(LITERATURES).map((l, lIndex) => {\n          const secNo = getSectionNoByLiteratureNo(INDEX_MAP!!, l.id);\n          return {\n            key: l.id.toString(),\n            label: l.value,\n            index: lIndex,\n            path: `${secNo}/${l.id}`,\n            nodes: ChaptersOfLiterature(secNo, l.id),\n          };\n        });\n        break;\n      case 'chapter':\n        result = Object.values(CHAPTERS).map((ch, chIndex) => {\n          const litNo = getLiteratureNoFromChapterNo(INDEX_MAP!!, ch.id);\n          const secNo = getSectionNoByLiteratureNo(INDEX_MAP!!, litNo);\n          return {\n            key: ch.id.toString(),\n            label: ch.value,\n            index: chIndex,\n            path: `${secNo}/${litNo}/${ch.id}`,\n          };\n        });\n        break;\n    }\n    setTreeData(result);\n  }, [\n    LiteraturesOfSection,\n    category,\n    SECTIONS,\n    LITERATURES,\n    CHAPTERS,\n    ChaptersOfLiterature,\n    INDEX_MAP,\n  ]);\n\n  const onItemClick = (item: Item) => {\n    history.replace(`${ROUTE_CONSTANTS.LIST_CATEGORY}/${item.path}`);\n    if (!item.hasNodes) {\n      const currentRoute = `${ROUTE_CONSTANTS.LIST_DETAIL}/${item.path}`;\n      log.debug('change route =>', currentRoute);\n      history.push(currentRoute);\n    }\n    /* if (!item.hasNodes) {\n      const lastItemSeparator = item.key.lastIndexOf('/');\n      const chapter = item.key.substring(lastItemSeparator + 1);\n      const literatureRoute = item.key.substring(0, lastItemSeparator);\n      const currentRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${literatureRoute}?chapter=${chapter}`;\n      history.replace(currentRoute);\n      history.push(newRoute);\n    } else {\n      history.replace(newRoute);\n    } */\n  };\n  return (\n    <div className={clsx(classes.categoryRoot, props.className)}>\n      <div className={classes.filterContainer}>\n        <CategoryPicker value={category} onSelect={setCategory} />\n      </div>\n      <CategoryViewer\n        initialActiveKey={routeKey}\n        initialFocusKey={routeKey}\n        initialOpenNodes={getInitialOpenNodes()}\n        onClickItem={onItemClick}\n        data={TREE_DATA}\n        hasSearch={false}\n      />\n    </div>\n  );\n};\n\nexport default CategoryViewerContainer;\n"],"sourceRoot":""}