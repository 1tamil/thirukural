{"version":3,"sources":["state/kuralIndex/index.ts","lib/api/category.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","lib/api/index.ts","lib/api/firestore.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useRoute.tsx","state/search/index.ts","lib/hooks/useKuralSearch.ts","lib/hooks/useCategory.tsx","views/components/common/FavouriteToggle.tsx","lib/hooks/useFavouriteDetector.tsx","views/components/common/ListView.tsx","views/components/kural/ChapterViewer.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/components/kural/LiteratureViewer.tsx","views/components/kural/SectionViewer.tsx","views/components/kural/FavoritesViewer.tsx","lib/hooks/useBaseItem.tsx","views/pages/home/home.tsx","views/components/kural/RouteViewer.tsx","lib/hooks/useLongPress.tsx","views/pages/list/list.tsx","views/components/kural/KuralSearch.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","state/title/index.ts","views/pages/main/main.tsx","views/pages/search/search.tsx","views/pages/settings/index.tsx","routes.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","serviceWorker.js","views/styles/theme.ts","index.tsx"],"names":["getLiteratureNoFromChapterNo","INDEX_MAP","chapterNo","isCategoryValidErr","Number","Object","keys","litChapMap","find","litId","isItemInRange","getSectionNoByLiteratureNo","literatureNo","section","map","secId","litIndex","getCategoryIds","category","categoryId","result","literature","chapter","getKuralIndex","firestore","a","firestoreGetCacheFirst","collection","COLLECTION_NAME_MAP","indexSnapshot","getDocData","key","docs","doc","id","data","getAllBaseItems","lang","collectionKey","sectionSnapshot","value","getAllSections","getAllChapter","getAllLiterature","findChapterNoFromKuralNo","kuralNo","Math","ceil","isResultOfType","type","resType","startsWith","getKural","kId","KURAL","get","kuralSnapshotRef","getKuralDetail","KURAL_DETAIL","snapshot","getKuralsOfChapter","startKuralNo","kuralRangeIds","Array","from","i","kuralsRef","where","firebase","FieldPath","documentId","sort","b","getAllTransliterators","TRANSLITERATOR","transliteratorSnapRef","getUserPreferences","userId","USER","limit","empty","Error","userDocRef","item","range","fillRange","out","push","isCategoryValid","getItemByPosition","direction","getSectionPrev","getLiteraturePrev","getChapterPrev","kural","getKuralPrev","toBaseTypeMap","list","reduce","oldVal","defaultState","transliterator","index","KuralIndexReducer","state","action","payload","thunkInitKuralIndexMapAndUserPref","dispatch","user","primary","preference","language","kuralIndex","sectionMap","literatureMap","chapterMap","transliteratorMap","t1","setUser","LANGUAGE","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER","SearchCategoryLabelMap","all","detail","ref","source","log","debug","applyPreference","pref","DEFAULT","favorites","secondary","fontSize","PreferenceReducer","settings","useNavigation","history","useHistory","route","useSubCategory","resultCategory","useFirestore","React","useState","setResult","PRIMARY_LANG","useSelector","st","preferences","KURAL_INDEX","kuralIndexMap","useEffect","length","c","k","CHIP_COLORS","getRoutes","categories","routes","color","useRoute","filter","inputFilter","setInputFilter","routeMap","setRouteMap","findFilters","location","pathname","KURAL_NO","CHAPTER_NO","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","options","rootCategoryFinder","sectionRoute","matchPath","literatureRoute","chapterRoute","kuralRoute","newFilter","params","undefined","listen","getRouteValue","useCallback","output","input","status","keyword","results","filters","userSelections","useKuralSearch","useDispatch","setSearchKeyword","searchTypes","types","isInteger","parseInt","searchNumber","e","findSuitableSearchTypes","setSearchStatus","useCategory","navigateTo","FavouriteToggle","props","active","isActive","toggleActive","IconButton","size","onClick","handler","then","className","useStyles","makeStyles","theme","favStyle","useFavouriteDetector","path","classes","useLocation","isRoute","element","isExact","Promise","resolve","root","listItem","cursor","display","gridTemplateColumns","idWrap","alignItems","palette","main","minWidth","opacity","textAlign","position","left","labelWrap","paddingLeft","spacing","ListView","List","items","ListItem","divider","onItemSelected","ChapterViewer","useParams","onItemSelection","flexDirection","breakpoints","up","badgeContainer","background","height","lineHeight","borderRadius","justifyContent","padding","kuralWrapper","width","KuralCard","clsx","component","componentType","dangerouslySetInnerHTML","__html","replace","transliteratorList","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","transliterators","setKural","kuralDetail","setKuralDetail","values","trans","t2","rank","t1r","t2r","useKuralDetail","transliteratorId","name","Chip","label","VirtualizeSwipeableViews","virtualize","SwipeableViews","KuralDetailViewer","enableMouseEvents","overscanSlideBefore","overscanSlideAfter","onChangeIndex","indexLatest","slideRenderer","nextIndex","mod","kuralCard","ListKuralCard","openKuralDetail","kurals","ListKuralsOfChapter","LiteratureViewer","SectionViewer","sections","chapFavorites","FavoritesViewer","itemNo","useBaseItem","getChapter","chapters","expand","isKuralVisible","setKuralVisible","isChapterVisible","setChapterVisible","onChapterSelected","chapterKuralMap","Map","forEach","it","chap","has","set","noRecordsFound","disablePadding","selected","button","ListItemText","Collapse","in","timeout","chapterInfo","ListSubheader","disableSticky","marginTop","favoriteCard","margin","Home","Card","variant","CardHeader","title","CardContent","routeContainer","flexWrap","chipRoot","maxWidth","RouteChip","onLongPress","callback","ms","startLongPress","setStartLongPress","timerId","window","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","console","style","backgroundColor","RouteViewer","renderRight","ListPage","chapterFavNode","kuralFavNode","Container","disableGutters","renderRoutes","createStyles","border","borderColor","fade","grey","searchicon","flex","light","KuralSearch","setSearchKey","useDebouncedCallback","debouncedCallback","setKeyword","isSearchRoute","focus","setFocus","InputBase","placeholder","inputProps","onChange","text","target","onFocus","onSearchTap","Fade","trim","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","toolbar","avatar","marginLeft","actionsGroup","searchbar","marginRight","flexGrow","iconButton","MyAppBar","AppBar","elevation","Toolbar","isHomeRoute","Avatar","alt","src","goBack","KeyboardBackspace","actions","appBar","bottom","top","boxShadow","borderTop","MyBottomNavigationBar","BottomNavigation","currentRoute","_","BottomNavigationAction","icon","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","initRoute","setRoute","Main","searchWrapper","searchFilter","kuralSearchItem","SearchChips","setFilters","search","hasStartsWith","f","filterOptions","isShow","Set","r","isSelected","selection","SearchResultItem","Search","showBadgeRight","renderItem","itemText","formControl","SettingsLabel","ROUTE_CONSTANTS","exact","fontSizeOptions","baseSize","count","offset","getFontSizeOptions","FormControl","Select","assign","v","MenuItem","to","App","rootReducers","combineReducers","concat","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","render","ThemeProvider","AppTheme","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.50ec0999.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (key: 'section' | 'litChapMap'): any =>\n    indexSnapshot.docs.find((doc) => doc.id === key);\n  return {\n    section: getDocData('section').data(),\n    litChapMap: getDocData('litChapMap').data(),\n  };\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport {\n  isCategoryValidErr,\n  COLLECTION_NAME_MAP,\n  KuralDetail,\n  Kural,\n} from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\nexport const getKural = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number,\n  lang: string\n): Promise<Kural> => {\n  isCategoryValidErr('kural', kId);\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(`${kId}`)\n    .get();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { id: kId, value: kuralSnapshotRef.data()!![lang] };\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralsOfChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  chapter: number,\n  lang: string\n): Promise<Kural[]> => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => `${startKuralNo + i}`\n  );\n  const kuralsRef = firestore.collection(COLLECTION_NAME_MAP.KURAL);\n  const snapshot = await firestoreGetCacheFirst(\n    kuralsRef.where(\n      firebase.firestore.FieldPath.documentId(),\n      'in',\n      kuralRangeIds\n    )\n  );\n  const result = snapshot.docs.map((doc) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang],\n  }));\n  return result.sort((a, b) => a.id - b.id);\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\nimport { firestoreGetCacheFirst } from './firestore';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  // TODO: get only transliterators of user prefered language\n  const transliteratorSnapRef = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n  );\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { firestoreGetCacheFirst } from './firestore';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestoreGetCacheFirst(\n    firestore\n      .collection(COLLECTION_NAME_MAP.USER)\n      .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n      .limit(1)\n  );\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getUserPreferences,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n      },\n    });\n  };\n};\n","import { SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\n","import { firestore } from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firestore.CollectionReference<firestore.DocumentData>\n    | firestore.Query<firestore.DocumentData>\n): Promise<firestore.QuerySnapshot<firestore.DocumentData>> => {\n  let result: firestore.QuerySnapshot<firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","import { User, UserPreference } from 'src/lib/api';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const DEFAULT: User = {\n  id: 'anonymous',\n  favorites: {\n    kural: [],\n    chapter: [],\n  },\n  preference: {\n    language: {\n      primary: 'TA',\n      secondary: [],\n    },\n    fontSize: 16,\n  },\n};\nexport const PreferenceReducer = (\n  settings = DEFAULT,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category: RootCategory,\n  id: number,\n  resultCategory: Category\n) => BaseType[];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (category === resultCategory) {\n    throw new Error('Bad input');\n  }\n  const firestore = useFirestore();\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const { primary: PRIMARY_LANG } = useSelector(\n    (st: AppState) => st.preferences.preference.language\n  );\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n  isCategoryValidErr(category, id);\n\n  React.useEffect(() => {\n    if (!result.length) {\n      if (category === 'chapter' && resultCategory === 'kural') {\n        (async (): Promise<void> => {\n          setResult(await getKuralsOfChapter(firestore, id, PRIMARY_LANG));\n        })();\n      } else {\n        const { literature, chapter, index: INDEX_MAP } = KURAL_INDEX;\n        if (INDEX_MAP) {\n          if (category === 'literature' && resultCategory === 'chapter') {\n            setResult(\n              fillRange(INDEX_MAP.litChapMap[id]).map((c) => chapter[c])\n            );\n          } else if (\n            category === 'section' &&\n            resultCategory === 'literature'\n          ) {\n            setResult(\n              fillRange(INDEX_MAP!!.section[id].litIndex).map(\n                (k) => literature[k]\n              )\n            );\n          } else {\n            throw new Error('category not supported');\n          }\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    firestore,\n    id,\n    PRIMARY_LANG,\n    KURAL_INDEX,\n  ]);\n  return result;\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst CHIP_COLORS = {\n  top: 'blueviolet',\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n};\n\nconst getRoutes: (categories: Partial<CategoryBaseTypeMap>) => RouteProp[] = (\n  categories\n) => {\n  // TODO: move static content to firestore\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: '/list/section',\n      color: CHIP_COLORS.top,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `/list/${categories.section.id}/literature`,\n      color: CHIP_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `/list/${categories.literature.id}/chapter`,\n      color: CHIP_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      type: 'chapter',\n      route: `/list/${categories.chapter.id}/kural`,\n      color: CHIP_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      id: categories.kural.id,\n      value: `குறள்-${categories.kural.id}`,\n      type: 'kural',\n      route: `/list/kural/${categories.kural.id}`,\n      color: CHIP_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (filter: RouteMap) => [RouteMap, RouteProp[]];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(\n      pathname,\n      '/list/:section/literature'\n    );\n    const literatureRoute = matchPath<{ literature: string }>(\n      pathname,\n      '/list/:literature/chapter'\n    );\n    const chapterRoute = matchPath<{ chapter: string }>(\n      pathname,\n      '/list/:chapter/kural'\n    );\n    const kuralRoute = matchPath<{ kural: string }>(\n      pathname,\n      '/list/kural/:kural'\n    );\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    log.debug('filters', newFilter);\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    log.debug('pathname', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n  // TODO: direct access of http://localhost:3000/#/list/kural/631 doesn't show routes\n  return [routeMap, getRoutes(getRouteValue())];\n};\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SearchStateActionType =\n  | SetSearchKeyword\n  | SetSearchStatus\n  | SetSearchResults\n  | AddSearchResults\n  | SetSearchFilters\n  | SetAllUserSelection\n  | SetUserSelection;\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return { ...state, results: [...state.results, ...action.payload] };\n  } else if (action.type === 'SetSearchResults') {\n    return { ...state, results: action.payload as SearchResult[] };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import { useDispatch } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { SearchTypes } from 'src/lib/api';\nimport {\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n      // isCategoryValidErr('chapter', searchNumber) && types.push('ByChapterNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nconst addResults = (\n  searchTypes: SearchTypes[],\n  keyword: string,\n  dispatch: Dispatch<any>\n): void => {\n  // searchTypes.forEach((type) => {\n  //   const items: SearchResult[] = [];\n  //   switch (type) {\n  //     case 'ByKuralNo':\n  //       items.push({ type, keyword, item: getKural(parseInt(keyword)) });\n  //       break;\n  //     case 'ByChapterNo':\n  //       items.push({ type, keyword, item: getChapter(parseInt(keyword)) });\n  //       break;\n  //     case 'ByLiteratureNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getLiterature(parseInt(keyword)) });\n  //       break;\n  //     case 'BySectionNo':\n  //       // TODO: validate literature no parseInt(keyword)\n  //       items.push({ type, keyword, item: getSection(parseInt(keyword)) });\n  //       break;\n  //   }\n  //   if (items.length > 0) {\n  //     dispatch(appendSearchResults(items));\n  //   }\n  // });\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword, dispatch);\n  };\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","import { isCategoryValid, BaseType, Category } from 'src/lib/api';\n\nimport { useNavigation } from './useNavigation';\n\ntype SubCategoryListType = Exclude<Category, 'chapter' | 'kural'> | 'top';\n\ntype useCategoryType = (\n  type: SubCategoryListType,\n  key: number\n) => (item: BaseType) => void;\nexport const useCategory: useCategoryType = (type, key) => {\n  const [navigateTo] = useNavigation();\n  if (type !== 'top') {\n    isCategoryValid(type, key);\n  }\n  const onItemSelected = (item: BaseType): void => {\n    switch (type) {\n      case 'top':\n        navigateTo(`/list/${item.id}/literature`)();\n        break;\n      case 'section':\n        navigateTo(`/list/${item.id}/chapter`)();\n        break;\n      case 'literature':\n        navigateTo(`/list/${item.id}/kural`)();\n        break;\n    }\n  };\n  return onItemSelected;\n};\n","import React from 'react';\n\nimport { IconButton } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\ntype FavouriteToggleProps = {\n  className?: string;\n  active: boolean;\n  handler: (isActive: boolean) => Promise<boolean>;\n};\n\nconst FavouriteToggle: React.FC<FavouriteToggleProps> = (\n  props: FavouriteToggleProps\n) => {\n  const [isActive, toggleActive] = React.useState<boolean>(props.active);\n  const toggle = (): void => {\n    props.handler(!isActive).then((result) => {\n      result && toggleActive(!isActive);\n    });\n  };\n  return (\n    <IconButton\n      color='primary'\n      size='small'\n      onClick={toggle}\n      className={props.className}>\n      {isActive && <FavoriteIcon className='active' />}\n      {!isActive && <FavoriteBorderIcon className='inactive' />}\n    </IconButton>\n  );\n};\n\nexport default FavouriteToggle;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { Category } from 'src/lib/api';\n\nimport { AppState } from '../../state/reducers';\nimport FavouriteToggle from '../../views/components/common/FavouriteToggle';\n\nconst useStyles = makeStyles((theme) => ({\n  favStyle: {\n    color: 'rgba(215, 22, 64, 0.8)',\n  },\n}));\n\nconst isFavourite = (\n  type: 'kural' | 'chapter',\n  itemNo: number,\n  items: number[]\n): boolean => {\n  // TODO:\n  return true;\n};\ntype ToggleFavourite = (favourite: boolean) => void;\ntype useKuralHeaderType = (\n  type: Exclude<Category, 'section' | 'literature'>,\n  path: string\n) => React.ReactNode;\nexport const useFavouriteDetector: useKuralHeaderType = (type, path) => {\n  const classes = useStyles();\n  const { [type]: FAVOURITE_ITEMS } = useSelector(\n    (st: AppState) => st.preferences.favorites\n  );\n  const { pathname } = useLocation();\n  const isRoute = matchPath<any>(pathname, path);\n  let element: React.ReactNode = null;\n  const setFavourite: ToggleFavourite = (flag: boolean) => {\n    // TODO:\n  };\n  if (isRoute?.isExact) {\n    element = (\n      <FavouriteToggle\n        className={classes.favStyle}\n        active={isFavourite(\n          type,\n          parseInt(isRoute.params[type]),\n          FAVOURITE_ITEMS\n        )}\n        handler={(isActive: boolean): Promise<boolean> => {\n          setFavourite(isActive);\n          return Promise.resolve(true);\n        }}\n      />\n    );\n  }\n  return element;\n};\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={true}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useCategory, useSubCategory } from '../../../lib/hooks';\nimport ListView from '../common/ListView';\n\ntype ChapterViewerProps = {\n  className?: string;\n};\n\nconst ChapterViewer: React.FC<ChapterViewerProps> = (\n  props: ChapterViewerProps\n) => {\n  const { literature } = useParams<{ literature: string }>();\n  const items = useSubCategory('literature', Number(literature), 'chapter');\n  const onItemSelection = useCategory('literature', Number(literature));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default ChapterViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadgeRight?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: any;\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      <div className={classes.badgeContainer}>{props.kural.id}</div>\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    padding: theme.spacing(1),\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { Kural } from '../api';\nimport { getKural, getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const {\n    preferences: {\n      preference: {\n        language: { primary },\n      },\n    },\n    kuralIndexMap: { transliterator: transliterators },\n  } = useSelector((st: AppState) => st);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      // TODO: get kuralDetail only of user language\n      if (typeof kuralInput === 'number') {\n        setKural(await getKural(firestore, kuralInput, primary));\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, primary]);\n  const filteredTransliteratorMap = Object.values(transliterators)\n    .filter((trans) => trans.lang === primary)\n    .sort((t1, t2) => {\n      const [t1r, t2r] = [t1.rank, t2.rank];\n      return t1r && t2r ? t1r - t2r : t1r ? -1 : 1;\n    });\n  return [kural, kuralDetail, filteredTransliteratorMap];\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { mod } from 'react-swipeable-views-core';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition, isCategoryValid } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralDetail from './KuralDetail';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const [navigateTo] = useNavigation();\n  const params = useParams<{ kural: string }>();\n  const kuralNo = parseInt(params.kural);\n  return (\n    <>\n      {/* <KuralDetail kural={kuralNo} /> */}\n      <VirtualizeSwipeableViews\n        enableMouseEvents\n        overscanSlideBefore={kuralNo === 1 ? 0 : 1}\n        overscanSlideAfter={kuralNo === 1330 ? 0 : 1}\n        index={kuralNo - 1}\n        onChangeIndex={(index, indexLatest): void => {\n          navigateTo(\n            `/list/kural/${getItemByPosition(\n              'kural',\n              index - indexLatest < 0 ? 'PREV' : 'NEXT',\n              kuralNo\n            )}`\n          )();\n        }}\n        slideRenderer={({ key, index }): React.ReactNode => {\n          const nextIndex = mod(index, 1330) + 1;\n          // TODO: 1000 above requests firing when loading 1329th kural detail\n          // return null;\n          return isCategoryValid('kural', nextIndex) ? (\n            <KuralDetail key={key} kural={nextIndex} />\n          ) : null;\n        }}\n      />\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(`/list/kural/${kural.id}`)();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          className={classes.kuralCard}\n          key={k.id}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const kurals = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { mod } from 'react-swipeable-views-core';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { getItemByPosition, isCategoryValid } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const { chapter } = useParams<{ chapter: string }>();\n  const chapterNo = Number(chapter);\n  const [navigateTo] = useNavigation();\n  return (\n    <div className={props.className}>\n      <VirtualizeSwipeableViews\n        enableMouseEvents\n        overscanSlideBefore={chapterNo === 1 ? 0 : 1}\n        overscanSlideAfter={chapterNo === 133 ? 0 : 1}\n        index={chapterNo - 1}\n        onChangeIndex={(index, indexLatest): void => {\n          const chap = parseInt(chapter);\n          navigateTo(\n            `/list/${getItemByPosition(\n              'chapter',\n              index - indexLatest < 0 ? 'PREV' : 'NEXT',\n              chap\n            )}/kural`\n          )();\n        }}\n        slideRenderer={({ key, index }): React.ReactNode => {\n          const nextIndex = mod(index, 133) + 1;\n          return isCategoryValid('chapter', nextIndex) ? (\n            <ListKuralsOfChapter key={key} chapterNo={nextIndex} />\n          ) : null;\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useCategory, useSubCategory } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\n\ntype LiteratureViewerProps = {\n  className?: string;\n};\n\nconst LiteratureViewer: React.FC<LiteratureViewerProps> = (\n  props: LiteratureViewerProps\n) => {\n  const { section } = useParams<{ section: string }>();\n  const items = useSubCategory('section', Number(section), 'literature');\n  const onItemSelection = useCategory('section', Number(section));\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={items}\n        onItemSelected={(item): void => onItemSelection(item)}\n      />\n    </>\n  );\n};\n\nexport default LiteratureViewer;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useNavigation } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport ListView from './../common/ListView';\n\ntype SectionViewerProps = {\n  className?: string;\n};\n\nconst SectionViewer: React.FC<SectionViewerProps> = (\n  props: SectionViewerProps\n) => {\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [navigateTo] = useNavigation();\n  return (\n    <>\n      <ListView\n        className={props.className}\n        items={Object.values(sections)}\n        onItemSelected={(item): void => {\n          navigateTo(`/list/${item.id}/literature`)();\n        }}\n      />\n    </>\n  );\n};\n\nexport default SectionViewer;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListSubheader,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { findChapterNoFromKuralNo } from 'src/lib/api';\nimport { Chapter, Kural, BaseType } from 'src/lib/api';\nimport { useBaseItem } from 'src/lib/hooks';\nimport { useNavigation } from 'src/lib/hooks';\n\nimport ListView from '../common/ListView';\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(2),\n    // padding: theme.spacing(1),\n  },\n  list: {\n    '& .list-group': {},\n    '& .sub-list': {\n      // paddingTop: 16,\n      '& li:last-child': {\n        borderBottom: 'unset',\n        marginBottom: 'unset',\n      },\n    },\n    '& .sub-header': {\n      textAlign: 'left',\n      // lineHeight: '30px',\n      color: 'brown',\n    },\n  },\n  chapFavorites: {\n    paddingBottom: 0,\n    '& li:last-child': {\n      borderBottom: 'unset',\n    },\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expand?: boolean;\n};\n\nconst FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const [getChapter] = useBaseItem('chapter');\n  const [chapters, setChapters] = React.useState<Chapter[]>([]);\n  const [kurals, setKurals] = React.useState<Kural[]>([]);\n  const [isKuralVisible, setKuralVisible] = React.useState<boolean>(\n    props.expand ?? true\n  );\n  const [isChapterVisible, setChapterVisible] = React.useState<boolean>(\n    props.expand ?? false\n  );\n  const [navigateTo] = useNavigation();\n  const classes = useStyles();\n  // const [, , getFavorites] = useFavorites();\n  const onChapterSelected = (item: BaseType): void => {\n    navigateTo(`/list/${item.id}/kural`)();\n  };\n  const sortById = (items: BaseType[]): BaseType[] =>\n    items.sort((it1, it2) => it1.id - it2.id);\n  // React.useEffect(() => {\n  // const { chapter, kural } = getFavorites();\n  // chapter.then((res) => setChapters(sortById(res)));\n  // kural.then((res) => setKurals(sortById(res)));\n  // }, [getFavorites]);\n  const chapterKuralMap = new Map<number, BaseType[]>([]);\n  kurals.forEach((it) => {\n    const chap = findChapterNoFromKuralNo(it.id);\n    !chapterKuralMap.has(chap)\n      ? chapterKuralMap.set(chap, [it])\n      : chapterKuralMap.set(chap, [...(chapterKuralMap.get(chap) || []), it]);\n  });\n  const noRecordsFound = <h1>None Found</h1>;\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        <ListItem\n          selected={isKuralVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setKuralVisible(!isKuralVisible);\n          }}>\n          <ListItemText primary='Kurals' />\n          {isKuralVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isKuralVisible} timeout='auto'>\n          {chapterKuralMap.size > 0 &&\n            Array.from(chapterKuralMap.keys()).map((k) => {\n              const chapterInfo = getChapter(k);\n              return (\n                <List\n                  component='div'\n                  className='sub-list'\n                  key={k}\n                  disablePadding>\n                  {chapterInfo && (\n                    <ListSubheader\n                      className='sub-header'\n                      disableSticky\n                      onClick={(): void => onChapterSelected(chapterInfo)}>\n                      {chapterInfo.value}\n                    </ListSubheader>\n                  )}\n\n                  {chapterKuralMap.get(k)?.map((item) => (\n                    <KuralCard key={item.id} kural={item} />\n                  ))}\n                </List>\n              );\n            })}\n          {chapterKuralMap.size === 0 && noRecordsFound}\n        </Collapse>\n        <ListItem\n          selected={isChapterVisible}\n          className={'list-group'}\n          button\n          onClick={(): void => {\n            setChapterVisible(!isChapterVisible);\n          }}>\n          <ListItemText primary='Chapters' />\n          {isChapterVisible ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={isChapterVisible} timeout='auto'>\n          {chapters.length > 0 && (\n            <ListView\n              className={classes.chapFavorites}\n              items={chapters}\n              onItemSelected={(item: BaseType): void => onChapterSelected(item)}\n            />\n          )}\n          {chapters.length === 0 && noRecordsFound}\n        </Collapse>\n      </List>\n    </div>\n  );\n};\n\nexport default FavoritesViewer;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FavoritesViewer from '../../components/kural/FavoritesViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; */\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Card variant='outlined' className={classes.favoriteCard}>\n        {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n        <CardHeader title='Favorites' className='card-header' />\n        <CardContent className='card-content'>\n          <FavoritesViewer expand={false} />\n        </CardContent>\n      </Card>\n      {/* <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({ route }: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const onLongPress = useLongPress(() => {\n    // TODO: favourite\n    console.log('long press', route);\n  });\n  return (\n    <Chip\n      {...onLongPress}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip route={item} key={index} />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300): any => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { renderRoutes } from 'react-router-config';\nimport { useFavouriteDetector } from 'src/lib/hooks';\nimport RouteViewer from 'src/views/components/kural/RouteViewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst ListPage: React.FC<any> = (props: any) => {\n  const classes = useStyles();\n  const chapterFavNode = useFavouriteDetector(\n    'chapter',\n    '/list/:chapter/kural'\n  );\n  const kuralFavNode = useFavouriteDetector('kural', '/list/kural/:kural');\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer renderRight={chapterFavNode || kuralFavNode} />\n      </Container>\n      <div className={classes.root}>{renderRoutes(props.route.routes)}</div>\n    </>\n  );\n};\n\nexport default ListPage;\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\nconst SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const history = useHistory();\n  const [setSearchKey] = useKuralSearch();\n  const [debouncedCallback] = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const isSearchRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: SEARCH_ROUTE })?.isExact ||\n    false;\n  const [focus, setFocus] = React.useState(isSearchRoute());\n\n  React.useEffect(() => {\n    debouncedCallback(keyword);\n  }, [debouncedCallback, keyword]);\n\n  history.listen(({ pathname }) => {\n    if (pathname !== SEARCH_ROUTE) {\n      setKeyword('');\n      setFocus(false);\n    } else {\n      setFocus(true);\n    }\n  });\n  const onSearchBarFocus = (): void => {\n    if (history.location.pathname !== SEARCH_ROUTE) {\n      debug('route -> search');\n      history.push(SEARCH_ROUTE);\n    }\n  };\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon className={clsx(classes.searchicon, 'search-icon')} />\n      <InputBase\n        className={`searchbar ${classes.input}`}\n        placeholder='Search Kural'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          onSearchBarFocus();\n          props.onSearchTap && props.onSearchTap();\n        }}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardBackspace, Settings } from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { matchPath, useHistory } from 'react-router-dom';\n\nimport KuralSearch from '../kural/KuralSearch';\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'space-around',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  const history = useHistory();\n  const isHomeRoute = (): boolean =>\n    matchPath(history.location.pathname, { path: '/' })?.isExact || false;\n  const renderLeftIcon = (): React.ReactElement => {\n    return !isHomeRoute() ? (\n      <IconButton className={classes.iconButton} onClick={history.goBack}>\n        <KeyboardBackspace color='primary' />\n      </IconButton>\n    ) : (\n      <Avatar\n        className={classes.avatar}\n        alt='Anonymous'\n        src='/static/images/avatar/1.jpg'\n      />\n    );\n  };\n\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {renderLeftIcon()}\n            <KuralSearch className={classes.searchbar} />\n            <div className={classes.actionsGroup}>\n              {props.actions}\n              <IconButton\n                className={classes.iconButton}\n                onClick={(): void => history.push('/settings')}>\n                <Settings color='primary' />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default MyAppBar;\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = {};\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  // {\n  //   icon: <SearchIcon />,\n  //   route: '/search',\n  //   label: 'Search',\n  // },\n  // {\n  //   icon: <FavoriteIcon />,\n  //   route: '/favorite',\n  //   label: 'Favorites',\n  // },\n  // {\n  //   icon: <SettingsIcon />,\n  //   route: '/settings',\n  //   label: 'Settings',\n  // },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport MyAppBar from '../../components/common/MyAppBar';\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      <MyAppBar />\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Chip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n  isResultOfType,\n  SearchResult,\n  BaseType,\n} from 'src/lib/api';\nimport { AppState } from 'src/state/reducers';\nimport { setUserSelection, setAllUserSelections } from 'src/state/search';\nimport KuralCard from 'src/views/components/kural/KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  searchWrapper: {\n    textAlign: 'center',\n  },\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchChipsProps = {};\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst SearchChips: React.FC<SearchChipsProps> = (props: SearchChipsProps) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n\ntype SearchResultItem = {\n  item: BaseType;\n  label: string;\n  onClick: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItem> = ({\n  item,\n  label,\n  onClick,\n}: SearchResultItem) => {\n  return (\n    <div key={item.id} onClick={onClick}>\n      <div>{item.value}</div>\n    </div>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n\n  const renderItem = (item: SearchResult): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <KuralCard\n          key={item.item.id}\n          kural={item.item}\n          className={classes.kuralSearchItem}\n          showBadgeRight={true}\n        />\n        // <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    // TODO:\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem item={item.item} label='' onClick={(): void => {}} />\n      );\n    }\n    // if (isResultOfType(item, 'detail') && search.userSelections.detail) {\n    //   return <>detail: {item.item.value}</>;\n    // }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <SearchChips />\n      <List>\n        {search.results.map((item, i) => (\n          <ListItem key={i} divider={true}>\n            {renderItem(item)}\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Select,\n  FormControl,\n  MenuItem,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { AppState } from '../../../state/reducers';\nimport { applyPreference, DEFAULT } from '../../../state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {\n    fontSize: '1em',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst getFontSizeOptions = (\n  baseSize: number,\n  count: number,\n  offset = 2\n): number[] => {\n  const result = [];\n  let size = baseSize;\n  while (count > 0) {\n    result.push(size);\n    size = size + offset;\n    count--;\n  }\n  return result;\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { preference } = useSelector((st: AppState) => st.preferences);\n  const fontSizeOptions: Array<number> = getFontSizeOptions(\n    DEFAULT.preference.fontSize - 4,\n    10\n  );\n  const onFontChange = (fontSize: number): void => {\n    dispatch(applyPreference(Object.assign(preference, { fontSize })));\n  };\n\n  return (\n    <div className={props.className}>\n      <List>\n        <ListItem className={classes.item}>\n          <ListItemText\n            classes={{ primary: classes.itemText }}\n            primary={SettingsLabel.FONT_SIZE}\n          />\n          <FormControl className={classes.formControl}>\n            <Select\n              value={preference.fontSize}\n              onChange={(e): void => onFontChange(e.target.value as number)}>\n              {fontSizeOptions.map((v) => (\n                <MenuItem key={v} value={v}>\n                  {v}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport ChapterViewer from './views/components/kural/ChapterViewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport LiteratureViewer from './views/components/kural/LiteratureViewer';\nimport SectionViewer from './views/components/kural/SectionViewer';\nimport Home from './views/pages/home/home';\nimport ListPage from './views/pages/list/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      /* {\n        path: ROUTE_CONSTANTS.FAVOURITE,\n        component: FavoritesViewer,\n        exact: true,\n      }, */\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListPage,\n        routes: [\n          {\n            path: '/list/section',\n            component: SectionViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:section/literature',\n            component: LiteratureViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:literature/chapter',\n            component: ChapterViewer,\n            exact: true,\n          },\n          {\n            path: '/list/:chapter/kural',\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: '/list/kural/:kural',\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: '/list*',\n            // eslint-disable-next-line react/display-name\n            component: (): React.ReactElement => (\n              <Redirect to='/list/1/kural' />\n            ),\n            exact: true,\n          },\n        ],\n      },\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => <Redirect to='/' />,\n      },\n    ],\n  },\n];\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const settings = useSelector((st: AppState) => st.preferences);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n  return (\n    <div\n      className={classes.root}\n      style={{ fontSize: settings.preference.fontSize }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  preferences: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppStore } from './state';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}