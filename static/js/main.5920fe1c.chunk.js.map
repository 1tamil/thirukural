{"version":3,"sources":["state/kuralIndex/index.ts","state/kuralIndex/reducer.ts","state/kuralIndex/actions.ts","state/settings/index.ts","lib/hooks/useNavigation.tsx","lib/hooks/useSubCategory.tsx","lib/hooks/useBaseItem.tsx","views/components/common/AnimatedExpandedIcon.tsx","views/components/category-viewer/category-list-item.tsx","views/components/category-viewer/category-viewer.tsx","views/components/category-viewer/category-viewer-container.tsx","views/components/kural/KuralCard.tsx","views/components/kural/KuralDetail.tsx","lib/hooks/useKuralDetail.tsx","views/components/kural/RouteViewer.tsx","views/components/kural/KuralDetailViewer.tsx","views/components/kural/ListKuralCard.tsx","views/components/kural/ListKuralsOfChapter.tsx","views/components/kural/KuralsByChapterViewer.tsx","views/pages/settings/RankTransliteratorSetting.tsx","views/components/common/HideOnScroll.tsx","views/components/common/MyAppBar.tsx","views/components/common/ListView.tsx","views/components/favourite-viewer/chapter-fav-list.tsx","views/components/favourite-viewer/kural-fav-list.tsx","views/components/favourite-viewer/index.tsx","views/pages/home/index.tsx","views/pages/list/index.tsx","state/title/index.ts","views/components/common/MyBottomNavigationBar.tsx","views/components/kural/KuralActionBar.tsx","views/pages/main/main.tsx","views/components/kural/KuralSearch.tsx","state/search/index.ts","views/pages/search/SearchChips.tsx","views/pages/search/search.tsx","views/pages/settings/BackgroundPicker.tsx","views/pages/settings/ColorPicker.tsx","views/components/common/DiscreteSlider.tsx","views/pages/settings/FontSizePicker.tsx","views/pages/settings/LanguagePicker.tsx","views/pages/settings/SettingItem.tsx","views/pages/settings/index.tsx","routes.tsx","lib/hooks/useRoute.tsx","lib/hooks/useKuralSearch.ts","lib/hooks/useLongPress.tsx","lib/hooks/useIdbKeyStore.tsx","lib/hooks/useUserPreference.tsx","App.tsx","state/reducers.ts","state/store.ts","state/test.tsx","state/index.tsx","firebase.ts","reportWebVitals.ts","serviceWorkerRegistration.ts","views/styles/theme.ts","index.tsx","lib/api/types.ts","lib/api/category.ts","lib/api/firestore.ts","lib/api/common.ts","lib/api/kural.ts","lib/api/transilterator.ts","lib/api/preference.ts","lib/api/util.ts","lib/api/route.ts","lib/api/user.ts","lib/api/index.ts"],"names":["defaultState","chapter","section","literature","transliterator","index","kurals","KuralIndexReducer","state","action","type","payload","thunkInitKuralIndexMapAndUserPref","firestore","dispatch","a","getUserPreferences","user","primary","preference","language","getKuralIndex","kuralIndex","toBaseTypeMap","getAllSections","sectionMap","getAllLiterature","literatureMap","getAllChapter","chapterMap","getAllTransliterators","transliteratorMap","reduce","oldVal","t1","id","Object","getKurals","kuralsMap","entries","k","v","value","setUser","updateUserFSAsync","updateUserPreference","applyPreference","pref","DEFAULT_COLORS","DEFAULT_BACKGROUND","label","color","ANONYOMOUS_USER","favorites","display","background","secondary","fontSizeType","FontSizeType","MEDIUM","PreferenceReducer","settings","useNavigation","history","useHistory","route","push","useSubCategory","category","resultCategory","Error","isCategoryValidErr","React","useState","result","setResult","KURAL_INDEX","useSelector","st","kuralIndexMap","getLiteraturesBySection","useCallback","sectionId","LITERATURE_MAP","INDEX_MAP","fillRange","litIndex","map","getChaptersFromLiterature","litId","CHAPTER_MAP","litChapMap","c","useEffect","getKuralIdsOfChapter","kId","length","useBaseItem","items","itemNo","categoryId","getCategoryIds","useStyles","makeStyles","theme","icon","transform","transition","AnimatedExpandedIcon","isExpanded","className","style","classes","ExpandMore","clsx","listItem","cursor","position","borderRadius","spacing","WebkitTapHighlightColor","border","paddingLeft","palette","main","listIcon","justifyContent","alignItems","TreeListItem","level","hasNodes","isOpen","toggleNode","focused","onClick","active","ListItem","ev","ListItemText","disableTypography","treeMenuContainer","outlineStyle","list","padding","CategoryViewer","props","debug","List","key","itemProps","CategoryViewerContainer","chapterQueryParam","URLSearchParams","location","search","get","routeKey","pathname","replace","RegExp","ROUTE_CONSTANTS","LIST_CATEGORY","sections","getChaptersByLiterature","TREE_DATA","values","s","sIndex","toString","nodes","lit","ch","chIndex","initialActiveKey","initialFocusKey","initialOpenNodes","split","it","substring","indexOf","getInitialOpenNodes","onClickItem","item","newRoute","lastItemSeparator","lastIndexOf","literatureRoute","currentRoute","data","hasSearch","flexDirection","userSelect","breakpoints","up","badgeContainer","height","fontSize","lineHeight","minWidth","kuralWrapper","width","KuralCard","kural","root","component","componentType","showBadge","dangerouslySetInnerHTML","__html","transliteratorList","only","minHeight","marginBottom","borderBottom","fontWeight","transliteration","paddingTop","paddingBottom","textAlign","WebkitTextStrokeWidth","WebkitTextStroke","letterSpacing","KuralDetail","kuralInput","useFirestore","PRIMARY_LANG","TRANSLITERATORS","KURALS","setKural","kuralDetail","setKuralDetail","getUserTransliterators","userPreferedTranslits","getKuralDetail","useKuralDetail","transliterators","transliteratorId","name","Chip","size","routeContainer","flexWrap","chipRoot","margin","maxWidth","favoriteIcon","RouteChip","onLongPress","navigateTo","longPressEventHandlers","useLongPress","isFavourite","Favorite","backgroundColor","RouteViewer","useRoute","routes","toggleRouteFavourite","renderRight","SwiperCore","use","Virtual","Keyboard","KuralDetailViewer","params","useParams","KURAL_NO","parseInt","activeKuralNo","setActiveKuralNo","slideKuralIds","Array","from","ITEMS_COUNT_MAP","keys","i","LIST","findCategoryRouteMapString","isCategoryValid","Container","disableGutters","autoHeight","keyboard","grabCursor","initialSlide","spaceBetween","slidesPerView","allowSlideNext","virtual","onTransitionEnd","swiper","activeIndex","virtualIndex","renderSlide","kuralCard","ListKuralCard","openKuralDetail","ListKuralsOfChapter","chapterNo","TransliteratorSectionType","chapterKuralsList","HideOnScroll","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","toolbar","avatar","marginLeft","actionsGroup","iconButton","MyAppBar","AppBar","elevation","Toolbar","actions","gridTemplateColumns","idWrap","opacity","left","labelWrap","ListView","divider","showDivider","onItemSelected","chapFavorites","paddingRight","ChapterFavList","getChapter","chapterIds","sort","filter","KuralFavList","chapterKuralMap","setchapterKuralMap","onKuralSelected","chapMap","kuralIds","chap","findChapterNoFromKuralNo","chapId","chapterInfo","disablePadding","ListSubheader","disableSticky","collapsableGroup","listItemTitle","favCount","FavoritesViewer","filterFav","KURAL_IDS","CHAPTER_IDS","useIdbKeyStore","expanded","visiblity","setVisiblity","noRecordsFound","GroupTitleMaker","isVisible","title","collapseContent","selected","inset","Collapse","timeout","marginTop","favoriteCard","Home","Card","variant","CardHeader","CardContent","defalutTitle","flexGrow","appBar","bottom","top","boxShadow","borderTop","actionItem","MyBottomNavigationBar","BottomNavigation","onChange","_","BottomNavigationAction","ActionBarItems","KuralActionBar","homePath","useRouteMatch","listPath","useLocation","useDispatch","initRoute","isExact","setRoute","find","Main","renderRoutes","createStyles","borderColor","fade","grey","searchicon","clearIcon","input","flex","light","KuralSearch","inputRef","useRef","useKuralSearch","setSearchKey","debounced","useDebouncedCallback","keyword","setKeyword","focus","setFocus","callback","current","querySelector","InputBase","autoFocus","ref","placeholder","inputProps","e","text","onFocus","onSearchTap","onBlur","Fade","trim","sortSearchResults","SortValueMap","b","status","results","filters","userSelections","detail","searchFilter","SearchChips","setFilters","hasStartsWith","f","startsWith","filterOptions","SearchCategoryLabelMap","all","isShow","Set","r","isSelected","CATEGORY_COLORS","selection","searchbar","marginRight","kuralSearchItem","searchItem","searchItemAvatar","SearchResultItem","innerContent","Avatar","charAt","toUpperCase","Search","getOnClickRoute","isResultOfType","renderItem","colorItemContainer","gridTemplateRows","gridGap","colorItem","justifySelf","itemIcon","BackgroundOption","itemSelected","setItemSelection","onSelect","ListItemIcon","Radio","checkedIcon","Check","checked","BackgroundPicker","useFirestoreConnect","COLLECTION_NAME_MAP","DISPLAY","DISPLAY_CONFIG","USER_BG_COLOR","CONFIG","userPreference","updateUserDisplayColor","ICON_MAP","Grade","Whatshot","ColorItem","ColorPicker","USER_COLOR","COLORS","colors","splice","getColors","StyledSlider","withStyles","thumb","track","rail","mark","right","content","markActive","Slider","DiscreteSlider","aria-labelledby","valueLabelDisplay","sliderWrapper","sliderRoot","FontSizePicker","FONT_SIZE_MAP","marks","aria-label","step","min","TINY","max","BIG","fontType","languageItem","languageItemText","itemCheckbox","LanguagePicker","useUserPreference","updateUserPref","LANGUAGE","SECONDARY_LANGS","languageMap","getOrderedLangIds","sortedIds","l","toLocaleLowerCase","orderedLangIds","setOrderdLangIds","isLangActive","langId","onDragEnd","source","destination","reordered","droppableId","provided","snapshot","isDraggingOver","droppableProps","innerRef","draggableId","isDragging","draggableProps","dragHandleProps","Checkbox","subList","subHeader","subListItem","subListItemText","TransliteratorLabel","inactive","toUserLikedTranslitsMap","RankTransliteratorSetting","userTransLits","setUserTransLits","updateState","reorderedTransliterors","JSON","parse","stringify","srcList","ACTIVE","INACTIVE","transilterators","t","subheader","tItem","DragIndicator","itemLabel","itemChild","listItemIcon","SettingItem","showExpandIcon","isItemExpanded","toggleItem","button","suffix","container","unmountOnExit","Divider","IDB_USER_PROFILE","itemText","formControl","fontSizePicker","SettingsLabel","MenuItemIcon","Settings","setUserToLS","Language","People","FormatSize","Palette","Colorize","ROOT","SEARCH","FAVOURITE","SETTINGS","path","exact","SettingsViewer","CHAPTER_NO","activeChapterNo","setActiveChapterNo","slideChapterIds","chId","render","match","url","ROUTE_REGEX","test","to","getRoutes","categories","favourites","includes","default","inputFilter","setInputFilter","routeMap","setRouteMap","findFilters","LITERATURE_NO","SECTION_NO","KURALS_CHAPTER","options","rootCategoryFinder","log","sectionRoute","matchPath","chapterRoute","kuralRoute","newFilter","Number","listen","getRouteValue","output","shouldAddToList","favIndex","findIndex","datetime","Date","addResults","searchTypes","forEach","kuralNo","literatureNo","sectionNo","setSearchKeyword","types","isInteger","searchNumber","findSuitableSearchTypes","setSearchStatus","ms","startLongPress","setStartLongPress","timerId","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","defaultValue","setItem","then","set","userPref","injectUserStyles","bodyStyles","document","body","setProperty","fontFamily","App","lsUser","remoteUser","isEqual","rootReducers","combineReducers","concat","firebase","firebaseReducer","firestoreReducer","devToolsEnhancer","composeWithDevTools","trace","AppStore","createStore","applyMiddleware","thunk","middleware","StoreProvider","configureStore","store","process","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DB_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_FB_APP_ID","REACT_APP_MESUREMENT_ID","FIREBASE_CONFIG","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","enablePersistence","synchronizeTabs","catch","err","code","error","REDUX_FIREBASE_CONF","createFirestoreInstance","config","userProfile","useFirestoreForProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","createMuiTheme","setLevel","ReactDOM","ThemeProvider","AppTheme","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","getLiteratureNoFromChapterNo","isItemInRange","getSectionNoByLiteratureNo","secId","firestoreGetCacheFirst","empty","collection","indexSnapshot","getDocData","docs","doc","getAllBaseItems","lang","collectionKey","sectionSnapshot","Math","ceil","resType","LARGE","SMALL","KURAL","kuralSnapshotRef","KURAL_DETAIL","startKuralNo","TRANSLITERATOR","transliteratorSnapRef","userId","USER","where","FieldPath","documentId","limit","userDocRef","range","out","findCategoryRouteMap","join","convertCategoryRouteMapToString","transliteratorsMap","tMap","userLangs","getUserPreferedLanguages","userTMap","some","userLikedTransliterators","allowedTransliteratorIds","SECTION","USER_FAVOURITES","USER_SEARCH_HISTORY","LITERATURE","CHAPTER"],"mappings":"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","file":"static/js/main.5920fe1c.chunk.js","sourcesContent":["export * from './reducer';\nexport * from './types';\nexport * from './actions';\n","import { InitIndexMapAction, KuralIndexMap } from './types';\n\nconst defaultState: KuralIndexMap = {\n  chapter: {},\n  section: {},\n  literature: {},\n  transliterator: {},\n  index: null,\n  kurals: {},\n};\n\nexport const KuralIndexReducer = (\n  state: KuralIndexMap = defaultState,\n  action: InitIndexMapAction\n): KuralIndexMap => {\n  if (action.type === 'init') {\n    return action.payload;\n  }\n  return state;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  getAllChapter,\n  getAllLiterature,\n  getAllSections,\n  getAllTransliterators,\n  getKuralIndex,\n  getKurals,\n  getUserPreferences,\n  Kural,\n  toBaseTypeMap,\n  Transliterator,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\nimport { setUser, SetUserAction } from './../settings';\nimport { InitIndexMapAction } from './types';\n\nexport const thunkInitKuralIndexMapAndUserPref = (\n  firestore: ExtendedFirestoreInstance\n): ThunkAction<void, AppState, unknown, InitIndexMapAction | SetUserAction> => {\n  return async (dispatch): Promise<void> => {\n    // TODO: fetch data only in userPrimary Language\n    // TODO: add userPreferences separate snapshot listener\n    const user = await getUserPreferences(firestore, 'rajeshsundaram');\n    const { primary } = user.preference.language;\n    const kuralIndex = await getKuralIndex(firestore);\n\n    const sectionMap = toBaseTypeMap(await getAllSections(firestore, primary));\n    const literatureMap = toBaseTypeMap(\n      await getAllLiterature(firestore, primary)\n    );\n    const chapterMap = toBaseTypeMap(await getAllChapter(firestore, primary));\n    const transliteratorMap = (await getAllTransliterators(firestore)).reduce(\n      (oldVal, t1) => ({ ...oldVal, [t1.id]: t1 }),\n      {}\n    ) as Record<number, Transliterator>;\n    const kuralsMap = Object.entries(\n      await getKurals(firestore, primary)\n    ).reduce(\n      (oldVal, [k, v]) => ({\n        ...oldVal,\n        [k]: ({ id: k, value: v } as unknown) as Kural,\n      }),\n      {}\n    ) as Record<number, Kural>;\n    dispatch(setUser(user));\n    dispatch({\n      type: 'init',\n      payload: {\n        section: sectionMap,\n        chapter: chapterMap,\n        literature: literatureMap,\n        index: kuralIndex,\n        transliterator: transliteratorMap,\n        kurals: kuralsMap,\n      },\n    });\n  };\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  BackgroundColorItem,\n  FontSizeType,\n  updateUserPreference,\n  User,\n  UserPreference,\n} from 'src/lib/api';\n\nimport { AppState } from '../reducers';\n\nexport type SetUserAction = { type: 'SetUser'; payload: User };\nexport type UpdateSettingsAction = {\n  type: 'UpdateSettings';\n  payload: Partial<UserPreference>;\n};\ntype SettingsActionTypes = SetUserAction | UpdateSettingsAction;\nexport const SETTINGS_STORAGE = 'settings';\n\nexport const updateUserFSAsync = (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): ThunkAction<void, AppState, unknown, SetUserAction> => {\n  return async (dispatch) => {\n    dispatch(setUser(user));\n    await updateUserPreference(firestore, user);\n  };\n};\n\nexport const setUser = (user: User): SetUserAction => ({\n  type: 'SetUser',\n  payload: user,\n});\n\nexport const applyPreference = (\n  pref: Partial<UserPreference>\n): UpdateSettingsAction => {\n  return {\n    type: 'UpdateSettings',\n    payload: pref,\n  };\n};\n\nexport const DEFAULT_COLORS: string[] = [\n  'rgb(29, 161, 242)',\n  'rgb(224, 36, 94)',\n  'rgb(23, 191, 99)',\n];\nexport const DEFAULT_BACKGROUND: BackgroundColorItem[] = [\n  {\n    label: 'Default',\n    color: 'rgba(255,255,255,1.00)',\n  },\n  {\n    label: 'Dim',\n    color: 'rgb(21, 32, 43)',\n  },\n  {\n    label: 'Lights out',\n    color: 'rgb(0, 0, 0)',\n  },\n];\n\nexport const ANONYOMOUS_USER: User = {\n  id: 'anonymous',\n  favorites: [],\n  preference: {\n    display: {\n      color: DEFAULT_COLORS[0],\n      background: DEFAULT_BACKGROUND[0],\n    },\n    language: {\n      primary: 'ta',\n      secondary: [],\n    },\n    fontSizeType: FontSizeType.MEDIUM,\n  },\n};\nexport const PreferenceReducer = (\n  settings = ANONYOMOUS_USER,\n  action: SettingsActionTypes\n): User => {\n  switch (action.type) {\n    case 'SetUser':\n      return action.payload;\n    case 'UpdateSettings':\n      return {\n        ...settings,\n        preference: { ...settings.preference, ...action.payload },\n      };\n    default:\n      return settings;\n  }\n};\n","import { useHistory } from 'react-router-dom';\n\ntype useNavigationType = () => [(route: string) => () => void];\n\nexport const useNavigation: useNavigationType = () => {\n  const history = useHistory();\n  const navigateTo = (route: string) => {\n    return (): void => {\n      history.push(route);\n    };\n  };\n  return [navigateTo];\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport {\n  BaseType,\n  Category,\n  fillRange,\n  getKuralIdsOfChapter,\n  isCategoryValidErr,\n  RootCategory,\n} from '../api';\n\ntype useSubCategoryType = (\n  category?: RootCategory,\n  id?: number,\n  resultCategory?: Category\n) => [BaseType[], (id: number) => BaseType[], (id: number) => BaseType[]];\nexport const useSubCategory: useSubCategoryType = (\n  category,\n  id,\n  resultCategory\n) => {\n  if (id && category && resultCategory) {\n    if (category === resultCategory) {\n      throw new Error('Bad input');\n    }\n    isCategoryValidErr(category, id);\n  }\n  const [result, setResult] = React.useState<BaseType[]>([]);\n  const KURAL_INDEX = useSelector((st: AppState) => st.kuralIndexMap);\n\n  const getLiteraturesBySection = React.useCallback(\n    (sectionId: number): BaseType[] => {\n      const { literature: LITERATURE_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('section', sectionId);\n      return fillRange(INDEX_MAP!!.section[sectionId].litIndex).map(\n        (k) => LITERATURE_MAP[k]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  const getChaptersFromLiterature = React.useCallback(\n    (litId: number): BaseType[] => {\n      const { chapter: CHAPTER_MAP, index: INDEX_MAP } = KURAL_INDEX;\n      isCategoryValidErr('literature', litId);\n      return fillRange(INDEX_MAP!!.litChapMap[litId]).map(\n        (c) => CHAPTER_MAP[c]\n      );\n    },\n    [KURAL_INDEX]\n  );\n\n  React.useEffect(() => {\n    if (id && category === 'chapter' && resultCategory === 'kural') {\n      setResult(getKuralIdsOfChapter(id).map((kId) => KURAL_INDEX.kurals[kId]));\n    }\n  }, [KURAL_INDEX.kurals, category, id, resultCategory]);\n\n  React.useEffect(() => {\n    if (!result.length && id && resultCategory !== 'kural') {\n      const { index: INDEX_MAP } = KURAL_INDEX;\n      if (INDEX_MAP) {\n        if (category === 'literature' && resultCategory === 'chapter') {\n          setResult(getChaptersFromLiterature(id));\n        } else if (category === 'section' && resultCategory === 'literature') {\n          setResult(getLiteraturesBySection(id));\n        }\n      }\n    }\n  }, [\n    result.length,\n    category,\n    resultCategory,\n    id,\n    KURAL_INDEX,\n    getLiteraturesBySection,\n    getChaptersFromLiterature,\n  ]);\n\n  return [result, getLiteraturesBySection, getChaptersFromLiterature];\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../../state';\nimport { RootCategory, BaseType, getCategoryIds } from '../api';\n\ntype getItemType = (chapterNo: number) => BaseType | null;\ntype getCategoryIdsType = (\n  key: number\n) => Partial<Record<RootCategory, number>>;\nexport type useItemType = (\n  category: RootCategory\n) => [getItemType, getCategoryIdsType];\n\nexport const useBaseItem: useItemType = (category) => {\n  const { [category]: items, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const getItem: getItemType = (itemNo) => items[itemNo] || null;\n  const getCategoryRoute: getCategoryIdsType = (categoryId) =>\n    getCategoryIds(INDEX_MAP!!, category, categoryId);\n  return [getItem, getCategoryRoute];\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: 'inherit',\n    transform: 'rotate(0deg)',\n    transition: 'all 0.2s ease',\n    '&.is-expanded': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype ExpandedIconProps = {\n  className?: string;\n  isExpanded?: boolean;\n  style?: React.CSSProperties;\n};\n\nexport const AnimatedExpandedIcon: React.FC<ExpandedIconProps> = ({\n  isExpanded,\n  className,\n  style,\n}: ExpandedIconProps) => {\n  const classes = useStyles();\n  return (\n    <ExpandMore\n      style={style}\n      className={clsx(classes.icon, isExpanded && 'is-expanded', className)}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { TreeMenuItem } from 'react-simple-tree-menu';\n\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport const TreeListItem: React.FC<TreeMenuItem> = ({\n  level = 0,\n  hasNodes,\n  isOpen,\n  label,\n  toggleNode,\n  focused,\n  onClick,\n  active,\n  ...props\n}: TreeMenuItem) => {\n  const classes = useStyles();\n\n  const toggleCategory = (ev: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    hasNodes && toggleNode && toggleNode();\n    onClick(ev);\n  };\n  return (\n    <ListItem\n      onClick={toggleCategory}\n      className={`${classes.listItem} level-${level} ${focused && 'on-focus'} ${\n        active && 'is-active'\n      }`}>\n      <ListItemText disableTypography primary={label}></ListItemText>\n      {hasNodes && (\n        <div className={classes.listIcon}>\n          <AnimatedExpandedIcon isExpanded={isOpen} />\n        </div>\n      )}\n    </ListItem>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { List, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport TreeMenu, { TreeMenuProps } from 'react-simple-tree-menu';\n\nimport { TreeListItem } from './category-list-item';\n\nconst useStyles = makeStyles((theme) => ({\n  treeMenuContainer: {\n    '&>div': {\n      outlineStyle: 'none',\n    },\n  },\n  list: {\n    padding: `0px ${theme.spacing(1)}px`,\n  },\n  listItem: {\n    cursor: 'pointer',\n    position: 'relative',\n    borderRadius: theme.spacing(2),\n    WebkitTapHighlightColor: 'transparent',\n    border: 'none',\n    '&.level-0': {\n      paddingLeft: theme.spacing(2),\n    },\n    '&.level-1': {\n      paddingLeft: theme.spacing(3),\n    },\n    '&.level-2': {\n      paddingLeft: theme.spacing(4),\n    },\n    '&.on-focus': {\n      color: theme.palette.secondary.main,\n    },\n    '&.is-active': {\n      color: theme.palette.primary.main,\n      border: '2px solid',\n    },\n  },\n  listIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transition: 'all 0.2s ease',\n    transform: 'rotate(0deg)',\n    '&.is-open': {\n      transform: 'rotate(-180deg)',\n    },\n  },\n}));\n\ntype CategoryViewerProps = {\n  className?: string;\n} & TreeMenuProps;\n\nexport const CategoryViewer: React.FC<CategoryViewerProps> = ({\n  className,\n  ...props\n}: CategoryViewerProps) => {\n  const classes = useStyles();\n  debug('CategoryViewer renders');\n  return (\n    <div className={classes.treeMenuContainer}>\n      <TreeMenu {...props}>\n        {({ items }) => (\n          <List className={classes.list}>\n            {items.map(({ key, ...itemProps }) => (\n              <TreeListItem key={key} {...itemProps} />\n            ))}\n          </List>\n        )}\n      </TreeMenu>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TreeNodeInArray, Item } from 'react-simple-tree-menu';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport { CategoryViewer } from './category-viewer';\n\ntype CategoryViewerContainerProps = {\n  className?: string;\n};\n\nexport const CategoryViewerContainer: React.FC<CategoryViewerContainerProps> = (\n  props: CategoryViewerContainerProps\n) => {\n  const history = useHistory();\n  const queryParams = new URLSearchParams(history.location.search);\n  const chapterQueryParam = queryParams.get('chapter');\n  const routeKey = history.location.pathname.replace(\n    // eslint-disable-next-line no-useless-escape\n    new RegExp(`${ROUTE_CONSTANTS.LIST_CATEGORY}(\\/)?`),\n    ''\n  );\n  const getInitialOpenNodes = () => {\n    const nodes = routeKey\n      .split('/')\n      .map((it) => routeKey.substring(0, routeKey.indexOf(it) + it.length));\n    if (nodes.length === 2 && nodes[0] === nodes[1]) {\n      nodes[1] = `${nodes[0]}/${nodes[1]}`;\n    }\n    return nodes;\n  };\n\n  const sections = useSelector((st: AppState) => st.kuralIndexMap.section);\n  const [, getLiteraturesBySection, getChaptersByLiterature] = useSubCategory();\n  const TREE_DATA: TreeNodeInArray[] = Object.values(sections).map(\n    (s, sIndex) => ({\n      key: s.id.toString(),\n      label: s.value,\n      index: sIndex,\n      nodes: getLiteraturesBySection(s.id).map((lit, litIndex) => ({\n        key: lit.id.toString(),\n        label: lit.value,\n        index: litIndex,\n        nodes: getChaptersByLiterature(lit.id).map((ch, chIndex) => ({\n          key: ch.id.toString(),\n          label: ch.value,\n          index: chIndex,\n        })),\n      })),\n    })\n  );\n  const onItemClick = (item: Item) => {\n    const newRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${item.key}`;\n    if (!item.hasNodes) {\n      const lastItemSeparator = item.key.lastIndexOf('/');\n      const chapter = item.key.substring(lastItemSeparator + 1);\n      const literatureRoute = item.key.substring(0, lastItemSeparator);\n      const currentRoute = `${ROUTE_CONSTANTS.LIST_CATEGORY}/${literatureRoute}?chapter=${chapter}`;\n      history.replace(currentRoute);\n      history.push(newRoute);\n    } else {\n      history.replace(newRoute);\n    }\n  };\n  return (\n    <CategoryViewer\n      initialActiveKey={routeKey}\n      initialFocusKey={\n        chapterQueryParam ? `${routeKey}/${chapterQueryParam}` : routeKey\n      }\n      initialOpenNodes={getInitialOpenNodes()}\n      onClickItem={onItemClick}\n      data={TREE_DATA}\n      hasSearch={false}\n    />\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport clsx from 'clsx';\nimport { Kural } from 'src/lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n    alignItems: 'start',\n    [theme.breakpoints.up('sm')]: {\n      cursor: 'pointer',\n    },\n  },\n  badgeContainer: {\n    background: theme.palette.primary.main,\n    color: 'white',\n    height: '1em',\n    fontSize: '0.6em',\n    lineHeight: '0.8em',\n    borderRadius: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px 6px',\n    minWidth: '1em',\n  },\n  kuralWrapper: {\n    width: '100%',\n  },\n}));\n\ntype KuralCardProps = {\n  kural: Kural;\n  onClick?: (kural: Kural) => void;\n  className?: string;\n  showBadge?: boolean;\n  /**\n   * The component used for the root node.\n   * e.g) a, li\n   */\n  componentType?: 'div' | 'span';\n};\nconst KuralCard: React.FC<KuralCardProps> = (props: KuralCardProps) => {\n  const classes = useStyles();\n\n  if (!props.kural || !props.kural.value) {\n    return null;\n  }\n  return (\n    <ListItem\n      className={props.className}\n      classes={{ root: clsx(classes.listItem) }}\n      component={props.componentType || 'li'}>\n      {props.showBadge && (\n        <div className={classes.badgeContainer}>{props.kural.id}</div>\n      )}\n      <div\n        onClick={(): void => props.onClick && props.onClick(props.kural)}\n        className={classes.kuralWrapper}\n        dangerouslySetInnerHTML={{\n          __html: props.kural.value.replace('\\n', '<br>'),\n        }}></div>\n    </ListItem>\n  );\n};\n\nexport default KuralCard;\n","import React from 'react';\n\nimport { makeStyles, ListItem, Chip, List } from '@material-ui/core';\nimport { Kural } from 'src/lib/api';\nimport { useKuralDetail } from 'src/lib/hooks';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  transliteratorList: {\n    cursor: 'grab',\n    userSelect: 'none',\n    padding: theme.spacing(1),\n    [theme.breakpoints.only('xs')]: {\n      minHeight: 400,\n    },\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kural: {\n    padding: theme.spacing(1),\n    borderBottom: 'unset',\n    color: 'brown',\n    fontWeight: 600,\n    '& .kural-badge': {\n      display: 'none',\n    },\n  },\n  transliteration: {\n    padding: 0,\n    flexDirection: 'column',\n    alignItems: 'self-end',\n\n    '& .transliterator-name': {\n      fontSize: '0.7em',\n      height: '1.5em',\n    },\n    '& .content': {\n      fontSize: '0.9em',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'justify',\n      WebkitTextStrokeWidth: '0.2px',\n      WebkitTextStroke: 'thin',\n      letterSpacing: 1,\n    },\n  },\n}));\n\ntype KuralDetailProps = {\n  className?: string;\n  kural: Kural | number;\n};\n\nconst KuralDetail: React.FC<KuralDetailProps> = (props: KuralDetailProps) => {\n  const classes = useStyles();\n  const [kural, kuralDetail, transliterators] = useKuralDetail(props.kural);\n  return (\n    <>\n      {kural && (\n        <KuralCard\n          kural={kural}\n          className={classes.kural}\n          componentType='div'></KuralCard>\n      )}\n      <List\n        className={props.className}\n        classes={{ root: classes.transliteratorList }}\n        {...props}>\n        {kuralDetail &&\n          transliterators.map(({ id: transliteratorId, name }) => (\n            <ListItem\n              key={transliteratorId}\n              className={classes.transliteration}>\n              <Chip\n                size='small'\n                label={name}\n                color={'primary'}\n                className={'transliterator-name'}\n              />\n              <div className={'content'}>{kuralDetail[transliteratorId]}</div>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default KuralDetail;\n","import * as React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\n\nimport { getUserTransliterators, isCategoryValidErr, Kural } from '../api';\nimport { getKuralDetail, KuralDetail, Transliterator } from '../api';\n\ntype useKuralDetailType = (\n  kural: Kural | number\n) => [Kural | null, KuralDetail | null, Transliterator[]];\n\nexport const useKuralDetail: useKuralDetailType = (kuralInput) => {\n  const firestore = useFirestore();\n  const user = useSelector((st: AppState) => st.user);\n  const { primary: PRIMARY_LANG } = user.preference.language;\n  const TRANSLITERATORS = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const [kural, setKural] = React.useState<Kural | null>(null);\n  const [kuralDetail, setKuralDetail] = React.useState<KuralDetail | null>(\n    null\n  );\n  const [userPreferedTranslits] = getUserTransliterators(user, TRANSLITERATORS);\n\n  React.useEffect(() => {\n    (async (): Promise<void> => {\n      if (typeof kuralInput === 'number') {\n        isCategoryValidErr('kural', kuralInput);\n        setKural(KURALS[kuralInput]);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput));\n      } else {\n        setKural(kuralInput);\n        setKuralDetail(await getKuralDetail(firestore, kuralInput.id));\n      }\n    })();\n  }, [firestore, kuralInput, PRIMARY_LANG, KURALS]);\n  return [kural, kuralDetail, userPreferedTranslits];\n};\n","import React from 'react';\n\nimport { makeStyles, Chip } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  useRoute,\n  useNavigation,\n  useLongPress,\n  RouteProp,\n} from 'src/lib/hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  routeContainer: {\n    display: 'flex',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'start',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  chipRoot: {\n    padding: '0px 0.6em',\n    fontSize: '0.7rem',\n    height: '1.3rem',\n    margin: `0 ${theme.spacing(1 / 2)}px ${theme.spacing(1 / 2)}px 0`,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 200,\n    },\n  },\n  favoriteIcon: {\n    width: '1rem',\n    height: '1rem',\n    margin: 0,\n  },\n}));\n\nexport type KuralChipItem = {\n  label: string;\n  navRoute: string;\n  color: 'default' | 'primary' | 'secondary';\n};\ntype RouteViewerProps = {\n  className?: string;\n  renderRight?: React.ReactNode;\n};\n\ntype RouteChipProps = {\n  route: RouteProp;\n  onLongPress?: (route: RouteProp) => void;\n};\n\nconst RouteChip: React.FC<RouteChipProps> = ({\n  route,\n  onLongPress,\n}: RouteChipProps) => {\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const longPressEventHandlers = useLongPress(() => {\n    onLongPress && onLongPress(route);\n  });\n  // TODO: longpress should not trigger click event\n  return (\n    <Chip\n      {...(route.isFavourite\n        ? { icon: <Favorite className={classes.favoriteIcon} /> }\n        : {})}\n      {...longPressEventHandlers}\n      size='small'\n      label={route.value}\n      color={'primary'}\n      onClick={(): void => {\n        route.route && navigateTo(route.route)();\n      }}\n      style={{ backgroundColor: route.color }}\n      classes={{ root: classes.chipRoot }}\n    />\n  );\n};\n\nconst RouteViewer: React.FC<RouteViewerProps> = (props: RouteViewerProps) => {\n  const classes = useStyles();\n  const [, routes, toggleRouteFavourite] = useRoute({});\n  return (\n    <div className={clsx(classes.routeContainer, props.className)}>\n      <div className={classes.root}>\n        {routes.map((item, index) => (\n          <RouteChip\n            route={item}\n            key={index}\n            onLongPress={(route: RouteProp) => toggleRouteFavourite(route)}\n          />\n        ))}\n      </div>\n      {props.renderRight}\n    </div>\n  );\n};\n\nexport default RouteViewer;\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  findCategoryRouteMapString,\n  isCategoryValid,\n  ITEMS_COUNT_MAP,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport KuralDetail from './KuralDetail';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\ntype KuralDetailViewerProps = {\n  className?: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst KuralDetailViewer: React.FC<KuralDetailViewerProps> = (\n  props: KuralDetailViewerProps\n) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const params = useParams<{ kural: string }>();\n  const KURAL_NO = parseInt(params.kural);\n  const [activeKuralNo, setActiveKuralNo] = React.useState(KURAL_NO);\n  const slideKuralIds = Array.from(Array(ITEMS_COUNT_MAP.kural).keys()).map(\n    (i) => i + 1\n  );\n  const renderSlide = (kId: number, index: number) => (\n    <SwiperSlide key={kId} virtualIndex={index}>\n      <KuralDetail kural={kId} />\n    </SwiperSlide>\n  );\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { kural: activeKuralNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeKuralNo, history]);\n\n  if (!isCategoryValid('kural', KURAL_NO)) {\n    return null;\n  }\n  return (\n    <>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        autoHeight={true}\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={KURAL_NO - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideKuralIds[slideKuralIds.length - 1] !== activeKuralNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveKuralNo(swiper.activeIndex + 1);\n        }}>\n        {slideKuralIds.map((kId, index) => renderSlide(kId, index))}\n      </Swiper>\n    </>\n  );\n};\n\nexport default KuralDetailViewer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport { useSelector } from 'react-redux';\nimport { findCategoryRouteMapString, Kural } from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\n\nimport KuralCard from './KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: theme.spacing(1),\n    paddingTop: '0px',\n    '& li:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  kuralCard: {\n    padding: 0,\n  },\n}));\n\ntype ListKuralCardProps = {\n  kurals: Kural[];\n};\n\nexport const ListKuralCard: React.FC<ListKuralCardProps> = (\n  props: ListKuralCardProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [navigateTo] = useNavigation();\n  const openKuralDetail = (kural: Kural): void =>\n    navigateTo(\n      `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP!!, {\n        kural: kural.id,\n      })}`\n    )();\n  return (\n    <List className={classes.list}>\n      {props.kurals.map((k, i) => (\n        <KuralCard\n          showBadge={true}\n          className={classes.kuralCard}\n          key={i}\n          kural={k}\n          onClick={openKuralDetail}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\n\nimport { useSubCategory } from '../../../lib/hooks';\nimport { ListKuralCard } from './ListKuralCard';\n\ntype ListKuralsOfChapterProps = {\n  className?: string;\n  chapterNo: number;\n};\n\nexport const ListKuralsOfChapter: React.FC<ListKuralsOfChapterProps> = (\n  props: ListKuralsOfChapterProps\n) => {\n  const [kurals] = useSubCategory('chapter', props.chapterNo, 'kural');\n  return <ListKuralCard kurals={kurals} />;\n};\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { findCategoryRouteMapString, ITEMS_COUNT_MAP } from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport SwiperCore, { Virtual, Keyboard } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\nimport { ListKuralsOfChapter } from './ListKuralsOfChapter';\nimport RouteViewer from './RouteViewer';\n\nSwiperCore.use([Virtual, Keyboard]);\n\nconst useStyles = makeStyles((theme) => ({\n  routes: {\n    padding: theme.spacing(1),\n  },\n  chapterKuralsList: {},\n}));\n\ntype KuralListSwipeableProps = {\n  className?: string;\n};\n\nexport const KuralListSwipeable: React.FC<KuralListSwipeableProps> = (\n  props: KuralListSwipeableProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const history = useHistory();\n  const { chapter } = useParams<{ chapter: string }>();\n  const CHAPTER_NO = parseInt(chapter);\n  const [activeChapterNo, setActiveChapterNo] = React.useState(CHAPTER_NO);\n  const slideChapterIds = Array.from(Array(ITEMS_COUNT_MAP.chapter).keys()).map(\n    (i) => i + 1\n  );\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const newRoute = `${\n        ROUTE_CONSTANTS.LIST\n      }/${findCategoryRouteMapString(INDEX_MAP, { chapter: activeChapterNo })}`;\n      debug('replace route to => ', newRoute);\n      history.replace(newRoute);\n    }\n  }, [INDEX_MAP, activeChapterNo, history]);\n  const renderSlide = (chId: number, index: number) => (\n    <SwiperSlide key={chId} virtualIndex={index}>\n      <ListKuralsOfChapter chapterNo={chId} />\n    </SwiperSlide>\n  );\n  return (\n    <div className={clsx(classes.chapterKuralsList, props.className)}>\n      <Container disableGutters className={classes.routes}>\n        <RouteViewer />\n      </Container>\n      <Swiper\n        keyboard={true}\n        grabCursor={true}\n        initialSlide={CHAPTER_NO!! - 1}\n        spaceBetween={10}\n        slidesPerView={1}\n        allowSlideNext={\n          slideChapterIds[slideChapterIds.length - 1] !== activeChapterNo\n        }\n        virtual\n        onTransitionEnd={(swiper) => {\n          setActiveChapterNo(swiper.activeIndex + 1);\n        }}>\n        {slideChapterIds.map((chId, index) => renderSlide(chId, index))}\n      </Swiper>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n} from '@material-ui/core';\nimport { DragIndicator } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  getUserTransliterators,\n  Transliterator,\n  User,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport { applyPreference } from 'src/state/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  subList: {\n    '&.dragging-over': {\n      backgroundColor: 'lightblue',\n    },\n  },\n  subHeader: {\n    textAlign: 'left',\n    lineHeight: '1.5em',\n  },\n  subListItem: {\n    '&.is-dragging': {\n      backgroundColor: 'red',\n    },\n  },\n  subListItemText: {\n    fontSize: '0.8em',\n  },\n}));\n\ntype RankTransliteratorSettingProps = {\n  user: User;\n  className?: string;\n};\n\nenum TransliteratorSectionType {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n}\ntype TransliteratorSectionMapType = Record<\n  TransliteratorSectionType,\n  Transliterator[]\n>;\n\nconst TransliteratorLabel: Record<TransliteratorSectionType, string> = {\n  active: 'Active',\n  inactive: 'InActive',\n};\n\nconst toUserLikedTranslitsMap = (\n  user: User,\n  transliterators: Record<number, Transliterator>\n): TransliteratorSectionMapType => {\n  const [activeList, inActiveList] = getUserTransliterators(\n    user,\n    transliterators\n  );\n  return { active: activeList, inactive: inActiveList };\n};\n\nexport const RankTransliteratorSetting: React.FC<RankTransliteratorSettingProps> = (\n  props: RankTransliteratorSettingProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const transliterators = useSelector(\n    (st: AppState) => st.kuralIndexMap.transliterator\n  );\n  const [userTransLits, setUserTransLits] = React.useState(\n    toUserLikedTranslitsMap(props.user, transliterators)\n  );\n  React.useEffect(() => {\n    setUserTransLits(toUserLikedTranslitsMap(props.user, transliterators));\n  }, [props.user, transliterators]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    if (!destination) {\n      return;\n    }\n    let updateState = false;\n    const reorderedTransliterors = JSON.parse(\n      JSON.stringify(userTransLits)\n    ) as TransliteratorSectionMapType;\n    const srcList =\n      reorderedTransliterors[source.droppableId as TransliteratorSectionType];\n    if (\n      srcList.length <= 1 &&\n      source.droppableId === TransliteratorSectionType.ACTIVE &&\n      destination.droppableId === TransliteratorSectionType.INACTIVE\n    ) {\n      // Note: Don't allow active transliterators to go empty.\n      return;\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n      const destList =\n        reorderedTransliterors[\n          destination.droppableId as TransliteratorSectionType\n        ];\n      destList.splice(destination.index, 0, srcList[source.index]);\n      srcList.splice(source.index, 1);\n      updateState = true;\n    } else if (source.index !== destination.index) {\n      srcList.splice(destination.index, 0, ...srcList.splice(source.index, 1));\n      updateState = true;\n    }\n    if (updateState) {\n      const userPreference = {\n        ...props.user.preference,\n        transilterators: reorderedTransliterors.active.map((t) => t.id),\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {Object.entries(userTransLits).map(([key, list]) => (\n        <Droppable droppableId={key} key={key}>\n          {(provided, snapshot) => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={clsx(\n                classes.subList,\n                snapshot.isDraggingOver && 'dragging-over'\n              )}\n              subheader={\n                <ListSubheader component='div' className={classes.subHeader}>\n                  {TransliteratorLabel[key as TransliteratorSectionType]}\n                </ListSubheader>\n              }>\n              {list.map((tItem, index) => (\n                <Draggable\n                  key={tItem.id}\n                  draggableId={tItem.id.toString()}\n                  index={index}>\n                  {(provided, snapshot) => (\n                    <ListItem\n                      className={clsx(\n                        classes.subListItem,\n                        snapshot.isDragging && 'is-dragging'\n                      )}\n                      style={provided.draggableProps.style}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}>\n                      <ListItemIcon>\n                        <DragIndicator className='is-app-color' />\n                      </ListItemIcon>\n                      <ListItemText\n                        disableTypography\n                        primary={tItem.name}\n                        className={classes.subListItemText}\n                      />\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      ))}\n    </DragDropContext>\n  );\n};\n","import React from 'react';\n\nimport { useScrollTrigger, Slide } from '@material-ui/core';\n\ntype HideOnScrollProps = {\n  direction: 'left' | 'right' | 'up' | 'down';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  window?: any;\n  children: React.ReactElement;\n};\n\nconst HideOnScroll: React.FC<HideOnScrollProps> = ({\n  children,\n  window,\n}: HideOnScrollProps) => {\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction='down' in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default HideOnScroll;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { debug } from 'loglevel';\n\nimport HideOnScroll from './HideOnScroll';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    padding: 0,\n    justifyContent: 'center',\n    // TODO: set another color\n    color: 'black',\n  },\n  avatar: {\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  actionsGroup: {},\n\n  iconButton: {\n    padding: '6px',\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\ntype MyAppBarProps = {\n  actions?: React.ReactNode;\n};\n\nconst MyAppBar: React.FC<MyAppBarProps> = (props: MyAppBarProps) => {\n  debug('MyAppBar');\n  const classes = useStyles();\n  return (\n    <>\n      <HideOnScroll direction='down' {...props}>\n        <AppBar color='transparent' elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            {/* {renderLeftIcon()} */}\n            Kural\n            <div className={classes.actionsGroup}>{props.actions}</div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\nexport default MyAppBar;\n","import React from 'react';\n\nimport { List, ListItem, makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BaseType } from '../../../lib/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listItem: {\n    cursor: 'pointer',\n    display: 'grid',\n    gridTemplateColumns: '3em auto',\n  },\n  idWrap: {\n    display: 'flex',\n    alignItems: 'center',\n\n    color: theme.palette.primary.main,\n    '& > span': {\n      minWidth: '2em',\n      opacity: 0.5,\n      textAlign: 'center',\n    },\n    '& svg': {\n      position: 'relative',\n      left: '-4px',\n    },\n  },\n  labelWrap: {\n    fontSize: '1.2em',\n    paddingLeft: theme.spacing(1),\n    color: 'cadetblue',\n  },\n}));\n\ntype ListViewProps = {\n  className?: string;\n  items: BaseType[];\n  showDivider?: boolean;\n  onItemSelected: (item: BaseType) => void;\n};\n\nconst ListView: React.FC<ListViewProps> = (props: ListViewProps) => {\n  const classes = useStyles();\n  return (\n    <List className={props.className}>\n      {props.items.map((item) => (\n        <ListItem\n          classes={{ root: classes.listItem }}\n          divider={props.showDivider}\n          key={item.id}\n          onClick={(): void => props.onItemSelected(item)}>\n          <div className={classes.idWrap}>\n            <span>{item.id}</span>\n            <ArrowForwardIosIcon />\n          </div>\n          <div className={classes.labelWrap}>{item.value}</div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { BaseType, findCategoryRouteMapString } from '../../../lib/api';\nimport { useBaseItem, useNavigation } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport ListView from '../common/ListView';\n\nconst useStyles = makeStyles((theme) => ({\n  chapFavorites: {\n    padding: 0,\n    '& li': {\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport interface ChapterFavListProps {\n  chapterIds: number[];\n}\n\nexport const ChapterFavList: React.FC<ChapterFavListProps> = (\n  props: ChapterFavListProps\n) => {\n  const classes = useStyles();\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [getChapter] = useBaseItem('chapter');\n  const [navigateTo] = useNavigation();\n\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n\n  return (\n    <>\n      {props.chapterIds.length && (\n        <ListView\n          className={classes.chapFavorites}\n          items={\n            props.chapterIds\n              .sort()\n              .map((ch) => getChapter(ch))\n              .filter((ch) => ch !== null) as BaseType[]\n          }\n          onItemSelected={onChapterSelected}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { List, ListSubheader, makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport {\n  BaseType,\n  findCategoryRouteMapString,\n  findChapterNoFromKuralNo,\n} from '../../../lib/api';\nimport { useBaseItem, useNavigation } from '../../../lib/hooks';\nimport { ROUTE_CONSTANTS } from '../../../routes';\nimport { AppState } from '../../../state';\nimport KuralCard from './../kural/KuralCard';\n\nconst useStyles = makeStyles((theme) => ({\n  kural: {\n    padding: `0 0 0 ${theme.spacing(1)}px`,\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport interface KuralFavListProps {\n  kuralIds: number[];\n}\n\nexport const KuralFavList: React.FC<KuralFavListProps> = (\n  props: KuralFavListProps\n) => {\n  const classes = useStyles();\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const [getChapter] = useBaseItem('chapter');\n  const [navigateTo] = useNavigation();\n  const [chapterKuralMap, setchapterKuralMap] = React.useState<\n    Record<number, BaseType[]>\n  >({});\n\n  const onChapterSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          chapter: item.id,\n        })}`\n      )();\n    }\n  };\n\n  const onKuralSelected = (item: BaseType): void => {\n    if (INDEX_MAP) {\n      navigateTo(\n        `${ROUTE_CONSTANTS.LIST}/${findCategoryRouteMapString(INDEX_MAP, {\n          kural: item.id,\n        })}`\n      )();\n    }\n  };\n\n  React.useEffect(() => {\n    const chapMap = props.kuralIds.reduce((chapMap, kId) => {\n      const chap = findChapterNoFromKuralNo(kId);\n      if (KURALS[kId] !== undefined) {\n        return {\n          ...chapMap,\n          [chap]: [...(chapMap[chap] || []), KURALS[kId]],\n        };\n      }\n      return chapMap;\n    }, {} as Record<number, BaseType[]>);\n    setchapterKuralMap(chapMap);\n  }, [props.kuralIds, KURALS]);\n\n  return (\n    <>\n      {Object.keys(chapterKuralMap).map((chapId) => {\n        const chapterInfo = getChapter(parseInt(chapId));\n        return (\n          <List\n            component='div'\n            className='sub-list'\n            key={chapId}\n            disablePadding>\n            {chapterInfo && (\n              <ListSubheader\n                className='sub-header'\n                disableSticky\n                onClick={(): void => onChapterSelected(chapterInfo)}>\n                {chapterInfo.value}\n              </ListSubheader>\n            )}\n\n            {chapterKuralMap[parseInt(chapId)].map((item: BaseType) => (\n              <KuralCard\n                className={classes.kural}\n                key={item.id}\n                kural={item}\n                onClick={onKuralSelected}\n              />\n            ))}\n          </List>\n        );\n      })}\n    </>\n  );\n};\n","import React from 'react';\n\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { useIdbKeyStore } from 'src/lib/hooks';\n\nimport { AppState } from '../../../state';\nimport { AnimatedExpandedIcon } from '../common/AnimatedExpandedIcon';\nimport { ChapterFavList } from './chapter-fav-list';\nimport { KuralFavList } from './kural-fav-list';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  collapsableGroup: {},\n  list: {\n    '& .sub-header': {\n      textAlign: 'left',\n      color: 'brown',\n      lineHeight: '2rem',\n      padding: `0px 0 0 ${theme.spacing(0.5)}px`,\n    },\n  },\n  listItemTitle: {\n    '& .toggle-icon-container': {\n      marginLeft: theme.spacing(1.5),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n  favCount: {\n    fontSize: '0.8rem',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\ntype FavoritesViewerProps = {\n  className?: string;\n  expanded?: boolean;\n};\n\nconst IDB_FAV_TOGGLE_STATE = 'IDB_FAV_TOGGLE';\ntype VisibilityState = {\n  kural: boolean;\n  chapter: boolean;\n};\n\nexport const FavoritesViewer: React.FC<FavoritesViewerProps> = (\n  props: FavoritesViewerProps\n) => {\n  const classes = useStyles();\n  const favorites = useSelector((st: AppState) => st.user.favorites);\n  const filterFav = (category: 'kural' | 'chapter') =>\n    (favorites || [])\n      .filter((it) => it.category === category)\n      .map((it) => it.id);\n  const KURAL_IDS = filterFav('kural');\n  const CHAPTER_IDS = filterFav('chapter');\n  const [visiblity, setVisiblity] = useIdbKeyStore<VisibilityState>(\n    IDB_FAV_TOGGLE_STATE,\n    props.expanded\n      ? { kural: true, chapter: true }\n      : { kural: false, chapter: false }\n  );\n\n  const noRecordsFound = <h1>None Found</h1>;\n\n  const GroupTitleMaker = (\n    isVisible: boolean,\n    onClick: () => void,\n    title: React.ReactNode,\n    favCount: React.ReactNode,\n    collapseContent?: React.ReactNode\n  ) => (\n    <>\n      <ListItem\n        selected={isVisible}\n        className={classes.listItemTitle}\n        onClick={onClick}>\n        <ListItemText inset={true} primary={title} />\n        {!isVisible && <span className={classes.favCount}>{favCount}</span>}\n        <div className={`toggle-icon-container`}>\n          <AnimatedExpandedIcon isExpanded={isVisible} />\n        </div>\n      </ListItem>\n      <Collapse\n        in={isVisible}\n        style={{ paddingBottom: isVisible ? 8 : 0 }}\n        className={classes.collapsableGroup}\n        timeout='auto'>\n        {collapseContent || noRecordsFound}\n      </Collapse>\n    </>\n  );\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <List className={classes.list} disablePadding>\n        {GroupTitleMaker(\n          visiblity.kural,\n          () => {\n            setVisiblity({ ...visiblity, kural: !visiblity.kural });\n          },\n          'Kurals',\n          KURAL_IDS.length ? KURAL_IDS.length : null,\n          KURAL_IDS.length && <KuralFavList kuralIds={KURAL_IDS} />\n        )}\n        {GroupTitleMaker(\n          visiblity.chapter,\n          () => {\n            setVisiblity({ ...visiblity, chapter: !visiblity.chapter });\n          },\n          'Chapters',\n          CHAPTER_IDS.length ? CHAPTER_IDS.length : null,\n          CHAPTER_IDS.length && <ChapterFavList chapterIds={CHAPTER_IDS} />\n        )}\n      </List>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, CardHeader } from '@material-ui/core';\nimport MyAppBar from 'src/views/components/common/MyAppBar';\n\nimport { FavoritesViewer } from '../../components/favourite-viewer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    '& .card-header': {\n      // TODO: set another color\n      color: 'black',\n      padding: theme.spacing(1),\n    },\n    '& .card-content': {\n      padding: theme.spacing(0.5),\n    },\n  },\n  favoriteCard: {\n    margin: theme.spacing(1),\n    background: 'inherit',\n    color: 'inherit',\n  },\n}));\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <MyAppBar />\n      <div className={classes.root}>\n        <Card variant='outlined' className={classes.favoriteCard}>\n          {/* <LoadingSpinnerWithBackdrop show={true} /> */}\n          <CardHeader title='Favorites' className='card-header' />\n          <CardContent className='card-content'>\n            <FavoritesViewer expanded={false} />\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype ListWithRouteViewerProps = RouteConfigComponentProps;\n\nexport const ListCategoryViewer: React.FC<ListWithRouteViewerProps> = ({\n  route,\n}: ListWithRouteViewerProps) => {\n  const classes = useStyles();\n  return <div className={classes.root}>{renderRoutes(route?.routes)}</div>;\n};\n","type SetTitleAction = { type: 'SetTitle'; payload: string };\ntype SetDefaultTitleAction = { type: 'DefaultTitle' };\ntype SetAppendTitleAction = { type: 'AppendTitle'; payload: string };\ntype TitleActionTypes =\n  | SetTitleAction\n  | SetDefaultTitleAction\n  | SetAppendTitleAction;\n\nexport const setTitle = (title: string): SetTitleAction => {\n  return {\n    type: 'SetTitle',\n    payload: title,\n  };\n};\nexport const appendTitle = (suffix: string): SetAppendTitleAction => {\n  return {\n    type: 'AppendTitle',\n    payload: suffix,\n  };\n};\n\nexport const setDefaultTitle = (): SetDefaultTitleAction => {\n  return { type: 'DefaultTitle' };\n};\nconst defalutTitle = 'Thirukural';\nexport const TitleReducer = (\n  title = defalutTitle,\n  action: TitleActionTypes\n): string => {\n  switch (action.type) {\n    case 'SetTitle':\n      return action.payload;\n    case 'AppendTitle':\n      return defalutTitle.concat(`-${action.payload}`);\n    case 'DefaultTitle':\n      return defalutTitle;\n    default:\n      return title;\n  }\n};\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  BottomNavigation,\n  BottomNavigationAction,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    background: 'inherit',\n  },\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n    boxShadow: 'none',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n    background: 'inherit',\n  },\n  actionItem: {\n    color: 'inherit',\n  },\n}));\n\nexport type MyBottomNavigationBarItemsType = {\n  icon: React.ReactNode;\n  label: string;\n  route: string;\n};\nexport type MyBottomNavigationBarProps = {\n  items: Array<MyBottomNavigationBarItemsType>;\n  currentRoute: string;\n  className?: string;\n  onChange: (route: string) => void;\n};\n\nconst MyBottomNavigationBar: React.FC<MyBottomNavigationBarProps> = (\n  props: MyBottomNavigationBarProps\n) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, props.className)}>\n      <AppBar position='fixed' color='inherit' className={classes.appBar}>\n        <BottomNavigation\n          value={props.currentRoute}\n          onChange={(_, value: string): void => props.onChange(value)}\n          className={classes.root}>\n          {props.items.map((item, index) => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.route}\n              icon={item.icon}\n              key={index}\n              className={classes.actionItem}\n            />\n          ))}\n        </BottomNavigation>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default MyBottomNavigationBar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport { Search, Settings } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { useNavigation } from 'src/lib/hooks';\nimport { setDefaultTitle, setTitle } from 'src/state/title';\n\nimport MyBottomNavigationBar from './../common/MyBottomNavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\ntype KuralActionBarProps = Record<string, unknown>;\nconst ActionBarItems = [\n  {\n    icon: <HomeIcon />,\n    route: '/',\n    label: 'Home',\n  },\n  {\n    icon: <ListIcon />,\n    route: '/list',\n    label: 'List',\n  },\n  {\n    icon: <Search />,\n    route: '/search',\n    label: 'Search',\n  },\n  {\n    icon: <Settings />,\n    route: '/settings',\n    label: 'Settings',\n  },\n];\n\nconst KuralActionBar: React.FC<KuralActionBarProps> = (\n  props: KuralActionBarProps\n) => {\n  const homePath = useRouteMatch('/');\n  const listPath = useRouteMatch('/list*');\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const initRoute = React.useCallback(\n    (): string =>\n      homePath?.isExact\n        ? ActionBarItems[0].route\n        : listPath?.isExact\n        ? ActionBarItems[1].route\n        : location.pathname,\n    [homePath, listPath, location.pathname]\n  );\n  const [route, setRoute] = React.useState(initRoute());\n  React.useEffect(() => {\n    setRoute(initRoute());\n  }, [initRoute, location]);\n  const classes = useStyles();\n  const [navigateTo] = useNavigation();\n  const navigateBar = (route: string): void => {\n    setRoute(route);\n    navigateTo(route)();\n    if (ActionBarItems[0].route === route) {\n      dispatch(setDefaultTitle());\n    } else {\n      const label = ActionBarItems.find((it) => it.route === route)?.label;\n      if (label) {\n        dispatch(setTitle(label));\n      }\n    }\n  };\n  return (\n    <MyBottomNavigationBar\n      items={ActionBarItems}\n      currentRoute={route}\n      onChange={navigateBar}\n      className={classes.root}\n    />\n  );\n};\n\nexport default KuralActionBar;\n","import React from 'react';\n\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nimport KuralActionBar from '../../components/kural/KuralActionBar';\n\nconst Main: React.FC<RouteConfigComponentProps> = (\n  props: RouteConfigComponentProps\n) => {\n  return (\n    <>\n      {renderRoutes(props.route?.routes)}\n      <KuralActionBar />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport { debug } from 'loglevel';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useKuralSearch } from '../../../lib/hooks';\n\n// const SEARCH_ROUTE = '/search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 400,\n      border: '1px solid',\n      borderRadius: '25px',\n      borderColor: fade(theme.palette.grey[500], 0.5),\n      padding: '0.2em 0.5em',\n      color: theme.palette.primary.main,\n      height: '1.6rem',\n      '&.focus': {\n        borderColor: theme.palette.primary.main,\n        '& .search-icon, & .searchbar': {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n    searchicon: {\n      color: fade(theme.palette.grey[500], 0.5),\n      cursor: 'pointer',\n    },\n    clearIcon: {\n      cursor: 'pointer',\n    },\n    input: {\n      flex: 1,\n      padding: '0px 6px',\n      width: '100%',\n      color: theme.palette.primary.light,\n    },\n  })\n);\n\ntype KuralSearchProps = {\n  className?: string;\n  onSearchTap?: () => void;\n};\n\nconst KuralSearch: React.FC<KuralSearchProps> = (props: KuralSearchProps) => {\n  debug('KuralSearch');\n  const classes = useStyles();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const [setSearchKey] = useKuralSearch();\n  const debounced = useDebouncedCallback((value: string) => {\n    setSearchKey(value);\n  }, 500);\n  const [keyword, setKeyword] = React.useState('');\n  const isKeywordEmpty = (): boolean => keyword.trim().length === 0;\n  const [focus, setFocus] = React.useState(false);\n\n  React.useEffect(() => {\n    debounced.callback(keyword);\n  }, [debounced, keyword]);\n\n  return (\n    <div className={clsx(classes.root, props.className, focus && 'focus')}>\n      <SearchIcon\n        onClick={() => {\n          inputRef.current?.querySelector('input')?.focus();\n        }}\n        className={clsx(classes.searchicon, 'search-icon')}\n      />\n      <InputBase\n        autoFocus\n        ref={inputRef}\n        className={`searchbar ${classes.input}`}\n        placeholder='Search 43, agara'\n        inputProps={{ 'aria-label': 'Search' }}\n        onChange={(e): void => {\n          const text = e.target.value;\n          setKeyword(text);\n        }}\n        value={keyword}\n        onFocus={(): void => {\n          setFocus(true);\n          props.onSearchTap && props.onSearchTap();\n        }}\n        onBlur={() => setFocus(false)}\n      />\n      <Fade in={!isKeywordEmpty()}>\n        <CancelIcon\n          className={classes.clearIcon}\n          onClick={(): void => {\n            setKeyword('');\n          }}\n        />\n      </Fade>\n    </div>\n  );\n};\n\nexport default KuralSearch;\n","import {\n  SearchResult,\n  SearchTypes,\n  Category,\n  SearchCategoryTypes,\n} from 'src/lib/api';\n\n// ACTION TYPES\ntype SetSearchResults = 'SetSearchResults';\ntype AddSearchResults = 'AddSearchResults';\ntype SetSearchFilters = 'SetSearchFilters';\ntype SetUserSelection = 'SetUserSelection';\ntype SetAllUserSelection = 'SetAllUserSelection';\ntype SetSearchKeyword = 'SetSearchKeyword';\ntype SetSearchStatus = 'SetSearchStatus';\n\ntype SetSearchResultAction = {\n  type: SetSearchResults;\n  payload: SearchResult[];\n};\ntype AddSearchResultsAction = {\n  type: AddSearchResults;\n  payload: SearchResult[];\n};\ntype SetSearchFilterAction = {\n  type: SetSearchFilters;\n  payload: SearchTypes[];\n};\ntype SetUserSelectionAction = {\n  type: SetUserSelection;\n  payload: [UserSelectionTypes, boolean];\n};\ntype SetAllUserSelectionAction = {\n  type: SetAllUserSelection;\n  payload: boolean;\n};\ntype SetSearchStatusAction = {\n  type: SetSearchStatus;\n  payload: boolean;\n};\n\ntype SetSearchKeywordAction = {\n  type: SetSearchKeyword;\n  payload: string;\n};\n\ntype SearchStateAction =\n  | SetSearchKeywordAction\n  | SetSearchStatusAction\n  | SetSearchResultAction\n  | SetSearchFilterAction\n  | AddSearchResultsAction\n  | SetAllUserSelectionAction\n  | SetUserSelectionAction;\n\ntype UserSelectionTypes = Exclude<SearchCategoryTypes, 'all'>;\n\n// Actions\n\nexport const setSearchStatus = (status: boolean): SetSearchStatusAction => ({\n  type: 'SetSearchStatus',\n  payload: status,\n});\nexport const clearSearchResults = (): SetSearchResultAction => {\n  return { type: 'SetSearchResults', payload: [] };\n};\nexport const appendSearchResults = (\n  results: SearchResult[]\n): AddSearchResultsAction => {\n  return { type: 'AddSearchResults', payload: results };\n};\n\nexport const setUserSelection = (\n  category: UserSelectionTypes,\n  selection: boolean\n): SetUserSelectionAction => {\n  return { type: 'SetUserSelection', payload: [category, selection] };\n};\n\nexport const setAllUserSelections = (\n  state: boolean\n): SetAllUserSelectionAction => {\n  return { type: 'SetAllUserSelection', payload: state };\n};\n\nexport const setSearchFilters = (\n  results: SearchTypes[]\n): SetSearchFilterAction => {\n  return { type: 'SetSearchFilters', payload: results };\n};\n\nexport const setSearchKeyword = (keyword: string): SetSearchKeywordAction => {\n  return { type: 'SetSearchKeyword', payload: keyword };\n};\n\nconst sortSearchResults = (items: SearchResult[]) => {\n  const SortValueMap: Record<Category, number> = {\n    kural: 1,\n    chapter: 2,\n    literature: 3,\n    section: 4,\n  };\n  return items.sort(\n    (a, b) => SortValueMap[a.category] - SortValueMap[b.category]\n  );\n};\n\n// reducer\ntype SearchState = {\n  /** show search bar */\n  status: boolean;\n  keyword: string;\n  results: SearchResult[];\n  filters: SearchTypes[];\n  userSelections: Record<UserSelectionTypes, boolean>;\n};\nconst defaultState: SearchState = {\n  status: false,\n  keyword: '',\n  results: [],\n  filters: [],\n  userSelections: {\n    chapter: true,\n    kural: true,\n    section: true,\n    literature: true,\n    detail: true,\n  },\n};\nexport const SearchStateReducer = (\n  state = defaultState,\n  action: SearchStateAction\n): SearchState => {\n  if (action.type === 'SetSearchKeyword' && action.payload !== state.keyword) {\n    return { ...state, keyword: action.payload, results: [] };\n  } else if (action.type === 'AddSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults([...state.results, ...action.payload]),\n    };\n  } else if (action.type === 'SetSearchResults') {\n    return {\n      ...state,\n      results: sortSearchResults(action.payload as SearchResult[]),\n    };\n  } else if (action.type === 'SetSearchFilters') {\n    return { ...state, filters: action.payload as SearchTypes[] };\n  } else if (action.type === 'SetUserSelection') {\n    const [category, status] = action.payload as [Category, boolean];\n    return {\n      ...state,\n      userSelections: {\n        ...state.userSelections,\n        [category]: status,\n      },\n    };\n  } else if (action.type === 'SetAllUserSelection') {\n    const status = action.payload as boolean;\n    return {\n      ...state,\n      userSelections: {\n        chapter: status,\n        kural: status,\n        section: status,\n        literature: status,\n        detail: status,\n      },\n    };\n  } else if (action.type === 'SetSearchStatus') {\n    return { ...state, status: action.payload };\n  }\n  return state;\n};\n","import React from 'react';\n\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setAllUserSelections, setUserSelection } from '../../../state/search';\nimport {\n  CATEGORY_COLORS,\n  SearchCategoryLabelMap,\n  SearchCategoryTypes,\n} from './../../../lib/api';\nimport { AppState } from './../../../state';\n\ntype SearchChipsProps = unknown;\ntype FiltersType = {\n  label: string;\n  type: SearchCategoryTypes;\n  isShow: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilter: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    textAlign: 'start',\n    '& .search-chip': {\n      height: '2em',\n      margin: '0 1vw 4px 0',\n      fontSize: '0.7em',\n      minWidth: '15vw',\n      '& svg': {\n        width: '1rem',\n        height: '1rem',\n        [theme.breakpoints.up('sm')]: {\n          width: '1.5rem',\n          height: '1.5rem',\n        },\n      },\n    },\n  },\n}));\n\nexport const SearchChips: React.FC<SearchChipsProps> = (\n  props: SearchChipsProps\n) => {\n  const classes = useStyles();\n  const [filters, setFilters] = React.useState<FiltersType[]>([]);\n  const search = useSelector((st: AppState) => st.search);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const hasStartsWith = (keyword: string): boolean =>\n      search.filters.filter((f) => f.startsWith(keyword)).length > 0;\n    const filterOptions: FiltersType[] = [\n      {\n        label: SearchCategoryLabelMap.all,\n        type: 'all',\n        isShow: new Set(search.results.map((r) => r.type)).size > 1,\n      },\n      {\n        label: SearchCategoryLabelMap.section,\n        type: 'section',\n        isShow: hasStartsWith('BySection'),\n      },\n      {\n        label: SearchCategoryLabelMap.literature,\n        type: 'literature',\n        isShow: hasStartsWith('ByLiterature'),\n      },\n      {\n        label: SearchCategoryLabelMap.chapter,\n        type: 'chapter',\n        isShow: hasStartsWith('ByChapter'),\n      },\n      {\n        label: SearchCategoryLabelMap.kural,\n        type: 'kural',\n        isShow: hasStartsWith('ByKural'),\n      },\n      {\n        label: SearchCategoryLabelMap.detail,\n        type: 'detail',\n        isShow: hasStartsWith('ByKuralDetail'),\n      },\n    ];\n    setFilters(filterOptions);\n  }, [search]);\n  const isSelected = (type: SearchCategoryTypes): boolean => {\n    if (type === 'all') {\n      return (\n        search.userSelections['section'] &&\n        search.userSelections['literature'] &&\n        search.userSelections['chapter'] &&\n        search.userSelections['kural'] &&\n        search.userSelections['detail']\n      );\n    } else {\n      return search.userSelections[type];\n    }\n  };\n\n  const onClick = (type: SearchCategoryTypes): void => {\n    if (type !== 'all') {\n      dispatch(setUserSelection(type, !search.userSelections[type]));\n    } else {\n      dispatch(setAllUserSelections(!isSelected('all')));\n    }\n  };\n  return (\n    <div className={classes.searchFilter}>\n      {filters\n        .filter((f) => f.isShow)\n        .map((f, i) => (\n          <Chip\n            key={i}\n            size='small'\n            className='search-chip'\n            label={f.label}\n            color={'primary'}\n            style={{\n              backgroundColor:\n                CATEGORY_COLORS[\n                  f.type === 'all' || f.type === 'detail' ? 'default' : f.type\n                ],\n            }}\n            variant={isSelected(f.type) ? 'default' : 'outlined'}\n            onClick={(e): void => onClick(f.type)}\n          />\n        ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, ListItem, List, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport {\n  isResultOfType,\n  SearchResult,\n  CATEGORY_COLORS,\n  Category,\n  findCategoryRouteMapString,\n} from 'src/lib/api';\nimport { useNavigation } from 'src/lib/hooks';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state/reducers';\nimport KuralCard from 'src/views/components/kural/KuralCard';\nimport KuralSearch from 'src/views/components/kural/KuralSearch';\n\nimport { SearchChips } from './SearchChips';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  searchbar: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flexGrow: 1,\n  },\n  kuralSearchItem: {\n    margin: 0,\n    padding: 0,\n    borderBottom: 'none',\n  },\n  searchItem: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    cursor: 'pointer',\n  },\n  searchItemAvatar: {\n    width: '2rem',\n    height: '2rem',\n    textAlign: 'center',\n    fontSize: '1rem',\n    marginRight: '0.5rem',\n  },\n}));\n\ntype SearchProps = {\n  className?: string;\n};\n\ntype SearchResultItemProps = {\n  component?: React.ReactNode;\n  result: SearchResult;\n  label: string;\n  onClick?: () => void;\n};\nconst SearchResultItem: React.FC<SearchResultItemProps> = ({\n  result,\n  label,\n  onClick,\n  component,\n}: SearchResultItemProps) => {\n  const classes = useStyles();\n  const innerContent = component ? component : <div>{result.item.value}</div>;\n  return (\n    <ListItem\n      key={`${label}${result.item.id}`}\n      onClick={onClick}\n      className={classes.searchItem}>\n      <Avatar\n        className={classes.searchItemAvatar}\n        style={{ backgroundColor: CATEGORY_COLORS[result.category] }}>\n        {label.charAt(0).toUpperCase()}\n      </Avatar>\n      {innerContent}\n    </ListItem>\n  );\n};\n\nconst Search: React.FC<SearchProps> = (props: SearchProps) => {\n  const classes = useStyles();\n  const search = useSelector((st: AppState) => st.search);\n  const INDEX_MAP = useSelector((st: AppState) => st.kuralIndexMap.index);\n  const getOnClickRoute = React.useCallback(\n    (category: Category, id: number) => {\n      let route = ROUTE_CONSTANTS.LIST_CATEGORY;\n      if (INDEX_MAP) {\n        route += `/${findCategoryRouteMapString(INDEX_MAP, {\n          [category]: id,\n        })}`;\n      }\n      return route;\n    },\n    [INDEX_MAP]\n  );\n  const [navigateTo] = useNavigation();\n  const renderItem = (\n    item: SearchResult,\n    index: number\n  ): React.ReactElement | null => {\n    if (isResultOfType(item, 'kural') && search.userSelections.kural) {\n      return (\n        <SearchResultItem\n          key={index}\n          result={item}\n          label='k'\n          onClick={navigateTo(getOnClickRoute('kural', item.item.id))}\n          component={\n            <KuralCard\n              componentType='span'\n              key={item.item.id}\n              kural={item.item}\n              className={classes.kuralSearchItem}\n            />\n          }\n        />\n      );\n    }\n    if (isResultOfType(item, 'chapter') && search.userSelections.chapter) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='ch'\n          onClick={navigateTo(getOnClickRoute('chapter', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (\n      isResultOfType(item, 'literature') &&\n      search.userSelections.literature\n    ) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='lit'\n          onClick={navigateTo(getOnClickRoute('literature', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    if (isResultOfType(item, 'section') && search.userSelections.section) {\n      return (\n        <SearchResultItem\n          key={index}\n          label='sec'\n          onClick={navigateTo(getOnClickRoute('section', item.item.id))}\n          result={item}\n        />\n      );\n    }\n    return null;\n  };\n  return (\n    <div className={clsx(props.className, classes.root)}>\n      <KuralSearch className={classes.searchbar} />\n      <SearchChips />\n      <List>{search.results.map((item, i) => renderItem(item, i))}</List>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Radio,\n} from '@material-ui/core';\nimport { Check } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore, useFirestoreConnect } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\nimport { applyPreference, DEFAULT_BACKGROUND } from 'src/state/settings';\n\nimport {\n  User,\n  COLLECTION_NAME_MAP,\n  updateUserPreference,\n  BackgroundColorItem,\n} from '../../../lib/api';\nimport { CommonComponentProps } from '../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  colorItemContainer: {\n    display: 'grid',\n    gridTemplateRows: 'repeat(3, auto)',\n    gridGap: '1em',\n  },\n  colorItem: {\n    width: '90%',\n    borderRadius: 10,\n    justifySelf: 'center',\n    border: '2px solid var(--app-color)',\n    '& .radio': { color: 'var(--app-color)' },\n    '&.item1': {\n      color: 'rgb(0,0,0)',\n    },\n    '&.item2': { color: 'white' },\n    '&.item3': { color: 'white' },\n    '& .item': {\n      padding: 0,\n    },\n    '& .text': {\n      color: 'inherit',\n    },\n  },\n  itemIcon: {\n    minWidth: 'none',\n  },\n}));\n\ninterface ColorItemProps {\n  color: string;\n  label: string;\n  isSelected?: boolean;\n  onSelect?: () => void;\n  className?: string;\n}\n\nconst BackgroundOption: React.FC<ColorItemProps> = ({\n  isSelected = false,\n  ...props\n}: ColorItemProps) => {\n  const classes = useStyles();\n  const [itemSelected, setItemSelection] = React.useState(isSelected);\n  React.useEffect(() => {\n    setItemSelection(isSelected);\n  }, [isSelected]);\n  const onItemSelection = () => {\n    setItemSelection(true);\n    props.onSelect && props.onSelect();\n  };\n  return (\n    <div\n      className={clsx(classes.colorItem, props.className)}\n      style={{ backgroundColor: props.color }}\n      onClick={onItemSelection}>\n      <ListItem component='div' classes={{ root: 'item' }}>\n        <ListItemIcon className={classes.itemIcon}>\n          <Radio\n            checkedIcon={<Check />}\n            checked={itemSelected}\n            classes={{ root: 'radio' }}\n          />\n        </ListItemIcon>\n        <ListItemText classes={{ root: 'text' }} primary={props.label} />\n      </ListItem>\n    </div>\n  );\n};\n\nexport interface BackgroundPickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const BackgroundPicker: React.FC<BackgroundPickerProps> = (\n  props: BackgroundPickerProps\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useFirestoreConnect([COLLECTION_NAME_MAP.DISPLAY]);\n  const firestore = useFirestore();\n  const DISPLAY_CONFIG = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.DISPLAY]\n  );\n  const USER_BG_COLOR = props.user.preference.display.background;\n  const getColors = (): BackgroundColorItem[] => {\n    const BG_COLORS = [\n      ...(DISPLAY_CONFIG && DISPLAY_CONFIG.CONFIG\n        ? (DISPLAY_CONFIG.CONFIG.background as BackgroundColorItem[])\n        : DEFAULT_BACKGROUND),\n    ];\n    return BG_COLORS;\n  };\n  const updateUserDisplayColor = (item: BackgroundColorItem) => {\n    const userPreference = {\n      ...props.user.preference,\n      display: {\n        ...props.user.preference.display,\n        background: item,\n      },\n    };\n    dispatch(applyPreference(userPreference));\n    updateUserPreference(firestore, {\n      ...props.user,\n      preference: userPreference,\n    });\n  };\n  return (\n    <Card variant={'outlined'} className={clsx(props.className, classes.root)}>\n      <CardContent className={classes.colorItemContainer}>\n        {getColors().map((item: BackgroundColorItem, i: number) => {\n          return (\n            <BackgroundOption\n              key={i}\n              color={item.color}\n              label={item.label}\n              className={`item${i + 1}`}\n              isSelected={USER_BG_COLOR.color === item.color}\n              onSelect={() => updateUserDisplayColor(item)}\n            />\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BackgroundPicker;\n","import React from 'react';\n\nimport { Card, CardContent, makeStyles } from '@material-ui/core';\nimport {\n  Check,\n  Favorite,\n  Grade,\n  SvgIconComponent,\n  Whatshot,\n} from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore, useFirestoreConnect } from 'react-redux-firebase';\nimport { AppState } from 'src/state';\nimport { applyPreference, DEFAULT_COLORS } from 'src/state/settings';\n\nimport {\n  User,\n  COLLECTION_NAME_MAP,\n  updateUserPreference,\n} from '../../../lib/api';\nimport { CommonComponentProps } from './../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  colorItemContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, auto)',\n    gridGap: '1em',\n  },\n  colorItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    '& .circle': {\n      height: '2.5rem',\n      width: '2.5rem',\n      borderRadius: '50%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      '& svg': {\n        color: 'white',\n      },\n    },\n    '& .icon': {\n      marginTop: '0.5em',\n    },\n  },\n}));\n\nconst ICON_MAP: SvgIconComponent[] = [Favorite, Grade, Whatshot];\n\ninterface ColorItemProps {\n  color: string;\n  icon: SvgIconComponent;\n  isSelected?: boolean;\n  onSelect?: () => void;\n}\n\nconst ColorItem: React.FC<ColorItemProps> = ({\n  isSelected = false,\n  ...props\n}: ColorItemProps) => {\n  const classes = useStyles();\n  const [itemSelected, setItemSelection] = React.useState(isSelected);\n  React.useEffect(() => {\n    setItemSelection(isSelected);\n  }, [isSelected]);\n  const onItemSelection = () => {\n    setItemSelection(!itemSelected);\n    props.onSelect && props.onSelect();\n  };\n  return (\n    <div className={classes.colorItem}>\n      <div\n        className='circle'\n        style={{ backgroundColor: props.color }}\n        onClick={onItemSelection}>\n        {itemSelected && <Check />}\n      </div>\n      <div className='icon'>\n        {<props.icon style={{ color: props.color }} />}\n      </div>\n    </div>\n  );\n};\n\nexport interface ColorPickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const ColorPicker: React.FC<ColorPickerProps> = (\n  props: ColorPickerProps\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useFirestoreConnect([COLLECTION_NAME_MAP.DISPLAY]);\n  const firestore = useFirestore();\n  const DISPLAY_CONFIG = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.DISPLAY]\n  );\n  const USER_COLOR = props.user.preference.display.color;\n  const getColors = (): string[] => {\n    const COLORS = [\n      ...(DISPLAY_CONFIG && DISPLAY_CONFIG.CONFIG\n        ? DISPLAY_CONFIG.CONFIG.colors\n        : DEFAULT_COLORS),\n    ];\n    if (USER_COLOR && COLORS.indexOf(USER_COLOR) === -1) {\n      COLORS.splice(0, 1, USER_COLOR);\n    }\n    return COLORS;\n  };\n  const updateUserDisplayColor = (color: string) => {\n    const userPreference = {\n      ...props.user.preference,\n      display: {\n        ...props.user.preference.display,\n        color,\n      },\n    };\n    dispatch(applyPreference(userPreference));\n    updateUserPreference(firestore, {\n      ...props.user,\n      preference: userPreference,\n    });\n  };\n  return (\n    <Card variant={'outlined'} className={clsx(props.className, classes.root)}>\n      <CardContent className={classes.colorItemContainer}>\n        {getColors().map((c: string, i: number) => {\n          return (\n            <ColorItem\n              key={i}\n              color={c}\n              icon={ICON_MAP[i]}\n              isSelected={USER_COLOR === c}\n              onSelect={() => updateUserDisplayColor(c)}\n            />\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n};\n","import * as React from 'react';\n\nimport { Slider, SliderTypeMap, withStyles } from '@material-ui/core';\nimport { DefaultComponentProps } from '@material-ui/core/OverridableComponent';\n\nexport type DiscreteSliderProps = Partial<DefaultComponentProps<SliderTypeMap>>;\n\nconst StyledSlider = withStyles({\n  root: {\n    height: 8,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    marginTop: '-7px',\n    backgroundColor: 'currentColor',\n    '&:focus, &:hover, &$active': {\n      boxShadow:\n        'rgba(136, 153, 166, 0.2) 0px 0px 7px, rgba(136, 153, 166, 0.15) 0px 1px 3px 1px',\n    },\n  },\n  active: {},\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n  mark: {\n    width: 16,\n    height: 16,\n    borderRadius: '50%',\n    marginLeft: '-6px',\n    opacity: 0.8,\n    marginTop: '-5px',\n    '& ::after': {\n      top: '-15px',\n      left: '-15px',\n      right: '-15px',\n      bottom: '-15px',\n      content: '\"',\n      position: 'absolute',\n      borderRadius: '50%',\n      border: '1px solid',\n    },\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\nexport const DiscreteSlider: React.FC<DiscreteSliderProps> = (props) => {\n  return (\n    <StyledSlider\n      aria-labelledby='discrete-slider'\n      valueLabelDisplay='auto'\n      {...props}\n    />\n  );\n};\n\nexport default DiscreteSlider;\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport {\n  FONT_SIZE_MAP,\n  User,\n  FontSizeType,\n  updateUserPreference,\n} from 'src/lib/api';\nimport { applyPreference, ANONYOMOUS_USER } from 'src/state/settings';\n\nimport { CommonComponentProps } from '../../components';\nimport { DiscreteSlider } from './../../components/common/DiscreteSlider';\n\nconst useStyles = makeStyles((theme) => ({\n  sliderWrapper: {\n    display: 'flex',\n    marginLeft: theme.spacing(3),\n    alignItems: 'center',\n  },\n  sliderRoot: {\n    width: '80%',\n  },\n}));\n\nexport interface FontSizePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const FontSizePicker: React.FC<FontSizePickerProps> = (\n  props: FontSizePickerProps\n) => {\n  const classes = useStyles();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const fontSize =\n    FONT_SIZE_MAP[\n      props.user.preference.fontSizeType ||\n        ANONYOMOUS_USER.preference.fontSizeType\n    ];\n  const marks = Object.entries(FONT_SIZE_MAP).map(([, v]) => ({\n    value: v,\n  }));\n  const onFontChange = (\n    _: React.ChangeEvent<unknown>,\n    value: number | number[]\n  ) => {\n    if (typeof value === 'number') {\n      const fontType = Object.keys(FONT_SIZE_MAP).find(\n        (type) => FONT_SIZE_MAP[type as FontSizeType] === value\n      );\n      const userPreference = {\n        ...props.user.preference,\n        fontSizeType: fontType!! as FontSizeType,\n      };\n      dispatch(applyPreference(userPreference));\n      updateUserPreference(firestore, {\n        ...props.user,\n        preference: userPreference,\n      });\n    }\n  };\n  return (\n    <div\n      className={clsx(\n        props.className && props.className + '-wrapper',\n        classes.sliderWrapper\n      )}>\n      <DiscreteSlider\n        classes={{ root: clsx(classes.sliderRoot, 'is-app-color') }}\n        {...props}\n        aria-label='font-size-picker'\n        value={fontSize}\n        valueLabelDisplay={'off'}\n        step={null}\n        marks={marks}\n        min={FONT_SIZE_MAP.TINY}\n        max={FONT_SIZE_MAP.BIG}\n        onChange={onFontChange}\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  Checkbox,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n  ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport { COLLECTION_NAME_MAP, User } from 'src/lib/api';\nimport { useUserPreference } from 'src/lib/hooks';\nimport { AppState } from 'src/state';\n\nimport { CommonComponentProps } from '../../components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  languageItem: {},\n  languageItemText: {},\n  itemCheckbox: {\n    padding: 0,\n  },\n}));\n\nexport interface LanguagePickerProps extends Partial<CommonComponentProps> {\n  user: User;\n}\n\nexport const LanguagePicker: React.FC<LanguagePickerProps> = (\n  props: LanguagePickerProps\n) => {\n  const classes = useStyles();\n  const [updateUserPref] = useUserPreference();\n  useFirestoreConnect([COLLECTION_NAME_MAP.LANGUAGE]);\n  const {\n    primary: PRIMARY_LANG,\n    secondary: SECONDARY_LANGS,\n  } = props.user.preference.language;\n  const languageMap = useSelector(\n    (st: AppState) => st.firestore.data[COLLECTION_NAME_MAP.LANGUAGE]\n  );\n  const getOrderedLangIds = React.useCallback(\n    () => (): Array<string> => {\n      if (!languageMap) {\n        return [];\n      }\n      const sortedIds = Object.keys(languageMap)\n        .map((l) => l.toLocaleLowerCase())\n        .sort();\n      // Remove Primary lang\n      sortedIds.splice(sortedIds.indexOf(PRIMARY_LANG.toLocaleLowerCase()), 1);\n      // Insert Primary lang at top\n      sortedIds.splice(0, 0, PRIMARY_LANG.toLocaleLowerCase());\n      return sortedIds;\n    },\n    [PRIMARY_LANG, languageMap]\n  );\n  const [orderedLangIds, setOrderdLangIds] = React.useState<Array<string>>([]);\n\n  React.useEffect(() => {\n    setOrderdLangIds(getOrderedLangIds());\n  }, [getOrderedLangIds, languageMap]);\n\n  const onDragEnd = (\n    { source, destination }: DropResult,\n    _: ResponderProvided\n  ): void => {\n    if (!destination) {\n      return;\n    }\n    if (source.index !== destination.index) {\n      const reordered = [...orderedLangIds];\n      reordered.splice(\n        destination.index,\n        0,\n        ...reordered.splice(source.index, 1)\n      );\n      setOrderdLangIds(reordered);\n      if (PRIMARY_LANG !== reordered[0]) {\n        const userPreference = {\n          ...props.user.preference,\n          language: {\n            ...props.user.preference.language,\n            primary: reordered[0],\n          },\n        };\n        updateUserPref(userPreference);\n      }\n    }\n  };\n\n  const isLangActive = (langId: string) => {\n    return PRIMARY_LANG === langId || SECONDARY_LANGS.indexOf(langId) !== -1;\n  };\n  const toggleLang = (langId: string) => {\n    // TODO:\n    // console.log('toggleLang -> langId', langId);\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId={'language'} key={'language'}>\n        {(provided, snapshot) => (\n          <List\n            className={clsx(\n              props.className && props.className + '-wrapper',\n              classes.root,\n              snapshot.isDraggingOver && 'dragging-over'\n            )}\n            {...provided.droppableProps}\n            ref={provided.innerRef}>\n            {orderedLangIds.map((langId, index) => (\n              <Draggable key={langId} draggableId={langId} index={index}>\n                {(provided, snapshot) => (\n                  <ListItem\n                    onClick={() => toggleLang(langId)}\n                    className={clsx(\n                      classes.languageItem,\n                      snapshot.isDragging && 'is-dragging'\n                    )}\n                    style={provided.draggableProps.style}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}>\n                    <ListItemIcon>\n                      <Checkbox\n                        className={clsx(classes.itemCheckbox, 'is-app-color')}\n                        checked={isLangActive(langId)}\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      disableTypography\n                      primary={languageMap[langId].value}\n                      className={classes.languageItemText}\n                    />\n                  </ListItem>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </List>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import React, { FC, PropsWithChildren } from 'react';\n\nimport {\n  Collapse,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { AnimatedExpandedIcon } from './../../components/common/AnimatedExpandedIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  itemLabel: {\n    fontSize: '1em',\n  },\n  itemChild: {\n    padding: theme.spacing(1),\n  },\n  listItemIcon: {\n    '& svg': {\n      color: 'var(--app-color)',\n    },\n  },\n}));\n\ntype SettingItemProps = PropsWithChildren<{\n  label: string;\n  className?: string;\n  isOpen?: boolean;\n  showExpandIcon?: boolean;\n  icon?: React.ReactNode;\n  suffix?: React.ReactNode;\n  divider?: boolean;\n}>;\n\nexport const SettingItem: FC<SettingItemProps> = ({\n  label,\n  className,\n  isOpen = false,\n  showExpandIcon = true,\n  children,\n  ...props\n}: SettingItemProps) => {\n  const classes = useStyles();\n  const [isItemExpanded, toggleItem] = React.useState(isOpen);\n  return (\n    <>\n      <ListItem\n        button\n        className={clsx(className, classes.root)}\n        onClick={(): void => toggleItem(!isItemExpanded)}>\n        {props.icon}\n        <ListItemText\n          classes={{ primary: classes.itemLabel }}\n          primary={label}\n        />\n        {props.suffix}\n        {showExpandIcon && (\n          <ListItemIcon classes={{ root: classes.listItemIcon }}>\n            <AnimatedExpandedIcon isExpanded={isItemExpanded} />\n          </ListItemIcon>\n        )}\n      </ListItem>\n      <Collapse\n        classes={{ container: classes.itemChild }}\n        in={isItemExpanded}\n        timeout='auto'\n        unmountOnExit>\n        {children}\n      </Collapse>\n      {props.divider && <Divider variant='middle' />}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles, List, ListItemIcon } from '@material-ui/core';\nimport {\n  Colorize,\n  FormatSize,\n  Language,\n  Palette,\n  People,\n} from '@material-ui/icons';\nimport { debug } from 'loglevel';\nimport { useSelector } from 'react-redux';\nimport { User } from 'src/lib/api';\nimport { useIdbKeyStore } from 'src/lib/hooks';\n\nimport { AppState } from '../../../state/reducers';\nimport { BackgroundPicker } from './BackgroundPicker';\nimport { ColorPicker } from './ColorPicker';\nimport { FontSizePicker } from './FontSizePicker';\nimport { LanguagePicker } from './LanguagePicker';\nimport { RankTransliteratorSetting } from './RankTransliteratorSetting';\nimport { SettingItem } from './SettingItem';\n\nexport const IDB_USER_PROFILE = 'IDB_USER_PROFILE';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {},\n  itemText: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  fontSizePicker: {\n    // padding: theme.spacing(1),\n  },\n}));\n\nconst SettingsLabel = {\n  FONT_SIZE: 'Font size',\n  TRANSLITERATOR_PICK: 'Transliterators',\n  LANGUAGE_PICK: 'Language',\n  COLOR_PICK: 'Color',\n  BACKGROUND_PICK: 'Background',\n};\n\ntype SettingsProps = {\n  className?: string;\n};\n\nconst MenuItemIcon: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}: React.PropsWithChildren<unknown>) => {\n  return (\n    <ListItemIcon classes={{ root: 'is-app-color' }}>{children}</ListItemIcon>\n  );\n};\n\nconst Settings: React.FC<SettingsProps> = (props: SettingsProps) => {\n  const classes = useStyles();\n  const user = useSelector((st: AppState) => st.user);\n  const [, setUserToLS] = useIdbKeyStore<User>(IDB_USER_PROFILE, user);\n  React.useEffect(() => {\n    setUserToLS(user);\n  }, [setUserToLS, user]);\n  debug('renders Settings');\n  return (\n    <div className={props.className}>\n      <List>\n        <SettingItem\n          label={SettingsLabel.LANGUAGE_PICK}\n          divider={true}\n          icon={\n            <MenuItemIcon>\n              <Language />\n            </MenuItemIcon>\n          }>\n          <LanguagePicker user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.TRANSLITERATOR_PICK}\n          divider={true}\n          icon={\n            <MenuItemIcon>\n              <People />\n            </MenuItemIcon>\n          }>\n          <RankTransliteratorSetting user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.FONT_SIZE}\n          icon={\n            <MenuItemIcon>\n              <FormatSize />\n            </MenuItemIcon>\n          }>\n          <FontSizePicker user={user} className={classes.fontSizePicker} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.COLOR_PICK}\n          icon={\n            <MenuItemIcon>\n              <Palette />\n            </MenuItemIcon>\n          }>\n          <ColorPicker user={user} />\n        </SettingItem>\n        <SettingItem\n          label={SettingsLabel.BACKGROUND_PICK}\n          divider={true}\n          icon={\n            <MenuItemIcon>\n              <Colorize />\n            </MenuItemIcon>\n          }>\n          <BackgroundPicker user={user} />\n        </SettingItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport { RouteConfig, RouteConfigComponentProps } from 'react-router-config';\nimport { Redirect } from 'react-router-dom';\n\nimport { isCategoryValid } from './lib/api';\nimport { CategoryViewerContainer } from './views/components/category-viewer';\nimport KuralDetailViewer from './views/components/kural/KuralDetailViewer';\nimport { KuralListSwipeable } from './views/components/kural/KuralsByChapterViewer';\nimport Home from './views/pages/home';\nimport { ListCategoryViewer } from './views/pages/list';\nimport Main from './views/pages/main/main';\nimport Search from './views/pages/search/search';\nimport SettingsViewer from './views/pages/settings';\n\nexport const ROUTE_CONSTANTS = {\n  ROOT: '/',\n  LIST: '/list',\n  LIST_CATEGORY: '/list',\n  SEARCH: '/search',\n  FAVOURITE: '/favorite',\n  SETTINGS: '/settings',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: ROUTE_CONSTANTS.ROOT,\n    component: Main,\n    routes: [\n      {\n        path: ROUTE_CONSTANTS.SEARCH,\n        component: Search,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.SETTINGS,\n        component: SettingsViewer,\n        exact: true,\n      },\n      {\n        path: ROUTE_CONSTANTS.LIST,\n        component: ListCategoryViewer,\n        routes: [\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n            component: KuralListSwipeable,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n            component: KuralDetailViewer,\n            exact: true,\n          },\n          {\n            path: `${ROUTE_CONSTANTS.LIST_CATEGORY}*`,\n            // eslint-disable-next-line react/display-name\n            render: ({ match }: RouteConfigComponentProps): React.ReactNode => {\n              const route = match.url.replace(ROUTE_CONSTANTS.LIST, '');\n              const ROUTE_REGEX = /^(\\/\\d+)?(\\/\\d+)?$/;\n              if (ROUTE_REGEX.test(route)) {\n                const [section, literature] = [\n                  route.replace(ROUTE_REGEX, '$1').replace('/', ''),\n                  route.replace(ROUTE_REGEX, '$2').replace('/', ''),\n                ];\n                if (\n                  (section === '' && literature === '') ||\n                  (section.length > 0 &&\n                    isCategoryValid('section', parseInt(section))) ||\n                  (literature.length > 0 &&\n                    isCategoryValid('literature', parseInt(literature)))\n                ) {\n                  return <CategoryViewerContainer />;\n                }\n              }\n              return <Redirect to={`${ROUTE_CONSTANTS.LIST}/1/1/1`} />;\n            },\n          },\n        ],\n      },\n\n      {\n        path: ROUTE_CONSTANTS.ROOT,\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/*',\n        // eslint-disable-next-line react/display-name\n        component: (): React.ReactElement => (\n          <Redirect to={ROUTE_CONSTANTS.ROOT} />\n        ),\n      },\n    ],\n  },\n];\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React from 'react';\n\nimport log from 'loglevel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { matchPath, useHistory } from 'react-router-dom';\nimport {\n  CategoryBaseTypeMap,\n  Category,\n  getCategoryIds,\n  RootCategory,\n  findChapterNoFromKuralNo,\n  IndexMapType,\n  CATEGORY_COLORS,\n  UserFavourite,\n} from 'src/lib/api';\nimport { ROUTE_CONSTANTS } from 'src/routes';\nimport { AppState } from 'src/state';\nimport { updateUserFSAsync } from 'src/state/settings';\n\nexport type RouteProp = {\n  id: number;\n  value: string;\n  type: Category | 'top';\n  isFavourite?: boolean;\n  route?: string;\n  color?: string;\n};\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\ntype RouteMap = Partial<Record<Category, number>>;\n\nconst getRoutes: (\n  categories: Partial<CategoryBaseTypeMap>,\n  favourites: UserFavourite[]\n) => RouteProp[] = (categories, favourites) => {\n  // TODO: move static content to firestore\n  const isFavourite = (category: Category, id: number) => {\n    return favourites\n      .filter((it) => it.category === category)\n      .map((it) => it.id)\n      .includes(id);\n  };\n  const routes: RouteProp[] = [\n    {\n      id: 0,\n      value: 'பால்',\n      type: 'top',\n      route: ROUTE_CONSTANTS.LIST_CATEGORY,\n      color: CATEGORY_COLORS.default,\n    },\n  ];\n  if (categories.section) {\n    routes.push({\n      ...categories.section,\n      type: 'section',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section.id}`,\n      color: CATEGORY_COLORS.section,\n    });\n  }\n  if (categories.literature) {\n    routes.push({\n      ...categories.literature,\n      type: 'literature',\n      route: `${ROUTE_CONSTANTS.LIST_CATEGORY}/${categories.section!!.id}/${\n        categories.literature.id\n      }`,\n      color: CATEGORY_COLORS.literature,\n    });\n  }\n  if (categories.chapter) {\n    routes.push({\n      ...categories.chapter,\n      isFavourite: isFavourite('chapter', categories.chapter.id),\n      type: 'chapter',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter.id}`,\n      color: CATEGORY_COLORS.chapter,\n    });\n  }\n  if (categories.kural) {\n    routes.push({\n      ...categories.kural,\n      isFavourite: isFavourite('kural', categories.kural.id),\n      id: categories.kural.id,\n      value: `குறள்: ${categories.kural.id}`,\n      type: 'kural',\n      route: `${ROUTE_CONSTANTS.LIST}/${categories.section!!.id}/${\n        categories.literature!!.id\n      }/${categories.chapter!!.id}/${categories.kural.id}`,\n      color: CATEGORY_COLORS.kural,\n    });\n  }\n  return routes;\n};\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\ntype GetRouteValueType = () => Partial<CategoryBaseTypeMap>;\ntype useRouteType = (\n  filter: RouteMap\n) => [RouteMap, RouteProp[], (route: RouteProp) => void];\nexport const useRoute: useRouteType = (filter) => {\n  const { section, literature, chapter, index: INDEX_MAP } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const user = useSelector((st: AppState) => st.user);\n  const [inputFilter, setInputFilter] = React.useState(filter);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const dispatch = useDispatch();\n  const [routeMap, setRouteMap] = React.useState<RouteMap>({});\n\n  React.useEffect(() => {\n    findFilters(history.location.pathname);\n  }, [history.location.pathname]);\n\n  React.useEffect(() => {\n    if (INDEX_MAP) {\n      const {\n        kural: KURAL_NO,\n        chapter: CHAPTER_NO,\n        literature: LITERATURE_NO,\n        section: SECTION_NO,\n      } = inputFilter;\n      const KURALS_CHAPTER = KURAL_NO\n        ? findChapterNoFromKuralNo(KURAL_NO)\n        : CHAPTER_NO;\n      const routes = {\n        ...rootCategoryFinder(INDEX_MAP, {\n          chapter: KURALS_CHAPTER,\n          literature: LITERATURE_NO,\n          section: SECTION_NO,\n        }),\n        ...(KURAL_NO ? { kural: KURAL_NO } : {}),\n      };\n      log.debug('found routes:', routes);\n      setRouteMap(routes);\n    }\n  }, [INDEX_MAP, inputFilter]);\n\n  const findFilters = (pathname: string): void => {\n    const sectionRoute = matchPath<{ section: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section`,\n      exact: true,\n    });\n    const literatureRoute = matchPath<{ literature: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST_CATEGORY}/:section/:literature`,\n      exact: true,\n    });\n    const chapterRoute = matchPath<{ chapter: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter`,\n      exact: true,\n    });\n    const kuralRoute = matchPath<{ kural: string }>(pathname, {\n      path: `${ROUTE_CONSTANTS.LIST}/:section/:literature/:chapter/:kural`,\n      exact: true,\n    });\n    const section = sectionRoute\n      ? Number(sectionRoute?.params.section)\n      : undefined;\n    const literature = literatureRoute\n      ? Number(literatureRoute?.params.literature)\n      : undefined;\n    const chapter = chapterRoute\n      ? Number(chapterRoute?.params.chapter)\n      : undefined;\n    const kural = kuralRoute ? Number(kuralRoute?.params.kural) : undefined;\n    const newFilter = {\n      section,\n      literature,\n      chapter,\n      kural,\n    };\n    log.debug('route path values => ', JSON.stringify(newFilter));\n    setInputFilter(newFilter);\n  };\n\n  history.listen(({ pathname }) => {\n    log.debug('detect route => ', pathname);\n    findFilters(pathname);\n  });\n\n  const getRouteValue: GetRouteValueType = React.useCallback(() => {\n    return Object.keys(routeMap).reduce((oldVal, k) => {\n      const input = k as Category;\n      let output;\n      switch (input) {\n        case 'section':\n          output = section[routeMap[input]!!];\n          break;\n        case 'literature':\n          output = literature[routeMap[input]!!];\n          break;\n        case 'chapter':\n          output = chapter[routeMap[input]!!];\n          break;\n        case 'kural':\n          // NOTE: setting kural value to empty string as this value not needed\n          output = { id: routeMap[input]!!, value: '' };\n          break;\n      }\n      return { ...oldVal, [input]: output };\n    }, {});\n  }, [chapter, literature, routeMap, section]);\n\n  const toggleRouteFavourite = (route: RouteProp) => {\n    if (route.type === 'kural' || route.type === 'chapter') {\n      const shouldAddToList = !route.isFavourite;\n      let favorites = user.favorites;\n      const favIndex = favorites.findIndex(\n        (it) => it.category === route.type && it.id === route.id\n      );\n      if (shouldAddToList && favIndex === -1) {\n        favorites = [\n          ...favorites,\n          { id: route.id, datetime: new Date(), category: route.type },\n        ];\n      } else {\n        favorites.splice(favIndex, 1);\n      }\n      dispatch(\n        updateUserFSAsync(firestore, {\n          ...user,\n          favorites,\n        })\n      );\n    }\n  };\n  return [\n    routeMap,\n    getRoutes(getRouteValue(), user.favorites),\n    toggleRouteFavourite,\n  ];\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { SearchResult, SearchTypes } from 'src/lib/api';\nimport { AppState } from 'src/state';\nimport {\n  appendSearchResults,\n  clearSearchResults,\n  setSearchFilters,\n  setSearchKeyword,\n  setSearchStatus,\n} from 'src/state/search';\n\nimport { isCategoryValid } from '../api';\n\ntype UseKuralSearchType = () => [\n  (keyword: string) => void,\n  (status: boolean) => void\n];\n\nconst findSuitableSearchTypes = (keyword: string): SearchTypes[] => {\n  const types: SearchTypes[] = [];\n  try {\n    if (Number.isInteger(parseInt(keyword))) {\n      const searchNumber = parseInt(keyword);\n      isCategoryValid('kural', searchNumber) && types.push('ByKuralNo');\n      isCategoryValid('chapter', searchNumber) && types.push('ByChapterNo');\n      isCategoryValid('literature', searchNumber) &&\n        types.push('ByLiteratureNo');\n      isCategoryValid('section', searchNumber) && types.push('BySectionNo');\n    }\n  } catch (e) {}\n  return types;\n};\n\nexport const useKuralSearch: UseKuralSearchType = () => {\n  const dispatch = useDispatch();\n  const KURALS = useSelector((st: AppState) => st.kuralIndexMap.kurals);\n  const { literature, section, chapter } = useSelector(\n    (st: AppState) => st.kuralIndexMap\n  );\n  const setSearchKey = (keyword: string): void => {\n    dispatch(setSearchKeyword(keyword));\n    const searchTypes = findSuitableSearchTypes(keyword);\n    dispatch(setSearchFilters(searchTypes));\n    dispatch(clearSearchResults());\n    addResults(searchTypes, keyword);\n  };\n\n  const addResults = (searchTypes: SearchTypes[], keyword: string): void => {\n    searchTypes.forEach(async (type) => {\n      const items: SearchResult[] = [];\n      switch (type) {\n        case 'ByKuralNo':\n          const kuralNo = parseInt(keyword);\n          if (isCategoryValid('kural', kuralNo)) {\n            items.push({\n              type,\n              keyword,\n              category: 'kural',\n              item: KURALS[kuralNo],\n            });\n          }\n          break;\n        case 'ByChapterNo':\n          const chapterNo = parseInt(keyword);\n          if (isCategoryValid('chapter', chapterNo)) {\n            items.push({\n              type,\n              keyword,\n              item: chapter[parseInt(keyword)],\n              category: 'chapter',\n            });\n          }\n          break;\n        case 'ByLiteratureNo':\n          const literatureNo = parseInt(keyword);\n          if (isCategoryValid('literature', literatureNo)) {\n            items.push({\n              type,\n              keyword,\n              item: literature[parseInt(keyword)],\n              category: 'literature',\n            });\n          }\n          break;\n        case 'BySectionNo':\n          const sectionNo = parseInt(keyword);\n          if (isCategoryValid('section', sectionNo)) {\n            items.push({\n              type,\n              keyword,\n              item: section[parseInt(keyword)],\n              category: 'section',\n            });\n          }\n          break;\n      }\n      if (items.length) {\n        dispatch(appendSearchResults(items));\n      }\n    });\n  };\n\n  const toggleSearch = (status: boolean): void => {\n    dispatch(setSearchStatus(status));\n  };\n  return [setSearchKey, toggleSearch];\n};\n","import { useState, useEffect, useCallback } from 'react';\n\ntype useLongPressType = (\n  callback: () => void,\n  ms?: number\n) => {\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onMouseLeave: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n};\n\nexport const useLongPress: useLongPressType = (callback, ms = 300) => {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId: number | undefined;\n    if (startLongPress) {\n      timerId = window.setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n    return (): void => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop,\n  };\n};\n","import * as React from 'react';\n\nimport { set, get } from 'idb-keyval';\nimport { debug } from 'loglevel';\n\nexport const useIdbKeyStore = <T,>(\n  key: string,\n  defaultValue: T\n): [T, (value: T) => void] => {\n  const [item, setItem] = React.useState<T>(defaultValue);\n  React.useEffect(() => {\n    get(key).then((it) => {\n      if (it) {\n        setItem(JSON.parse(it as string) as T);\n      }\n    });\n  }, [key]);\n  const setValue = (value: T) => {\n    setItem(value);\n    set(key, JSON.stringify(value)).then(() => {\n      debug(`indexdb value of key:${key} got changed`);\n    });\n  };\n  return [item, setValue];\n};\n","import { useDispatch } from 'react-redux';\n\nimport { UserPreference } from '../api';\nimport { applyPreference } from './../../state/settings';\n\nexport const useUserPreference = (): [\n  /* User ,*/ (pref: UserPreference) => void\n] => {\n  const dispatch = useDispatch();\n  //   const user = useSelector((st: AppState) => st.user);\n\n  const updateUserPreference = (userPref: UserPreference) => {\n    dispatch(applyPreference(userPref));\n    // TODO: IGNORE FS update until i18n support\n    /* updateUserPreference(firestore, {\n            ...props.user,\n            preference: userPreference,\n          }); */\n  };\n  return [/* user */ updateUserPreference];\n};\n","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport isEqual from 'lodash.isequal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { FONT_SIZE_MAP, User } from './lib/api';\nimport { useIdbKeyStore } from './lib/hooks';\nimport { routes } from './routes';\nimport { thunkInitKuralIndexMapAndUserPref } from './state/kuralIndex';\nimport { AppState } from './state/reducers';\nimport { IDB_USER_PROFILE } from './views/pages/settings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '3vw',\n    },\n  },\n}));\n\nconst injectUserStyles = (user: User) => {\n  const { fontSizeType, display } = user.preference;\n  const fontFamily = (): string => {\n    const lang = user.preference.language.primary;\n    switch (lang) {\n      case 'ta':\n        return 'Azhagi';\n      default:\n        return 'var(--default-font-family)';\n    }\n  };\n  const bodyStyles = document.body.style;\n  bodyStyles.setProperty('--text-size', `${FONT_SIZE_MAP[fontSizeType]}px`);\n  bodyStyles.setProperty('--app-color', display.color);\n  bodyStyles.setProperty('--app-bg-color', display.background.color);\n  bodyStyles.setProperty('--app-font-family', fontFamily());\n};\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const [lsUser] = useIdbKeyStore<User | null>(IDB_USER_PROFILE, null);\n  const remoteUser = useSelector((st: AppState) => st.user);\n  React.useEffect(() => {\n    dispatch(thunkInitKuralIndexMapAndUserPref(firestore));\n  }, [dispatch, firestore]);\n\n  React.useEffect(() => {\n    lsUser && injectUserStyles(lsUser);\n  }, [lsUser]);\n  React.useEffect(() => {\n    if (!isEqual(lsUser, remoteUser)) {\n      injectUserStyles(remoteUser);\n    }\n  }, [lsUser, remoteUser]);\n  return (\n    <div\n      className={classes.root}\n      style={{\n        fontSize: 'var(--text-size)',\n        color: 'var(--app-color)',\n        backgroundColor: 'var(--app-bg-color)',\n      }}>\n      <Router>{renderRoutes(routes)}</Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { firebaseReducer } from 'react-redux-firebase';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nimport { KuralIndexReducer } from './kuralIndex';\nimport { SearchStateReducer } from './search';\nimport { PreferenceReducer } from './settings';\nimport { TitleReducer } from './title';\n\nexport const rootReducers = combineReducers({\n  kuralIndexMap: KuralIndexReducer,\n  title: TitleReducer,\n  search: SearchStateReducer,\n  user: PreferenceReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport { name } from './../../package.json';\nimport { rootReducers } from './reducers';\n\nconst devToolsEnhancer = composeWithDevTools({\n  name: `${name}-DevTools`,\n  trace: true,\n});\nexport const AppStore = createStore(\n  rootReducers,\n  devToolsEnhancer(applyMiddleware(thunk))\n);\n","import configureStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\n\nexport const mockStore = configureStore(middleware);\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { AppState } from './reducers';\nimport { AppStore } from './store';\nimport { mockStore } from './test';\n\ntype StoreProvideType = {\n  children: React.ReactNode;\n};\n\nconst StoreProvider: React.FC<StoreProvideType> = ({\n  children,\n}: StoreProvideType) => {\n  return <Provider store={AppStore}>{children}</Provider>;\n};\n\ntype MockStoreProps = {\n  children: React.ReactNode;\n  store: AppState;\n};\n\nconst WrapMockStore: React.FC<MockStoreProps> = ({\n  children,\n  store,\n}: MockStoreProps) => {\n  return <Provider store={mockStore(store)}>{children}</Provider>;\n};\n\nexport { StoreProvider, AppStore, WrapMockStore };\nexport type { AppState } from './reducers';\n","import firebase from 'firebase/app';\nimport log from 'loglevel';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport 'firebase/firestore';\n\nimport { AppStore } from './state';\n// import 'firebase/auth';\n/* const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: '/signedIn',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n}; \n<FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} /> */\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DB_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_FB_APP_ID,\n  REACT_APP_MESUREMENT_ID,\n} = process.env;\n\n((): void => {\n  if (\n    !(\n      REACT_APP_API_KEY &&\n      REACT_APP_AUTH_DOMAIN &&\n      REACT_APP_DB_URL &&\n      REACT_APP_PROJECT_ID\n    )\n  ) {\n    throw new Error('FB_CONF missing');\n  }\n})();\nconst FIREBASE_CONFIG = {\n  apiKey: REACT_APP_API_KEY,\n  projectId: REACT_APP_PROJECT_ID,\n  databaseURL: REACT_APP_DB_URL,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FB_APP_ID,\n  measurementId: REACT_APP_MESUREMENT_ID,\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\nfirebase\n  .firestore()\n  .enablePersistence({ synchronizeTabs: true })\n  .catch((err) => {\n    if (err.code === 'unimplemented') {\n      log.error('persistence not supported on the current browser');\n    }\n  });\n\nexport const REDUX_FIREBASE_CONF: ReactReduxFirebaseProviderProps = {\n  firebase,\n  dispatch: AppStore.dispatch,\n  createFirestoreInstance,\n  config: { userProfile: 'users', useFirestoreForProfile: true },\n};\n","const reportWebVitals = (onPerfEntry?: (...args: unknown[]) => void): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n});\n\nexport default theme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport log from 'loglevel';\nimport ReactDOM from 'react-dom';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './index.scss';\n\nimport App from './App';\nimport { REDUX_FIREBASE_CONF } from './firebase';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { StoreProvider } from './state';\nimport AppTheme from './views/styles/theme';\n\nconst { NODE_ENV } = process.env;\n// disables logging in production release\nlog.setLevel(NODE_ENV === 'production' ? 'SILENT' : 'trace');\n\nReactDOM.render(\n  <StoreProvider>\n    <ReactReduxFirebaseProvider {...REDUX_FIREBASE_CONF}>\n      <ThemeProvider theme={AppTheme}>\n        <App />\n      </ThemeProvider>\n    </ReactReduxFirebaseProvider>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export type IndexMapType = {\n  section: {\n    [key: number]: {\n      litIndex: [number, number];\n      chapIndex: [number, number];\n    };\n  };\n  litChapMap: { [key: number]: [number, number] };\n};\n\nexport type Transliterator = {\n  id: number;\n  name: string;\n  lang: string;\n  rank?: number;\n};\n\ntype BaseType = {\n  value: string;\n  id: number;\n};\n\ntype Kural = BaseType;\ntype Section = BaseType;\ntype Literature = BaseType;\ntype Chapter = BaseType;\n\ntype Category = 'section' | 'chapter' | 'literature' | 'kural';\ntype RootCategory = Exclude<Category, 'kural'>;\ntype CategoryBaseTypeMap = Record<Category, BaseType>;\n\ntype KuralMixin = {\n  kural: Kural;\n  section: Section;\n  literature: Literature;\n  chapter: Chapter;\n};\n\ntype SearchResult = {\n  type: SearchTypes;\n  item: BaseType;\n  category: Category;\n  keyword: string;\n};\n\ntype SectionSearchType = 'BySectionNo' | 'BySectionContains';\ntype LiteratureSearchType = 'ByLiteratureNo' | 'ByLiteratureContains';\ntype ChapterSearchType = 'ByChapterNo' | 'ByChapterContains';\ntype KuralSearchType =\n  | 'ByKuralNo'\n  | 'ByKuralContains'\n  | 'ByKuralStartsWith'\n  | 'ByKuralEndsWith';\ntype KuralDetailSearchType = 'ByKuralDetailContains';\ntype SearchTypes =\n  | KuralSearchType\n  | SectionSearchType\n  | LiteratureSearchType\n  | ChapterSearchType\n  | KuralDetailSearchType;\n\nexport type KuralDetail = Record<string, string>;\nexport type {\n  BaseType,\n  Kural,\n  Section,\n  Literature,\n  Chapter,\n  KuralMixin,\n  Category,\n  RootCategory,\n  CategoryBaseTypeMap,\n  SearchResult,\n  SearchTypes,\n};\n\nexport type SearchCategoryTypes = Category | 'detail' | 'all';\n\nexport enum FontSizeType {\n  TINY = 'TINY',\n  SMALL = 'SMALL',\n  MEDIUM = 'MEDIUM',\n  LARGE = 'LARGE',\n  BIG = 'BIG',\n}\nexport type BackgroundColorItem = { label: string; color: string };\nexport type AppDisplay = {\n  color: string;\n  background: BackgroundColorItem;\n};\nexport type UserPreference = {\n  display: AppDisplay;\n  language: {\n    primary: string;\n    secondary: string[];\n  };\n  fontSizeType: FontSizeType;\n  transilterators?: number[];\n};\n\nexport type UserFavourite = {\n  category: Exclude<Category, 'section' | 'literature'>;\n  datetime: Date;\n  id: number;\n};\n\nexport type User = {\n  id: string;\n  favorites: UserFavourite[];\n  preference: UserPreference;\n};\n","/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  RootCategory,\n  IndexMapType,\n  isCategoryValidErr,\n  isItemInRange,\n} from './';\nimport { Category } from './types';\n\nconst getLiteratureNoFromChapterNo = (\n  INDEX_MAP: IndexMapType,\n  chapterNo: number\n): number => {\n  isCategoryValidErr('chapter', chapterNo);\n  return Number(\n    Object.keys(INDEX_MAP.litChapMap).find((litId) =>\n      isItemInRange(chapterNo, INDEX_MAP.litChapMap[Number(litId)])\n    )\n  );\n};\n\nconst getSectionNoByLiteratureNo = (\n  INDEX_MAP: IndexMapType,\n  literatureNo: number\n): number => {\n  isCategoryValidErr('literature', literatureNo);\n  return Number(\n    Object.keys(INDEX_MAP.section)\n      .map((secId: string) => ({\n        section: secId,\n        litIndex: INDEX_MAP.section[Number(secId)].litIndex,\n      }))\n      .find((map) => isItemInRange(literatureNo, map.litIndex))?.section\n  );\n};\n\nexport const getCategoryIds = (\n  INDEX_MAP: IndexMapType,\n  category: RootCategory,\n  categoryId: number\n): Partial<Record<RootCategory, number>> => {\n  isCategoryValidErr(category, categoryId);\n  let result: Partial<Record<RootCategory, number>> = {\n    [category]: categoryId,\n  };\n  switch (category) {\n    case 'chapter':\n      result = {\n        ...result,\n        literature: getLiteratureNoFromChapterNo(INDEX_MAP, result.chapter!!),\n      };\n    case 'literature':\n      result = {\n        ...result,\n        section: getSectionNoByLiteratureNo(INDEX_MAP, result.literature!!),\n      };\n    case 'section':\n      break;\n  }\n  return result;\n};\n\nexport const CATEGORY_COLORS: Record<Category | 'default', string> = {\n  section: 'rgba(162, 43, 47,0.8)',\n  literature: 'cadetblue',\n  chapter: 'rgba(215, 22, 64, 0.8)',\n  kural: '#3f51b5',\n  default: 'blueviolet',\n};\n","import firebase from 'firebase';\nimport log from 'loglevel';\n\nexport const firestoreGetCacheFirst = async (\n  ref:\n    | firebase.firestore.CollectionReference<firebase.firestore.DocumentData>\n    | firebase.firestore.Query<firebase.firestore.DocumentData>\n): Promise<\n  firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n> => {\n  let result: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n  try {\n    result = await ref.get({ source: 'cache' });\n    if (result.empty) {\n      throw new Error('result not exists in cache');\n    }\n    log.debug(`fetches from cache`);\n  } catch (err) {\n    result = await ref.get({ source: 'server' });\n  }\n  return result;\n};\n","/* eslint-disable no-fallthrough */\nimport firebase from 'firebase';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, BaseType, Chapter } from './';\nimport { firestoreGetCacheFirst } from './firestore';\nimport {\n  FontSizeType,\n  IndexMapType,\n  Literature,\n  SearchCategoryTypes,\n  SearchResult,\n  Section,\n} from './types';\n\nexport const getKuralIndex = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<IndexMapType> => {\n  const indexSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP.INDEX_MAP)\n  );\n  const getDocData = (\n    key: 'section' | 'litChapMap'\n  ):\n    | firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n    | undefined =>\n    indexSnapshot.docs.find(\n      (doc: firebase.firestore.DocumentData) => doc.id === key\n    );\n  return {\n    section: getDocData('section')?.data(),\n    litChapMap: getDocData('litChapMap')?.data(),\n  } as IndexMapType;\n};\n\nexport const getAllBaseItems = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string,\n  collectionKey: keyof typeof COLLECTION_NAME_MAP\n): Promise<BaseType[]> => {\n  const sectionSnapshot = await firestoreGetCacheFirst(\n    firestore.collection(COLLECTION_NAME_MAP[collectionKey])\n  );\n  return sectionSnapshot.docs.map((doc: firebase.firestore.DocumentData) => ({\n    id: Number(doc.id),\n    value: doc.data()[lang] as string,\n  }));\n};\n\nexport const getAllSections = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Section[]> => await getAllBaseItems(firestore, lang, 'SECTION');\n\nexport const getAllChapter = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Chapter[]> => await getAllBaseItems(firestore, lang, 'CHAPTER');\n\nexport const getAllLiterature = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Literature[]> => {\n  return getAllBaseItems(firestore, lang, 'LITERATURE');\n};\n\nexport const findChapterNoFromKuralNo = (kuralNo: number): number =>\n  Math.ceil(kuralNo / 10);\n\nexport const isResultOfType = (\n  result: SearchResult,\n  type: SearchCategoryTypes\n): boolean => {\n  const resType = result.type;\n  if (type === 'chapter') {\n    return resType.startsWith('ByChapter');\n  }\n  if (type === 'kural') {\n    return resType.startsWith('ByKural');\n  }\n  if (type === 'detail') {\n    return resType.startsWith('ByKuralDetail');\n  }\n  if (type === 'section') {\n    return resType.startsWith('BySection');\n  }\n  if (type === 'literature') {\n    return resType.startsWith('ByLiterature');\n  }\n  return false;\n};\n\nexport const FONT_SIZE_MAP: Record<FontSizeType, number> = {\n  BIG: 24,\n  LARGE: 21,\n  MEDIUM: 18,\n  SMALL: 15,\n  TINY: 12,\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { isCategoryValidErr, COLLECTION_NAME_MAP, KuralDetail } from './';\n\nexport const getKurals = async (\n  firestore: ExtendedFirestoreInstance,\n  lang: string\n): Promise<Record<number, string>> => {\n  const kuralSnapshotRef = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL)\n    .doc(lang)\n    .get();\n  return (kuralSnapshotRef.data() || {}) as Record<number, string>;\n};\n\nexport const getKuralDetail = async (\n  firestore: ExtendedFirestoreInstance,\n  kId: number\n): Promise<KuralDetail> => {\n  isCategoryValidErr('kural', kId);\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.KURAL_DETAIL)\n    .doc(`${kId}`)\n    .get();\n  return snapshot.data() as Record<string, string>;\n};\n\nexport const getKuralIdsOfChapter = (chapter: number): number[] => {\n  isCategoryValidErr('chapter', chapter);\n  const startKuralNo = (chapter - 1) * 10 + 1;\n  const kuralRangeIds = Array.from(Array(10).keys()).map(\n    (i) => startKuralNo + i\n  );\n  return kuralRangeIds;\n};\n","import { ExtendedFirestoreInstance } from 'react-redux-firebase';\n\nimport { COLLECTION_NAME_MAP, Transliterator } from './';\n\ntype TransliteratorDocumentData = Omit<Transliterator, 'id'>;\nexport const getAllTransliterators = async (\n  firestore: ExtendedFirestoreInstance\n): Promise<Transliterator[]> => {\n  const transliteratorSnapRef = await firestore\n    .collection(COLLECTION_NAME_MAP.TRANSLITERATOR)\n    .get();\n  return transliteratorSnapRef.docs.map((doc) => ({\n    id: Number(doc.id),\n    ...(doc.data() as TransliteratorDocumentData),\n  }));\n};\n","import firebase from 'firebase/app';\nimport { ExtendedFirestoreInstance } from 'react-redux-firebase';\nimport { ANONYOMOUS_USER } from 'src/state/settings';\n\nimport { COLLECTION_NAME_MAP } from '.';\nimport { User } from './types';\n\ntype UserPreferenceDocument = Omit<User, 'id'>;\nexport const getUserPreferences = async (\n  firestore: ExtendedFirestoreInstance,\n  userId: string\n): Promise<User> => {\n  const snapshot = await firestore\n    .collection(COLLECTION_NAME_MAP.USER)\n    .where(firebase.firestore.FieldPath.documentId(), '==', userId)\n    .limit(1)\n    .get();\n  if (snapshot.empty) {\n    throw new Error('user not found');\n  }\n  const userDocRef = snapshot.docs[0];\n  return {\n    id: userDocRef.id,\n    ...(userDocRef.data() as UserPreferenceDocument),\n  };\n};\n\nexport const updateUserPreference = async (\n  firestore: ExtendedFirestoreInstance,\n  user: User\n): Promise<void> => {\n  if (user.id !== ANONYOMOUS_USER.id) {\n    await firestore\n      .collection(COLLECTION_NAME_MAP.USER)\n      .doc(`${user.id}`)\n      .set(user);\n  }\n};\n","import { BaseType, Category } from 'src/lib/api';\n\ntype isItemValidType = (key: number) => boolean;\nconst isSectionNoValid: isItemValidType = (section) =>\n  section >= 1 && section <= 3;\nconst isLiteratureNoValid: isItemValidType = (literature) =>\n  literature >= 1 && literature <= 13;\nconst isChapterNoValid: isItemValidType = (chapter) =>\n  chapter >= 1 && chapter <= 133;\nconst isKuralNoValid: isItemValidType = (kuralNo) =>\n  kuralNo >= 1 && kuralNo <= 1330;\n\ntype getItemByPositionType = (key: number) => number;\nconst getSectionPrev: getItemByPositionType = (section) =>\n  section === 1 ? 3 : section - 1;\nconst getSectionNext: getItemByPositionType = (section) =>\n  section === 3 ? 1 : section + 1;\nconst getLiteraturePrev: getItemByPositionType = (literature) =>\n  literature === 1 ? 13 : literature - 1;\nconst getLiteratureNext: getItemByPositionType = (literature) =>\n  literature === 13 ? 1 : literature + 1;\nconst getChapterPrev: getItemByPositionType = (chapter) =>\n  chapter === 1 ? 133 : chapter - 1;\nconst getChapterNext: getItemByPositionType = (chapter) =>\n  chapter === 133 ? 1 : chapter + 1;\nconst getKuralPrev: getItemByPositionType = (kural) =>\n  kural === 1 ? 1330 : kural - 1;\nconst getKuralNext: getItemByPositionType = (kural) =>\n  kural === 1330 ? 1 : kural + 1;\n\nexport const isItemInRange = (item: number, range: [number, number]): boolean =>\n  item >= range[0] && item <= range[1];\n\nexport const fillRange = (range: [number, number]): number[] => {\n  const out = [];\n  for (let i = range[0]; i <= range[1]; i++) {\n    out.push(i);\n  }\n  return out;\n};\n\nexport const isCategoryValid = (type: Category, id: number): boolean => {\n  switch (type) {\n    case 'section':\n      return isSectionNoValid(id);\n    case 'literature':\n      return isLiteratureNoValid(id);\n    case 'chapter':\n      return isChapterNoValid(id);\n    case 'kural':\n      return isKuralNoValid(id);\n  }\n};\n\nexport const isCategoryValidErr = (type: Category, id: number): void => {\n  if (!isCategoryValid(type, id)) {\n    throw new Error(`${type} with ${id} not found`);\n  }\n};\n\nexport const getItemByPosition = (\n  type: Category,\n  direction: 'PREV' | 'NEXT',\n  id: number\n): number => {\n  switch (type) {\n    case 'section':\n      return direction === 'NEXT' ? getSectionNext(id) : getSectionPrev(id);\n    case 'literature':\n      return direction === 'NEXT'\n        ? getLiteratureNext(id)\n        : getLiteraturePrev(id);\n    case 'chapter':\n      return direction === 'NEXT' ? getChapterNext(id) : getChapterPrev(id);\n    case 'kural':\n      return direction === 'NEXT' ? getKuralNext(id) : getKuralPrev(id);\n  }\n};\n\ntype BaseTypeMap = Record<number, BaseType>;\nexport const toBaseTypeMap = (list: BaseType[]): BaseTypeMap => {\n  return list.reduce(\n    (oldVal, item) => ({ ...oldVal, [item.id]: item }),\n    {} as BaseTypeMap\n  );\n};\n","import { getCategoryIds } from './category';\nimport { findChapterNoFromKuralNo } from './common';\nimport { Category, IndexMapType, RootCategory } from './types';\n\ntype TopRouteMap = Partial<Record<RootCategory, number>>;\nexport type CategoryIdMapPartial = Partial<Record<Category, number>>;\n\nconst rootCategoryFinder = (\n  INDEX_MAP: IndexMapType,\n  options: TopRouteMap\n): TopRouteMap => {\n  const category = Object.keys(options).find(\n    (k: string) => options[k as RootCategory]\n  ) as RootCategory;\n  return INDEX_MAP && category\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      getCategoryIds(INDEX_MAP, category, options[category]!!)\n    : {};\n};\n\nexport const findCategoryRouteMap = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): CategoryIdMapPartial => {\n  const { kural, chapter, literature, section } = filter;\n  const KURALS_CHAPTER = kural ? findChapterNoFromKuralNo(kural) : chapter;\n  return {\n    ...rootCategoryFinder(INDEX_MAP, {\n      chapter: KURALS_CHAPTER,\n      literature,\n      section,\n    }),\n    ...(kural ? { kural } : {}),\n  };\n};\n\nexport const convertCategoryRouteMapToString = (\n  filter: CategoryIdMapPartial\n): string => {\n  return (['section', 'literature', 'chapter', 'kural'] as Category[])\n    .filter((k) => filter[k as Category] !== undefined)\n    .map((k) => filter[k as Category])\n    .join('/');\n};\n\nexport const findCategoryRouteMapString = (\n  INDEX_MAP: IndexMapType,\n  filter: CategoryIdMapPartial\n): string => {\n  return convertCategoryRouteMapToString(\n    findCategoryRouteMap(INDEX_MAP, filter)\n  );\n};\n","import { Transliterator, User } from './types';\n\nexport const getUserPreferedLanguages = (user: User): string[] => {\n  const { primary, secondary } = user.preference.language;\n  return [primary, ...secondary];\n};\n\nexport const findTransliteratorsOfLanguage = (\n  language: string[],\n  tMap: Record<number, Transliterator>\n): Record<number, Transliterator> => {\n  if (!language.length) {\n    return tMap;\n  }\n  return Object.entries(tMap)\n    .filter(([id, transliterator]) =>\n      language.some((lang) => lang === transliterator.lang)\n    )\n    .reduce((state, [key, value]) => ({ ...state, [key]: value }), {});\n};\n\nexport type UserTransliteratorMap = [Transliterator[], Transliterator[]];\n\ntype getUserTransliteratorsType = (\n  u: User,\n  tMap: Record<number, Transliterator>\n) => UserTransliteratorMap;\nexport const getUserTransliterators: getUserTransliteratorsType = (\n  user,\n  transliteratorsMap\n) => {\n  const result: UserTransliteratorMap = [[], []];\n  const userLangs = getUserPreferedLanguages(user);\n  const userTMap = findTransliteratorsOfLanguage(userLangs, transliteratorsMap);\n  const userLikedTransliterators = user.preference?.transilterators || [];\n  if (userLikedTransliterators.length) {\n    const allowedTransliteratorIds = Object.keys(userTMap).map((t) =>\n      parseInt(t)\n    );\n    result[0] = userLikedTransliterators\n      .filter((t) => allowedTransliteratorIds.includes(t))\n      .map((t) => userTMap[t]);\n    result[1] = allowedTransliteratorIds\n      .filter((t) => !userLikedTransliterators.includes(t))\n      .map((t) => userTMap[t]);\n  } else {\n    result[0] = Object.values(userTMap);\n  }\n  return result;\n};\n","import { Category, SearchCategoryTypes } from './types';\n\nexport const COLLECTION_NAME_MAP = {\n  KURAL: 'KURAL',\n  TRANSLITERATOR: 'TRANSLITERATOR',\n  LANGUAGE: 'LANGUAGE',\n  DISPLAY: 'DISPLAY_CONFIG',\n  KURAL_DETAIL: 'KURAL_DETAIL',\n  USER: 'USER',\n  SECTION: 'SECTION',\n  USER_FAVOURITES: 'USER_FAVOURITES',\n  USER_SEARCH_HISTORY: 'USER_SEARCH_HISTORY',\n  LITERATURE: 'LITERATURE',\n  CHAPTER: 'CHAPTER',\n  INDEX_MAP: 'INDEX_MAP',\n};\n\nexport const SearchCategoryLabelMap: Record<SearchCategoryTypes, string> = {\n  all: 'அனைத்தும்',\n  chapter: 'அதிகாரம்',\n  kural: 'குறள்',\n  literature: 'இயல்',\n  section: 'பால்',\n  detail: 'உரை',\n};\n\nexport const ITEMS_COUNT_MAP: Record<Category, number> = {\n  kural: 1330,\n  chapter: 133,\n  literature: 13,\n  section: 3,\n};\n\nexport * from './category';\nexport * from './common';\nexport * from './kural';\nexport * from './transilterator';\nexport * from './types';\nexport * from './preference';\nexport * from './util';\nexport * from './route';\nexport * from './user';\n"],"sourceRoot":""}